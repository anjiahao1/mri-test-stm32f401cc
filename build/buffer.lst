ARM GAS  /tmp/ccERbtyv.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"buffer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "mri/core/buffer.c"
  20              		.section	.text.HexCharToNibble,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HexCharToNibble:
  27              	.LVL0:
  28              	.LFB3:
  29              		.file 2 "mri/core/hex_convert.h"
   1:mri/core/hex_convert.h **** /* Copyright 2012 Adam Green (https://github.com/adamgreen/)
   2:mri/core/hex_convert.h **** 
   3:mri/core/hex_convert.h ****    Licensed under the Apache License, Version 2.0 (the "License");
   4:mri/core/hex_convert.h ****    you may not use this file except in compliance with the License.
   5:mri/core/hex_convert.h ****    You may obtain a copy of the License at
   6:mri/core/hex_convert.h **** 
   7:mri/core/hex_convert.h ****        http://www.apache.org/licenses/LICENSE-2.0
   8:mri/core/hex_convert.h **** 
   9:mri/core/hex_convert.h ****    Unless required by applicable law or agreed to in writing, software
  10:mri/core/hex_convert.h ****    distributed under the License is distributed on an "AS IS" BASIS,
  11:mri/core/hex_convert.h ****    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:mri/core/hex_convert.h ****    See the License for the specific language governing permissions and
  13:mri/core/hex_convert.h ****    limitations under the License.
  14:mri/core/hex_convert.h **** */
  15:mri/core/hex_convert.h **** /* Hexadecimal to/from text conversion helpers. */
  16:mri/core/hex_convert.h **** #ifndef HEX_CONVERT_H_
  17:mri/core/hex_convert.h **** #define HEX_CONVERT_H_
  18:mri/core/hex_convert.h **** 
  19:mri/core/hex_convert.h **** #include <core/try_catch.h>
  20:mri/core/hex_convert.h **** 
  21:mri/core/hex_convert.h **** #define EXTRACT_HI_NIBBLE(X) (((X) >> 4) & 0xF)
  22:mri/core/hex_convert.h **** #define EXTRACT_LO_NIBBLE(X) ((X) & 0xF)
  23:mri/core/hex_convert.h **** 
  24:mri/core/hex_convert.h **** static const char NibbleToHexChar[16] = { '0', '1', '2', '3', '4', '5', '6', '7',
  25:mri/core/hex_convert.h ****                                           '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };
  26:mri/core/hex_convert.h **** 
  27:mri/core/hex_convert.h **** static inline int HexCharToNibble(unsigned char HexChar)
  28:mri/core/hex_convert.h **** {
  30              		.loc 2 28 1 view -0
ARM GAS  /tmp/ccERbtyv.s 			page 2


  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  29:mri/core/hex_convert.h ****     if (HexChar >= 'a' && HexChar <= 'f')
  35              		.loc 2 29 5 view .LVU1
  36              		.loc 2 29 24 is_stmt 0 view .LVU2
  37 0000 A0F16103 		sub	r3, r0, #97
  38 0004 DBB2     		uxtb	r3, r3
  39              		.loc 2 29 8 view .LVU3
  40 0006 052B     		cmp	r3, #5
  41 0008 0BD9     		bls	.L6
  30:mri/core/hex_convert.h ****     {
  31:mri/core/hex_convert.h ****         return HexChar - 'a' + 10;
  32:mri/core/hex_convert.h ****     }
  33:mri/core/hex_convert.h ****     if (HexChar >= 'A' && HexChar <= 'F')
  42              		.loc 2 33 5 is_stmt 1 view .LVU4
  43              		.loc 2 33 24 is_stmt 0 view .LVU5
  44 000a A0F14103 		sub	r3, r0, #65
  45 000e DBB2     		uxtb	r3, r3
  46              		.loc 2 33 8 view .LVU6
  47 0010 052B     		cmp	r3, #5
  48 0012 08D9     		bls	.L7
  34:mri/core/hex_convert.h ****     {
  35:mri/core/hex_convert.h ****         return HexChar - 'A' + 10;
  36:mri/core/hex_convert.h ****     }
  37:mri/core/hex_convert.h ****     if (HexChar >= '0' && HexChar <= '9')
  49              		.loc 2 37 5 is_stmt 1 view .LVU7
  50              		.loc 2 37 24 is_stmt 0 view .LVU8
  51 0014 A0F13003 		sub	r3, r0, #48
  52 0018 DBB2     		uxtb	r3, r3
  53              		.loc 2 37 8 view .LVU9
  54 001a 092B     		cmp	r3, #9
  55 001c 05D8     		bhi	.L5
  38:mri/core/hex_convert.h ****     {
  39:mri/core/hex_convert.h ****         return HexChar - '0';
  56              		.loc 2 39 9 is_stmt 1 view .LVU10
  57              		.loc 2 39 24 is_stmt 0 view .LVU11
  58 001e 3038     		subs	r0, r0, #48
  59              	.LVL1:
  60              		.loc 2 39 24 view .LVU12
  61 0020 7047     		bx	lr
  62              	.LVL2:
  63              	.L6:
  31:mri/core/hex_convert.h ****     }
  64              		.loc 2 31 9 is_stmt 1 view .LVU13
  31:mri/core/hex_convert.h ****     }
  65              		.loc 2 31 30 is_stmt 0 view .LVU14
  66 0022 5738     		subs	r0, r0, #87
  67              	.LVL3:
  31:mri/core/hex_convert.h ****     }
  68              		.loc 2 31 30 view .LVU15
  69 0024 7047     		bx	lr
  70              	.LVL4:
  71              	.L7:
  35:mri/core/hex_convert.h ****     }
  72              		.loc 2 35 9 is_stmt 1 view .LVU16
ARM GAS  /tmp/ccERbtyv.s 			page 3


  35:mri/core/hex_convert.h ****     }
  73              		.loc 2 35 30 is_stmt 0 view .LVU17
  74 0026 3738     		subs	r0, r0, #55
  75              	.LVL5:
  35:mri/core/hex_convert.h ****     }
  76              		.loc 2 35 30 view .LVU18
  77 0028 7047     		bx	lr
  78              	.LVL6:
  79              	.L5:
  40:mri/core/hex_convert.h ****     }
  41:mri/core/hex_convert.h **** 
  42:mri/core/hex_convert.h ****     __throw_and_return(invalidHexDigitException, -1);
  80              		.loc 2 42 5 is_stmt 1 view .LVU19
  81              	.LBB44:
  82              	.LBI44:
  83              		.file 3 "mri/core/try_catch.h"
   1:mri/core/try_catch.h **** /* Copyright 2014 Adam Green (https://github.com/adamgreen/)
   2:mri/core/try_catch.h **** 
   3:mri/core/try_catch.h ****    Licensed under the Apache License, Version 2.0 (the "License");
   4:mri/core/try_catch.h ****    you may not use this file except in compliance with the License.
   5:mri/core/try_catch.h ****    You may obtain a copy of the License at
   6:mri/core/try_catch.h **** 
   7:mri/core/try_catch.h ****        http://www.apache.org/licenses/LICENSE-2.0
   8:mri/core/try_catch.h **** 
   9:mri/core/try_catch.h ****    Unless required by applicable law or agreed to in writing, software
  10:mri/core/try_catch.h ****    distributed under the License is distributed on an "AS IS" BASIS,
  11:mri/core/try_catch.h ****    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:mri/core/try_catch.h ****    See the License for the specific language governing permissions and
  13:mri/core/try_catch.h ****    limitations under the License.
  14:mri/core/try_catch.h **** */
  15:mri/core/try_catch.h **** /* Very rough exception handling like macros for C. */
  16:mri/core/try_catch.h **** #ifndef MRI_TRY_CATCH_H_
  17:mri/core/try_catch.h **** #define MRI_TRY_CATCH_H_
  18:mri/core/try_catch.h **** 
  19:mri/core/try_catch.h **** #define noException                         0
  20:mri/core/try_catch.h **** #define bufferOverrunException              1
  21:mri/core/try_catch.h **** #define invalidHexDigitException            2
  22:mri/core/try_catch.h **** #define invalidValueException               3
  23:mri/core/try_catch.h **** #define invalidArgumentException            4
  24:mri/core/try_catch.h **** #define timeoutException                    5
  25:mri/core/try_catch.h **** #define invalidIndexException               6
  26:mri/core/try_catch.h **** #define notFoundException                   7
  27:mri/core/try_catch.h **** #define exceededHardwareResourcesException  8
  28:mri/core/try_catch.h **** #define invalidDecDigitException            9
  29:mri/core/try_catch.h **** #define memFaultException                   10
  30:mri/core/try_catch.h **** #define mriMaxException                     15
  31:mri/core/try_catch.h **** 
  32:mri/core/try_catch.h **** extern int mriExceptionCode;
  33:mri/core/try_catch.h **** 
  34:mri/core/try_catch.h **** 
  35:mri/core/try_catch.h **** /* Allow an application including MRI to extend with their own exception codes and replace the belo
  36:mri/core/try_catch.h **** #ifndef MRI_SKIP_TRY_CATCH_MACRO_DEFINES
  37:mri/core/try_catch.h **** 
  38:mri/core/try_catch.h **** /* On Linux, it is possible that __try and __catch are already defined. */
  39:mri/core/try_catch.h **** #undef __try
  40:mri/core/try_catch.h **** #undef __catch
  41:mri/core/try_catch.h **** 
ARM GAS  /tmp/ccERbtyv.s 			page 4


  42:mri/core/try_catch.h **** #define __throws
  43:mri/core/try_catch.h **** 
  44:mri/core/try_catch.h **** #define __try \
  45:mri/core/try_catch.h ****         do \
  46:mri/core/try_catch.h ****         { \
  47:mri/core/try_catch.h ****             clearExceptionCode();
  48:mri/core/try_catch.h **** 
  49:mri/core/try_catch.h **** #define __throwing_func(X) \
  50:mri/core/try_catch.h ****             X; \
  51:mri/core/try_catch.h ****             if (mriExceptionCode) \
  52:mri/core/try_catch.h ****                 break;
  53:mri/core/try_catch.h **** 
  54:mri/core/try_catch.h **** #define __catch \
  55:mri/core/try_catch.h ****         } while (0); \
  56:mri/core/try_catch.h ****         if (mriExceptionCode)
  57:mri/core/try_catch.h **** 
  58:mri/core/try_catch.h **** #define __throw(EXCEPTION) return ((void)setExceptionCode(EXCEPTION))
  59:mri/core/try_catch.h **** 
  60:mri/core/try_catch.h **** #define __throw_and_return(EXCEPTION, RETURN) return (setExceptionCode(EXCEPTION), (RETURN))
  61:mri/core/try_catch.h **** 
  62:mri/core/try_catch.h **** #define __rethrow return
  63:mri/core/try_catch.h **** 
  64:mri/core/try_catch.h **** #define __rethrow_and_return(RETURN) return RETURN
  65:mri/core/try_catch.h **** 
  66:mri/core/try_catch.h **** static inline int getExceptionCode(void)
  67:mri/core/try_catch.h **** {
  68:mri/core/try_catch.h ****     return mriExceptionCode;
  69:mri/core/try_catch.h **** }
  70:mri/core/try_catch.h **** 
  71:mri/core/try_catch.h **** static inline void setExceptionCode(int exceptionCode)
  84              		.loc 3 71 20 view .LVU20
  85              	.LBB45:
  72:mri/core/try_catch.h **** {
  73:mri/core/try_catch.h ****     mriExceptionCode = exceptionCode > mriExceptionCode ? exceptionCode : mriExceptionCode;
  86              		.loc 3 73 5 view .LVU21
  87              		.loc 3 73 73 is_stmt 0 view .LVU22
  88 002a 044A     		ldr	r2, .L8
  89 002c 1368     		ldr	r3, [r2]
  90 002e 022B     		cmp	r3, #2
  91 0030 B8BF     		it	lt
  92 0032 0223     		movlt	r3, #2
  93              		.loc 3 73 22 view .LVU23
  94 0034 1360     		str	r3, [r2]
  95              	.LVL7:
  96              		.loc 3 73 22 view .LVU24
  97              	.LBE45:
  98              	.LBE44:
  99              		.loc 2 42 5 view .LVU25
 100 0036 4FF0FF30 		mov	r0, #-1
 101              	.LVL8:
  43:mri/core/hex_convert.h **** }
 102              		.loc 2 43 1 view .LVU26
 103 003a 7047     		bx	lr
 104              	.L9:
 105              		.align	2
 106              	.L8:
 107 003c 00000000 		.word	mriExceptionCode
ARM GAS  /tmp/ccERbtyv.s 			page 5


 108              		.cfi_endproc
 109              	.LFE3:
 111              		.section	.text.recordThatBufferOverrunHasOccurred,"ax",%progbits
 112              		.align	1
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	recordThatBufferOverrunHasOccurred:
 118              	.LVL9:
 119              	.LFB14:
   1:mri/core/buffer.c **** /* Copyright 2022 Adam Green (https://github.com/adamgreen/)
   2:mri/core/buffer.c **** 
   3:mri/core/buffer.c ****    Licensed under the Apache License, Version 2.0 (the "License");
   4:mri/core/buffer.c ****    you may not use this file except in compliance with the License.
   5:mri/core/buffer.c ****    You may obtain a copy of the License at
   6:mri/core/buffer.c **** 
   7:mri/core/buffer.c ****        http://www.apache.org/licenses/LICENSE-2.0
   8:mri/core/buffer.c **** 
   9:mri/core/buffer.c ****    Unless required by applicable law or agreed to in writing, software
  10:mri/core/buffer.c ****    distributed under the License is distributed on an "AS IS" BASIS,
  11:mri/core/buffer.c ****    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12:mri/core/buffer.c ****    See the License for the specific language governing permissions and
  13:mri/core/buffer.c ****    limitations under the License.
  14:mri/core/buffer.c **** */
  15:mri/core/buffer.c **** /*  'Class' which represents a text buffer.  Has routines to both extract and inject strings of var
  16:mri/core/buffer.c ****     buffer while verifying that no overflow takes place. */
  17:mri/core/buffer.c **** #include <limits.h>
  18:mri/core/buffer.c **** #include <core/libc.h>
  19:mri/core/buffer.c **** #include <core/buffer.h>
  20:mri/core/buffer.c **** #include <core/hex_convert.h>
  21:mri/core/buffer.c **** #include <core/try_catch.h>
  22:mri/core/buffer.c **** 
  23:mri/core/buffer.c **** void Buffer_Init(Buffer* pBuffer, char* pBufferStart, size_t bufferSize)
  24:mri/core/buffer.c **** {
  25:mri/core/buffer.c ****     pBuffer->pStart = pBufferStart;
  26:mri/core/buffer.c ****     pBuffer->pEnd = pBufferStart + bufferSize;
  27:mri/core/buffer.c ****     Buffer_Reset(pBuffer);
  28:mri/core/buffer.c **** }
  29:mri/core/buffer.c **** 
  30:mri/core/buffer.c **** 
  31:mri/core/buffer.c **** void Buffer_Reset(Buffer* pBuffer)
  32:mri/core/buffer.c **** {
  33:mri/core/buffer.c ****     pBuffer->pCurrent = pBuffer->pStart;
  34:mri/core/buffer.c **** }
  35:mri/core/buffer.c **** 
  36:mri/core/buffer.c **** 
  37:mri/core/buffer.c **** void Buffer_SetEndOfBuffer(Buffer* pBuffer)
  38:mri/core/buffer.c **** {
  39:mri/core/buffer.c ****     if (pBuffer->pCurrent < pBuffer->pEnd)
  40:mri/core/buffer.c ****         pBuffer->pEnd = pBuffer->pCurrent;
  41:mri/core/buffer.c **** }
  42:mri/core/buffer.c **** 
  43:mri/core/buffer.c **** 
  44:mri/core/buffer.c **** void Buffer_Advance(Buffer* pBuffer, size_t amount)
  45:mri/core/buffer.c **** {
  46:mri/core/buffer.c ****     size_t bytesLeft = Buffer_BytesLeft(pBuffer);
  47:mri/core/buffer.c ****     if (amount > bytesLeft)
ARM GAS  /tmp/ccERbtyv.s 			page 6


  48:mri/core/buffer.c ****         amount = bytesLeft;
  49:mri/core/buffer.c ****     pBuffer->pCurrent += amount;
  50:mri/core/buffer.c **** }
  51:mri/core/buffer.c **** 
  52:mri/core/buffer.c **** 
  53:mri/core/buffer.c **** size_t Buffer_BytesLeft(Buffer* pBuffer)
  54:mri/core/buffer.c **** {
  55:mri/core/buffer.c ****     if (Buffer_OverrunDetected(pBuffer))
  56:mri/core/buffer.c ****         return 0;
  57:mri/core/buffer.c **** 
  58:mri/core/buffer.c ****     return (size_t)(pBuffer->pEnd - pBuffer->pCurrent);
  59:mri/core/buffer.c **** }
  60:mri/core/buffer.c **** 
  61:mri/core/buffer.c **** 
  62:mri/core/buffer.c **** size_t Buffer_GetLength(Buffer* pBuffer)
  63:mri/core/buffer.c **** {
  64:mri/core/buffer.c ****     if (pBuffer->pStart > pBuffer->pEnd)
  65:mri/core/buffer.c ****         return 0;
  66:mri/core/buffer.c **** 
  67:mri/core/buffer.c ****     return (size_t)(pBuffer->pEnd - pBuffer->pStart);
  68:mri/core/buffer.c **** }
  69:mri/core/buffer.c **** 
  70:mri/core/buffer.c **** 
  71:mri/core/buffer.c **** char* Buffer_GetArray(Buffer* pBuffer)
  72:mri/core/buffer.c **** {
  73:mri/core/buffer.c ****     return pBuffer->pStart;
  74:mri/core/buffer.c **** }
  75:mri/core/buffer.c **** 
  76:mri/core/buffer.c **** 
  77:mri/core/buffer.c **** int Buffer_OverrunDetected(Buffer* pBuffer)
  78:mri/core/buffer.c **** {
  79:mri/core/buffer.c ****     return pBuffer->pCurrent > pBuffer->pEnd;
  80:mri/core/buffer.c **** }
  81:mri/core/buffer.c **** 
  82:mri/core/buffer.c **** 
  83:mri/core/buffer.c **** static void throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(Buffer* pBuffer, size_t siz
  84:mri/core/buffer.c **** static void recordThatBufferOverrunHasOccurred(Buffer* pBuffer);
  85:mri/core/buffer.c **** void Buffer_WriteChar(Buffer* pBuffer, char character)
  86:mri/core/buffer.c **** {
  87:mri/core/buffer.c ****     __try
  88:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 1);
  89:mri/core/buffer.c ****     __catch
  90:mri/core/buffer.c ****         __rethrow;
  91:mri/core/buffer.c **** 
  92:mri/core/buffer.c ****     *(pBuffer->pCurrent++) = character;
  93:mri/core/buffer.c **** }
  94:mri/core/buffer.c **** 
  95:mri/core/buffer.c **** static void throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(Buffer* pBuffer, size_t siz
  96:mri/core/buffer.c **** {
  97:mri/core/buffer.c ****     if (Buffer_BytesLeft(pBuffer) < size)
  98:mri/core/buffer.c ****     {
  99:mri/core/buffer.c ****         recordThatBufferOverrunHasOccurred(pBuffer);
 100:mri/core/buffer.c ****         __throw(bufferOverrunException);
 101:mri/core/buffer.c ****     }
 102:mri/core/buffer.c **** }
 103:mri/core/buffer.c **** 
 104:mri/core/buffer.c **** static void recordThatBufferOverrunHasOccurred(Buffer* pBuffer)
ARM GAS  /tmp/ccERbtyv.s 			page 7


 105:mri/core/buffer.c **** {
 120              		.loc 1 105 1 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 106:mri/core/buffer.c ****     pBuffer->pCurrent = pBuffer->pEnd + 1;
 125              		.loc 1 106 5 view .LVU28
 126              		.loc 1 106 32 is_stmt 0 view .LVU29
 127 0000 4368     		ldr	r3, [r0, #4]
 128              		.loc 1 106 39 view .LVU30
 129 0002 0133     		adds	r3, r3, #1
 130              		.loc 1 106 23 view .LVU31
 131 0004 8360     		str	r3, [r0, #8]
 107:mri/core/buffer.c **** }
 132              		.loc 1 107 1 view .LVU32
 133 0006 7047     		bx	lr
 134              		.cfi_endproc
 135              	.LFE14:
 137              		.section	.text.pushBackLastChar,"ax",%progbits
 138              		.align	1
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	pushBackLastChar:
 144              	.LVL10:
 145              	.LFB24:
 108:mri/core/buffer.c **** 
 109:mri/core/buffer.c **** 
 110:mri/core/buffer.c **** char Buffer_ReadChar(Buffer* pBuffer)
 111:mri/core/buffer.c **** {
 112:mri/core/buffer.c ****     __try
 113:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 1);
 114:mri/core/buffer.c ****     __catch
 115:mri/core/buffer.c ****         __rethrow_and_return('\0');
 116:mri/core/buffer.c **** 
 117:mri/core/buffer.c ****     return *(pBuffer->pCurrent++);
 118:mri/core/buffer.c **** }
 119:mri/core/buffer.c **** 
 120:mri/core/buffer.c **** 
 121:mri/core/buffer.c **** void Buffer_WriteByteAsHex(Buffer* pBuffer, uint8_t byte)
 122:mri/core/buffer.c **** {
 123:mri/core/buffer.c ****     __try
 124:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 2);
 125:mri/core/buffer.c ****     __catch
 126:mri/core/buffer.c ****         __rethrow;
 127:mri/core/buffer.c **** 
 128:mri/core/buffer.c ****     *(pBuffer->pCurrent++) = NibbleToHexChar[EXTRACT_HI_NIBBLE(byte)];
 129:mri/core/buffer.c ****     *(pBuffer->pCurrent++) = NibbleToHexChar[EXTRACT_LO_NIBBLE(byte)];
 130:mri/core/buffer.c **** }
 131:mri/core/buffer.c **** 
 132:mri/core/buffer.c **** 
 133:mri/core/buffer.c **** uint8_t Buffer_ReadByteAsHex(Buffer* pBuffer)
 134:mri/core/buffer.c **** {
 135:mri/core/buffer.c ****     unsigned char byte;
 136:mri/core/buffer.c **** 
 137:mri/core/buffer.c ****     __try
ARM GAS  /tmp/ccERbtyv.s 			page 8


 138:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 2);
 139:mri/core/buffer.c ****     __catch
 140:mri/core/buffer.c ****         __rethrow_and_return(0);
 141:mri/core/buffer.c **** 
 142:mri/core/buffer.c ****     __try
 143:mri/core/buffer.c ****     {
 144:mri/core/buffer.c ****         __throwing_func( byte = HexCharToNibble(pBuffer->pCurrent[0]) << 4 );
 145:mri/core/buffer.c ****         __throwing_func( byte |= HexCharToNibble(pBuffer->pCurrent[1]) );
 146:mri/core/buffer.c ****     }
 147:mri/core/buffer.c ****     __catch
 148:mri/core/buffer.c ****     {
 149:mri/core/buffer.c ****         __rethrow_and_return(0x00);
 150:mri/core/buffer.c ****     }
 151:mri/core/buffer.c ****     pBuffer->pCurrent += 2;
 152:mri/core/buffer.c **** 
 153:mri/core/buffer.c ****     return byte;
 154:mri/core/buffer.c **** }
 155:mri/core/buffer.c **** 
 156:mri/core/buffer.c **** 
 157:mri/core/buffer.c **** void Buffer_WriteString(Buffer* pBuffer, const char* pString)
 158:mri/core/buffer.c **** {
 159:mri/core/buffer.c ****     Buffer_WriteSizedString(pBuffer, pString, mri_strlen(pString));
 160:mri/core/buffer.c **** }
 161:mri/core/buffer.c **** 
 162:mri/core/buffer.c **** 
 163:mri/core/buffer.c **** void Buffer_WriteSizedString(Buffer* pBuffer, const char* pString, size_t length)
 164:mri/core/buffer.c **** {
 165:mri/core/buffer.c ****     __try
 166:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, length);
 167:mri/core/buffer.c ****     __catch
 168:mri/core/buffer.c ****         __rethrow;
 169:mri/core/buffer.c **** 
 170:mri/core/buffer.c ****     while (length--)
 171:mri/core/buffer.c ****         *(pBuffer->pCurrent++) = *pString++;
 172:mri/core/buffer.c **** }
 173:mri/core/buffer.c **** 
 174:mri/core/buffer.c **** 
 175:mri/core/buffer.c **** void Buffer_WriteStringAsHex(Buffer* pBuffer, const char* pString)
 176:mri/core/buffer.c **** {
 177:mri/core/buffer.c ****     Buffer_WriteSizedStringAsHex(pBuffer, pString, mri_strlen(pString));
 178:mri/core/buffer.c **** }
 179:mri/core/buffer.c **** 
 180:mri/core/buffer.c **** 
 181:mri/core/buffer.c **** void Buffer_WriteSizedStringAsHex(Buffer* pBuffer, const char* pString, size_t length)
 182:mri/core/buffer.c **** {
 183:mri/core/buffer.c ****     while (length--)
 184:mri/core/buffer.c ****         Buffer_WriteByteAsHex(pBuffer, *pString++);
 185:mri/core/buffer.c **** }
 186:mri/core/buffer.c **** 
 187:mri/core/buffer.c **** 
 188:mri/core/buffer.c **** static uint32_t parseNextHexDigitAndAddNibbleToValue(Buffer* pBuffer, uint32_t currentValue);
 189:mri/core/buffer.c **** static void     pushBackLastChar(Buffer* pBuffer);
 190:mri/core/buffer.c **** static void     clearOverrun(Buffer* pBuffer);
 191:mri/core/buffer.c **** uint32_t Buffer_ReadUIntegerAsHex(Buffer* pBuffer)
 192:mri/core/buffer.c **** {
 193:mri/core/buffer.c ****     int      hexDigitsParsed;
 194:mri/core/buffer.c ****     uint32_t value = 0;
ARM GAS  /tmp/ccERbtyv.s 			page 9


 195:mri/core/buffer.c **** 
 196:mri/core/buffer.c ****     for (hexDigitsParsed = 0 ; ; hexDigitsParsed++)
 197:mri/core/buffer.c ****     {
 198:mri/core/buffer.c ****         __try
 199:mri/core/buffer.c ****             value = parseNextHexDigitAndAddNibbleToValue(pBuffer, value);
 200:mri/core/buffer.c ****         __catch
 201:mri/core/buffer.c ****             break;
 202:mri/core/buffer.c ****     }
 203:mri/core/buffer.c ****     /* Read buffer until non-hex digit or end of buffer was detected but don't want to return the i
 204:mri/core/buffer.c ****        or buffer overrun exception to the caller so clear out the exception code that might have go
 205:mri/core/buffer.c ****        the above loop. */
 206:mri/core/buffer.c ****     clearExceptionCode();
 207:mri/core/buffer.c ****     clearOverrun(pBuffer);
 208:mri/core/buffer.c **** 
 209:mri/core/buffer.c ****     if (hexDigitsParsed == 0)
 210:mri/core/buffer.c ****         __throw_and_return(invalidValueException, 0U);
 211:mri/core/buffer.c **** 
 212:mri/core/buffer.c ****     return value;
 213:mri/core/buffer.c **** }
 214:mri/core/buffer.c **** 
 215:mri/core/buffer.c **** static uint32_t parseNextHexDigitAndAddNibbleToValue(Buffer* pBuffer, uint32_t currentValue)
 216:mri/core/buffer.c **** {
 217:mri/core/buffer.c ****     char     nextChar;
 218:mri/core/buffer.c ****     uint32_t nibbleValue;
 219:mri/core/buffer.c **** 
 220:mri/core/buffer.c ****     __try
 221:mri/core/buffer.c ****         nextChar = Buffer_ReadChar(pBuffer);
 222:mri/core/buffer.c ****     __catch
 223:mri/core/buffer.c ****         __rethrow_and_return(currentValue);
 224:mri/core/buffer.c **** 
 225:mri/core/buffer.c ****     __try
 226:mri/core/buffer.c ****     {
 227:mri/core/buffer.c ****         nibbleValue = HexCharToNibble(nextChar);
 228:mri/core/buffer.c ****     }
 229:mri/core/buffer.c ****     __catch
 230:mri/core/buffer.c ****     {
 231:mri/core/buffer.c ****         pushBackLastChar(pBuffer);
 232:mri/core/buffer.c ****         __rethrow_and_return(currentValue);
 233:mri/core/buffer.c ****     }
 234:mri/core/buffer.c **** 
 235:mri/core/buffer.c ****     return (currentValue << 4) + nibbleValue;
 236:mri/core/buffer.c **** }
 237:mri/core/buffer.c **** 
 238:mri/core/buffer.c **** static void pushBackLastChar(Buffer* pBuffer)
 239:mri/core/buffer.c **** {
 146              		.loc 1 239 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 240:mri/core/buffer.c ****     if (pBuffer->pCurrent > pBuffer->pStart)
 151              		.loc 1 240 5 view .LVU34
 152              		.loc 1 240 16 is_stmt 0 view .LVU35
 153 0000 8368     		ldr	r3, [r0, #8]
 154              		.loc 1 240 36 view .LVU36
 155 0002 0268     		ldr	r2, [r0]
 156              		.loc 1 240 8 view .LVU37
ARM GAS  /tmp/ccERbtyv.s 			page 10


 157 0004 9342     		cmp	r3, r2
 158 0006 01D9     		bls	.L11
 241:mri/core/buffer.c ****         pBuffer->pCurrent--;
 159              		.loc 1 241 9 is_stmt 1 view .LVU38
 160              		.loc 1 241 26 is_stmt 0 view .LVU39
 161 0008 013B     		subs	r3, r3, #1
 162 000a 8360     		str	r3, [r0, #8]
 163              	.L11:
 242:mri/core/buffer.c **** }
 164              		.loc 1 242 1 view .LVU40
 165 000c 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE24:
 169              		.section	.text.countLeadingZeroBytes,"ax",%progbits
 170              		.align	1
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 175              	countLeadingZeroBytes:
 176              	.LVL11:
 177              	.LFB27:
 243:mri/core/buffer.c **** 
 244:mri/core/buffer.c **** static void clearOverrun(Buffer* pBuffer)
 245:mri/core/buffer.c **** {
 246:mri/core/buffer.c ****     if (Buffer_OverrunDetected(pBuffer))
 247:mri/core/buffer.c ****         pBuffer->pCurrent = pBuffer->pEnd;
 248:mri/core/buffer.c **** }
 249:mri/core/buffer.c **** 
 250:mri/core/buffer.c **** 
 251:mri/core/buffer.c **** static int     countLeadingZeroBytes(uint32_t value);
 252:mri/core/buffer.c **** static uint8_t extractByteAtIndex(uint32_t value, int index);
 253:mri/core/buffer.c **** void Buffer_WriteUIntegerAsHex(Buffer* pBuffer, uint32_t value)
 254:mri/core/buffer.c **** {
 255:mri/core/buffer.c ****     int              leadingZeroBytes;
 256:mri/core/buffer.c ****     int              currentByteIndex;
 257:mri/core/buffer.c **** 
 258:mri/core/buffer.c ****     if (value == 0)
 259:mri/core/buffer.c ****     {
 260:mri/core/buffer.c ****         Buffer_WriteByteAsHex(pBuffer, 0);
 261:mri/core/buffer.c ****         return;
 262:mri/core/buffer.c ****     }
 263:mri/core/buffer.c **** 
 264:mri/core/buffer.c ****     leadingZeroBytes = countLeadingZeroBytes(value);
 265:mri/core/buffer.c ****     currentByteIndex = ((int)sizeof(value) - leadingZeroBytes) - 1;
 266:mri/core/buffer.c ****     while (currentByteIndex >= 0)
 267:mri/core/buffer.c ****     {
 268:mri/core/buffer.c ****         __try
 269:mri/core/buffer.c ****             Buffer_WriteByteAsHex(pBuffer, extractByteAtIndex(value, currentByteIndex--));
 270:mri/core/buffer.c ****         __catch
 271:mri/core/buffer.c ****             __rethrow;
 272:mri/core/buffer.c ****     }
 273:mri/core/buffer.c **** }
 274:mri/core/buffer.c **** 
 275:mri/core/buffer.c **** static int countLeadingZeroBytes(uint32_t value)
 276:mri/core/buffer.c **** {
 178              		.loc 1 276 1 is_stmt 1 view -0
 179              		.cfi_startproc
ARM GAS  /tmp/ccERbtyv.s 			page 11


 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              		.loc 1 276 1 is_stmt 0 view .LVU42
 184 0000 0246     		mov	r2, r0
 277:mri/core/buffer.c ****     uint32_t mask = 0xFF000000;
 185              		.loc 1 277 5 is_stmt 1 view .LVU43
 186              	.LVL12:
 278:mri/core/buffer.c ****     int      count = 0;
 187              		.loc 1 278 5 view .LVU44
 279:mri/core/buffer.c **** 
 280:mri/core/buffer.c ****     while (mask && 0 == (value & mask))
 188              		.loc 1 280 5 view .LVU45
 278:mri/core/buffer.c ****     int      count = 0;
 189              		.loc 1 278 14 is_stmt 0 view .LVU46
 190 0002 0020     		movs	r0, #0
 191              	.LVL13:
 277:mri/core/buffer.c ****     int      count = 0;
 192              		.loc 1 277 14 view .LVU47
 193 0004 4FF07F43 		mov	r3, #-16777216
 194              		.loc 1 280 11 view .LVU48
 195 0008 01E0     		b	.L14
 196              	.LVL14:
 197              	.L16:
 281:mri/core/buffer.c ****     {
 282:mri/core/buffer.c ****         count++;
 198              		.loc 1 282 9 is_stmt 1 view .LVU49
 199              		.loc 1 282 14 is_stmt 0 view .LVU50
 200 000a 0130     		adds	r0, r0, #1
 201              	.LVL15:
 283:mri/core/buffer.c ****         mask >>= 8;
 202              		.loc 1 283 9 is_stmt 1 view .LVU51
 203              		.loc 1 283 14 is_stmt 0 view .LVU52
 204 000c 1B0A     		lsrs	r3, r3, #8
 205              	.LVL16:
 206              	.L14:
 280:mri/core/buffer.c ****     {
 207              		.loc 1 280 17 is_stmt 1 view .LVU53
 208 000e 0BB1     		cbz	r3, .L13
 280:mri/core/buffer.c ****     {
 209              		.loc 1 280 17 is_stmt 0 discriminator 1 view .LVU54
 210 0010 1342     		tst	r3, r2
 211 0012 FAD0     		beq	.L16
 212              	.L13:
 284:mri/core/buffer.c ****     }
 285:mri/core/buffer.c **** 
 286:mri/core/buffer.c ****     return count;
 287:mri/core/buffer.c **** }
 213              		.loc 1 287 1 view .LVU55
 214 0014 7047     		bx	lr
 215              		.cfi_endproc
 216              	.LFE27:
 218              		.section	.text.extractByteAtIndex,"ax",%progbits
 219              		.align	1
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
ARM GAS  /tmp/ccERbtyv.s 			page 12


 224              	extractByteAtIndex:
 225              	.LVL17:
 226              	.LFB28:
 288:mri/core/buffer.c **** 
 289:mri/core/buffer.c **** static uint8_t extractByteAtIndex(uint32_t value, int index)
 290:mri/core/buffer.c **** {
 227              		.loc 1 290 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 291:mri/core/buffer.c ****     static const int bitsPerByte = 8;
 232              		.loc 1 291 5 view .LVU57
 292:mri/core/buffer.c ****     uint32_t         shiftAmount = index * bitsPerByte;
 233              		.loc 1 292 5 view .LVU58
 234              		.loc 1 292 42 is_stmt 0 view .LVU59
 235 0000 C900     		lsls	r1, r1, #3
 236              	.LVL18:
 293:mri/core/buffer.c **** 
 294:mri/core/buffer.c ****     return (uint8_t)((value >> shiftAmount) & 0xff);
 237              		.loc 1 294 5 is_stmt 1 view .LVU60
 238              		.loc 1 294 29 is_stmt 0 view .LVU61
 239 0002 C840     		lsrs	r0, r0, r1
 240              	.LVL19:
 295:mri/core/buffer.c **** }
 241              		.loc 1 295 1 view .LVU62
 242 0004 C0B2     		uxtb	r0, r0
 243 0006 7047     		bx	lr
 244              		.cfi_endproc
 245              	.LFE28:
 247              		.section	.text.convertToIntegerAndThrowIfOutOfRange,"ax",%progbits
 248              		.align	1
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	convertToIntegerAndThrowIfOutOfRange:
 254              	.LVL20:
 255              	.LFB30:
 296:mri/core/buffer.c **** 
 297:mri/core/buffer.c **** 
 298:mri/core/buffer.c **** static int32_t convertToIntegerAndThrowIfOutOfRange(int isNegative, uint32_t value);
 299:mri/core/buffer.c **** int32_t Buffer_ReadIntegerAsHex(Buffer* pBuffer)
 300:mri/core/buffer.c **** {
 301:mri/core/buffer.c ****     uint32_t value = 0;
 302:mri/core/buffer.c ****     int      isNegative = 0;
 303:mri/core/buffer.c **** 
 304:mri/core/buffer.c ****     __try
 305:mri/core/buffer.c ****     {
 306:mri/core/buffer.c ****         __throwing_func( isNegative = Buffer_IsNextCharEqualTo(pBuffer, '-') );
 307:mri/core/buffer.c ****         __throwing_func( value = Buffer_ReadUIntegerAsHex(pBuffer) );
 308:mri/core/buffer.c ****     }
 309:mri/core/buffer.c ****     __catch
 310:mri/core/buffer.c ****     {
 311:mri/core/buffer.c ****         __rethrow_and_return(0);
 312:mri/core/buffer.c ****     }
 313:mri/core/buffer.c **** 
 314:mri/core/buffer.c ****     return convertToIntegerAndThrowIfOutOfRange(isNegative, value);
ARM GAS  /tmp/ccERbtyv.s 			page 13


 315:mri/core/buffer.c **** }
 316:mri/core/buffer.c **** 
 317:mri/core/buffer.c **** static int32_t convertToIntegerAndThrowIfOutOfRange(int isNegative, uint32_t value)
 318:mri/core/buffer.c **** {
 256              		.loc 1 318 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 319:mri/core/buffer.c ****     if (!isNegative && value > INT_MAX)
 261              		.loc 1 319 5 view .LVU64
 262              		.loc 1 319 8 is_stmt 0 view .LVU65
 263 0000 60B9     		cbnz	r0, .L19
 264              		.loc 1 319 21 discriminator 1 view .LVU66
 265 0002 0029     		cmp	r1, #0
 266 0004 01DB     		blt	.L23
 267              	.L20:
 320:mri/core/buffer.c ****         __throw_and_return(invalidValueException, INT_MAX);
 321:mri/core/buffer.c **** 
 322:mri/core/buffer.c ****     if (isNegative && value > ((uint32_t)INT_MAX + 1))
 323:mri/core/buffer.c ****     {
 324:mri/core/buffer.c ****         __throw_and_return(invalidValueException, INT_MIN);
 325:mri/core/buffer.c ****     }
 326:mri/core/buffer.c **** 
 327:mri/core/buffer.c ****     return isNegative ? -(int)value : (int)value;
 268              		.loc 1 327 37 discriminator 2 view .LVU67
 269 0006 0846     		mov	r0, r1
 270              	.LVL21:
 328:mri/core/buffer.c **** }
 271              		.loc 1 328 1 discriminator 2 view .LVU68
 272 0008 7047     		bx	lr
 273              	.LVL22:
 274              	.L23:
 320:mri/core/buffer.c ****         __throw_and_return(invalidValueException, INT_MAX);
 275              		.loc 1 320 9 is_stmt 1 view .LVU69
 276              	.LBB46:
 277              	.LBI46:
  71:mri/core/try_catch.h **** {
 278              		.loc 3 71 20 view .LVU70
 279              	.LBB47:
 280              		.loc 3 73 5 view .LVU71
 281              		.loc 3 73 73 is_stmt 0 view .LVU72
 282 000a 0C4A     		ldr	r2, .L25
 283 000c 1368     		ldr	r3, [r2]
 284 000e 032B     		cmp	r3, #3
 285 0010 B8BF     		it	lt
 286 0012 0323     		movlt	r3, #3
 287              		.loc 3 73 22 view .LVU73
 288 0014 1360     		str	r3, [r2]
 289              	.LVL23:
 290              		.loc 3 73 22 view .LVU74
 291              	.LBE47:
 292              	.LBE46:
 320:mri/core/buffer.c ****         __throw_and_return(invalidValueException, INT_MAX);
 293              		.loc 1 320 9 view .LVU75
 294 0016 6FF00040 		mvn	r0, #-2147483648
 295              	.LVL24:
ARM GAS  /tmp/ccERbtyv.s 			page 14


 320:mri/core/buffer.c ****         __throw_and_return(invalidValueException, INT_MAX);
 296              		.loc 1 320 9 view .LVU76
 297 001a 7047     		bx	lr
 298              	.LVL25:
 299              	.L19:
 322:mri/core/buffer.c ****     {
 300              		.loc 1 322 20 discriminator 1 view .LVU77
 301 001c B1F1004F 		cmp	r1, #-2147483648
 302 0020 03D8     		bhi	.L24
 327:mri/core/buffer.c **** }
 303              		.loc 1 327 5 is_stmt 1 view .LVU78
 327:mri/core/buffer.c **** }
 304              		.loc 1 327 37 is_stmt 0 view .LVU79
 305 0022 0028     		cmp	r0, #0
 306 0024 EFD0     		beq	.L20
 327:mri/core/buffer.c **** }
 307              		.loc 1 327 37 discriminator 1 view .LVU80
 308 0026 4842     		rsbs	r0, r1, #0
 309              	.LVL26:
 327:mri/core/buffer.c **** }
 310              		.loc 1 327 37 discriminator 1 view .LVU81
 311 0028 7047     		bx	lr
 312              	.LVL27:
 313              	.L24:
 324:mri/core/buffer.c ****     }
 314              		.loc 1 324 9 is_stmt 1 view .LVU82
 315              	.LBB48:
 316              	.LBI48:
  71:mri/core/try_catch.h **** {
 317              		.loc 3 71 20 view .LVU83
 318              	.LBB49:
 319              		.loc 3 73 5 view .LVU84
 320              		.loc 3 73 73 is_stmt 0 view .LVU85
 321 002a 044A     		ldr	r2, .L25
 322 002c 1368     		ldr	r3, [r2]
 323 002e 032B     		cmp	r3, #3
 324 0030 B8BF     		it	lt
 325 0032 0323     		movlt	r3, #3
 326              		.loc 3 73 22 view .LVU86
 327 0034 1360     		str	r3, [r2]
 328              	.LVL28:
 329              		.loc 3 73 22 view .LVU87
 330              	.LBE49:
 331              	.LBE48:
 324:mri/core/buffer.c ****     }
 332              		.loc 1 324 9 view .LVU88
 333 0036 4FF00040 		mov	r0, #-2147483648
 334              	.LVL29:
 324:mri/core/buffer.c ****     }
 335              		.loc 1 324 9 view .LVU89
 336 003a 7047     		bx	lr
 337              	.L26:
 338              		.align	2
 339              	.L25:
 340 003c 00000000 		.word	mriExceptionCode
 341              		.cfi_endproc
 342              	.LFE30:
ARM GAS  /tmp/ccERbtyv.s 			page 15


 344              		.section	.text.peekAtNextChar,"ax",%progbits
 345              		.align	1
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 350              	peekAtNextChar:
 351              	.LVL30:
 352              	.LFB35:
 329:mri/core/buffer.c **** 
 330:mri/core/buffer.c **** 
 331:mri/core/buffer.c **** static int32_t calculateAbsoluteValueAndWriteMinusSignForNegativeValue(Buffer* pBuffer, int32_t val
 332:mri/core/buffer.c **** void Buffer_WriteIntegerAsHex(Buffer* pBuffer, int32_t value)
 333:mri/core/buffer.c **** {
 334:mri/core/buffer.c ****     __try
 335:mri/core/buffer.c ****     {
 336:mri/core/buffer.c ****         __throwing_func(value = calculateAbsoluteValueAndWriteMinusSignForNegativeValue(pBuffer, va
 337:mri/core/buffer.c ****         __throwing_func(Buffer_WriteUIntegerAsHex(pBuffer, (uint32_t)value));
 338:mri/core/buffer.c ****     }
 339:mri/core/buffer.c ****     __catch
 340:mri/core/buffer.c ****     {
 341:mri/core/buffer.c ****         __rethrow;
 342:mri/core/buffer.c ****     }
 343:mri/core/buffer.c **** }
 344:mri/core/buffer.c **** 
 345:mri/core/buffer.c **** static int32_t calculateAbsoluteValueAndWriteMinusSignForNegativeValue(Buffer* pBuffer, int32_t val
 346:mri/core/buffer.c **** {
 347:mri/core/buffer.c ****     if (value < 0)
 348:mri/core/buffer.c ****     {
 349:mri/core/buffer.c ****         value = -value;
 350:mri/core/buffer.c ****         Buffer_WriteChar(pBuffer, '-');
 351:mri/core/buffer.c ****     }
 352:mri/core/buffer.c **** 
 353:mri/core/buffer.c ****     return value;
 354:mri/core/buffer.c **** }
 355:mri/core/buffer.c **** 
 356:mri/core/buffer.c **** 
 357:mri/core/buffer.c **** static void throwExceptionIfBufferLeftIsSmallerThan(Buffer* pBuffer, size_t size);
 358:mri/core/buffer.c **** static char peekAtNextChar(Buffer* pBuffer);
 359:mri/core/buffer.c **** static void advanceToNextChar(Buffer* pBuffer);
 360:mri/core/buffer.c **** int Buffer_IsNextCharEqualTo(Buffer* pBuffer, char thisChar)
 361:mri/core/buffer.c **** {
 362:mri/core/buffer.c ****     __try
 363:mri/core/buffer.c ****         throwExceptionIfBufferLeftIsSmallerThan(pBuffer, 1);
 364:mri/core/buffer.c ****     __catch
 365:mri/core/buffer.c ****         __rethrow_and_return(0);
 366:mri/core/buffer.c **** 
 367:mri/core/buffer.c ****     if (peekAtNextChar(pBuffer) == thisChar)
 368:mri/core/buffer.c ****     {
 369:mri/core/buffer.c ****         advanceToNextChar(pBuffer);
 370:mri/core/buffer.c ****         return 1;
 371:mri/core/buffer.c ****     }
 372:mri/core/buffer.c **** 
 373:mri/core/buffer.c ****     return 0;
 374:mri/core/buffer.c **** }
 375:mri/core/buffer.c **** 
 376:mri/core/buffer.c **** static void throwExceptionIfBufferLeftIsSmallerThan(Buffer* pBuffer, size_t size)
 377:mri/core/buffer.c **** {
ARM GAS  /tmp/ccERbtyv.s 			page 16


 378:mri/core/buffer.c ****     if (Buffer_BytesLeft(pBuffer) < size)
 379:mri/core/buffer.c ****         __throw(bufferOverrunException);
 380:mri/core/buffer.c **** }
 381:mri/core/buffer.c **** 
 382:mri/core/buffer.c **** static char peekAtNextChar(Buffer* pBuffer)
 383:mri/core/buffer.c **** {
 353              		.loc 1 383 1 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 384:mri/core/buffer.c ****     return *pBuffer->pCurrent;
 358              		.loc 1 384 5 view .LVU91
 359              		.loc 1 384 20 is_stmt 0 view .LVU92
 360 0000 8368     		ldr	r3, [r0, #8]
 385:mri/core/buffer.c **** }
 361              		.loc 1 385 1 view .LVU93
 362 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 363              	.LVL31:
 364              		.loc 1 385 1 view .LVU94
 365 0004 7047     		bx	lr
 366              		.cfi_endproc
 367              	.LFE35:
 369              		.section	.text.advanceToNextChar,"ax",%progbits
 370              		.align	1
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 375              	advanceToNextChar:
 376              	.LVL32:
 377              	.LFB36:
 386:mri/core/buffer.c **** 
 387:mri/core/buffer.c **** static void advanceToNextChar(Buffer* pBuffer)
 388:mri/core/buffer.c **** {
 378              		.loc 1 388 1 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 389:mri/core/buffer.c ****     pBuffer->pCurrent++;
 383              		.loc 1 389 5 view .LVU96
 384              		.loc 1 389 12 is_stmt 0 view .LVU97
 385 0000 8368     		ldr	r3, [r0, #8]
 386              		.loc 1 389 22 view .LVU98
 387 0002 0133     		adds	r3, r3, #1
 388 0004 8360     		str	r3, [r0, #8]
 390:mri/core/buffer.c **** }
 389              		.loc 1 390 1 view .LVU99
 390 0006 7047     		bx	lr
 391              		.cfi_endproc
 392              	.LFE36:
 394              		.section	.text.mriBuffer_Reset,"ax",%progbits
 395              		.align	1
 396              		.global	mriBuffer_Reset
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
ARM GAS  /tmp/ccERbtyv.s 			page 17


 401              	mriBuffer_Reset:
 402              	.LVL33:
 403              	.LFB5:
  32:mri/core/buffer.c ****     pBuffer->pCurrent = pBuffer->pStart;
 404              		.loc 1 32 1 is_stmt 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
  33:mri/core/buffer.c **** }
 409              		.loc 1 33 5 view .LVU101
  33:mri/core/buffer.c **** }
 410              		.loc 1 33 32 is_stmt 0 view .LVU102
 411 0000 0368     		ldr	r3, [r0]
  33:mri/core/buffer.c **** }
 412              		.loc 1 33 23 view .LVU103
 413 0002 8360     		str	r3, [r0, #8]
  34:mri/core/buffer.c **** 
 414              		.loc 1 34 1 view .LVU104
 415 0004 7047     		bx	lr
 416              		.cfi_endproc
 417              	.LFE5:
 419              		.section	.text.mriBuffer_Init,"ax",%progbits
 420              		.align	1
 421              		.global	mriBuffer_Init
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 426              	mriBuffer_Init:
 427              	.LVL34:
 428              	.LFB4:
  24:mri/core/buffer.c ****     pBuffer->pStart = pBufferStart;
 429              		.loc 1 24 1 is_stmt 1 view -0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
  24:mri/core/buffer.c ****     pBuffer->pStart = pBufferStart;
 433              		.loc 1 24 1 is_stmt 0 view .LVU106
 434 0000 08B5     		push	{r3, lr}
 435              	.LCFI0:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 3, -8
 438              		.cfi_offset 14, -4
  25:mri/core/buffer.c ****     pBuffer->pEnd = pBufferStart + bufferSize;
 439              		.loc 1 25 5 is_stmt 1 view .LVU107
  25:mri/core/buffer.c ****     pBuffer->pEnd = pBufferStart + bufferSize;
 440              		.loc 1 25 21 is_stmt 0 view .LVU108
 441 0002 0160     		str	r1, [r0]
  26:mri/core/buffer.c ****     Buffer_Reset(pBuffer);
 442              		.loc 1 26 5 is_stmt 1 view .LVU109
  26:mri/core/buffer.c ****     Buffer_Reset(pBuffer);
 443              		.loc 1 26 34 is_stmt 0 view .LVU110
 444 0004 1144     		add	r1, r1, r2
 445              	.LVL35:
  26:mri/core/buffer.c ****     Buffer_Reset(pBuffer);
 446              		.loc 1 26 19 view .LVU111
 447 0006 4160     		str	r1, [r0, #4]
ARM GAS  /tmp/ccERbtyv.s 			page 18


  27:mri/core/buffer.c **** }
 448              		.loc 1 27 5 is_stmt 1 view .LVU112
 449 0008 FFF7FEFF 		bl	mriBuffer_Reset
 450              	.LVL36:
  28:mri/core/buffer.c **** 
 451              		.loc 1 28 1 is_stmt 0 view .LVU113
 452 000c 08BD     		pop	{r3, pc}
 453              		.cfi_endproc
 454              	.LFE4:
 456              		.section	.text.mriBuffer_SetEndOfBuffer,"ax",%progbits
 457              		.align	1
 458              		.global	mriBuffer_SetEndOfBuffer
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 463              	mriBuffer_SetEndOfBuffer:
 464              	.LVL37:
 465              	.LFB6:
  38:mri/core/buffer.c ****     if (pBuffer->pCurrent < pBuffer->pEnd)
 466              		.loc 1 38 1 is_stmt 1 view -0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
  39:mri/core/buffer.c ****         pBuffer->pEnd = pBuffer->pCurrent;
 471              		.loc 1 39 5 view .LVU115
  39:mri/core/buffer.c ****         pBuffer->pEnd = pBuffer->pCurrent;
 472              		.loc 1 39 16 is_stmt 0 view .LVU116
 473 0000 8368     		ldr	r3, [r0, #8]
  39:mri/core/buffer.c ****         pBuffer->pEnd = pBuffer->pCurrent;
 474              		.loc 1 39 36 view .LVU117
 475 0002 4268     		ldr	r2, [r0, #4]
  39:mri/core/buffer.c ****         pBuffer->pEnd = pBuffer->pCurrent;
 476              		.loc 1 39 8 view .LVU118
 477 0004 9342     		cmp	r3, r2
 478 0006 00D2     		bcs	.L32
  40:mri/core/buffer.c **** }
 479              		.loc 1 40 9 is_stmt 1 view .LVU119
  40:mri/core/buffer.c **** }
 480              		.loc 1 40 23 is_stmt 0 view .LVU120
 481 0008 4360     		str	r3, [r0, #4]
 482              	.L32:
  41:mri/core/buffer.c **** 
 483              		.loc 1 41 1 view .LVU121
 484 000a 7047     		bx	lr
 485              		.cfi_endproc
 486              	.LFE6:
 488              		.section	.text.mriBuffer_GetLength,"ax",%progbits
 489              		.align	1
 490              		.global	mriBuffer_GetLength
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 495              	mriBuffer_GetLength:
 496              	.LVL38:
 497              	.LFB9:
  63:mri/core/buffer.c ****     if (pBuffer->pStart > pBuffer->pEnd)
ARM GAS  /tmp/ccERbtyv.s 			page 19


 498              		.loc 1 63 1 is_stmt 1 view -0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
  64:mri/core/buffer.c ****         return 0;
 503              		.loc 1 64 5 view .LVU123
  64:mri/core/buffer.c ****         return 0;
 504              		.loc 1 64 16 is_stmt 0 view .LVU124
 505 0000 0368     		ldr	r3, [r0]
  64:mri/core/buffer.c ****         return 0;
 506              		.loc 1 64 34 view .LVU125
 507 0002 4068     		ldr	r0, [r0, #4]
 508              	.LVL39:
  64:mri/core/buffer.c ****         return 0;
 509              		.loc 1 64 8 view .LVU126
 510 0004 8342     		cmp	r3, r0
 511 0006 01D8     		bhi	.L36
  67:mri/core/buffer.c **** }
 512              		.loc 1 67 5 is_stmt 1 view .LVU127
  67:mri/core/buffer.c **** }
 513              		.loc 1 67 35 is_stmt 0 view .LVU128
 514 0008 C01A     		subs	r0, r0, r3
  67:mri/core/buffer.c **** }
 515              		.loc 1 67 12 view .LVU129
 516 000a 7047     		bx	lr
 517              	.L36:
  65:mri/core/buffer.c **** 
 518              		.loc 1 65 16 view .LVU130
 519 000c 0020     		movs	r0, #0
  68:mri/core/buffer.c **** 
 520              		.loc 1 68 1 view .LVU131
 521 000e 7047     		bx	lr
 522              		.cfi_endproc
 523              	.LFE9:
 525              		.section	.text.mriBuffer_GetArray,"ax",%progbits
 526              		.align	1
 527              		.global	mriBuffer_GetArray
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 532              	mriBuffer_GetArray:
 533              	.LVL40:
 534              	.LFB10:
  72:mri/core/buffer.c ****     return pBuffer->pStart;
 535              		.loc 1 72 1 is_stmt 1 view -0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539              		@ link register save eliminated.
  73:mri/core/buffer.c **** }
 540              		.loc 1 73 5 view .LVU133
  74:mri/core/buffer.c **** 
 541              		.loc 1 74 1 is_stmt 0 view .LVU134
 542 0000 0068     		ldr	r0, [r0]
 543              	.LVL41:
  74:mri/core/buffer.c **** 
ARM GAS  /tmp/ccERbtyv.s 			page 20


 544              		.loc 1 74 1 view .LVU135
 545 0002 7047     		bx	lr
 546              		.cfi_endproc
 547              	.LFE10:
 549              		.section	.text.mriBuffer_OverrunDetected,"ax",%progbits
 550              		.align	1
 551              		.global	mriBuffer_OverrunDetected
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 556              	mriBuffer_OverrunDetected:
 557              	.LVL42:
 558              	.LFB11:
  78:mri/core/buffer.c ****     return pBuffer->pCurrent > pBuffer->pEnd;
 559              		.loc 1 78 1 is_stmt 1 view -0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              		@ link register save eliminated.
  79:mri/core/buffer.c **** }
 564              		.loc 1 79 5 view .LVU137
  79:mri/core/buffer.c **** }
 565              		.loc 1 79 19 is_stmt 0 view .LVU138
 566 0000 8268     		ldr	r2, [r0, #8]
  79:mri/core/buffer.c **** }
 567              		.loc 1 79 39 view .LVU139
 568 0002 4068     		ldr	r0, [r0, #4]
 569              	.LVL43:
  80:mri/core/buffer.c **** 
 570              		.loc 1 80 1 view .LVU140
 571 0004 8242     		cmp	r2, r0
 572 0006 94BF     		ite	ls
 573 0008 0020     		movls	r0, #0
 574 000a 0120     		movhi	r0, #1
 575 000c 7047     		bx	lr
 576              		.cfi_endproc
 577              	.LFE11:
 579              		.section	.text.mriBuffer_BytesLeft,"ax",%progbits
 580              		.align	1
 581              		.global	mriBuffer_BytesLeft
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 586              	mriBuffer_BytesLeft:
 587              	.LVL44:
 588              	.LFB8:
  54:mri/core/buffer.c ****     if (Buffer_OverrunDetected(pBuffer))
 589              		.loc 1 54 1 is_stmt 1 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
  54:mri/core/buffer.c ****     if (Buffer_OverrunDetected(pBuffer))
 593              		.loc 1 54 1 is_stmt 0 view .LVU142
 594 0000 10B5     		push	{r4, lr}
 595              	.LCFI1:
 596              		.cfi_def_cfa_offset 8
 597              		.cfi_offset 4, -8
ARM GAS  /tmp/ccERbtyv.s 			page 21


 598              		.cfi_offset 14, -4
 599 0002 0446     		mov	r4, r0
  55:mri/core/buffer.c ****         return 0;
 600              		.loc 1 55 5 is_stmt 1 view .LVU143
  55:mri/core/buffer.c ****         return 0;
 601              		.loc 1 55 9 is_stmt 0 view .LVU144
 602 0004 FFF7FEFF 		bl	mriBuffer_OverrunDetected
 603              	.LVL45:
  55:mri/core/buffer.c ****         return 0;
 604              		.loc 1 55 8 view .LVU145
 605 0008 18B9     		cbnz	r0, .L41
  58:mri/core/buffer.c **** }
 606              		.loc 1 58 5 is_stmt 1 view .LVU146
  58:mri/core/buffer.c **** }
 607              		.loc 1 58 28 is_stmt 0 view .LVU147
 608 000a 6068     		ldr	r0, [r4, #4]
  58:mri/core/buffer.c **** }
 609              		.loc 1 58 44 view .LVU148
 610 000c A368     		ldr	r3, [r4, #8]
  58:mri/core/buffer.c **** }
 611              		.loc 1 58 35 view .LVU149
 612 000e C01A     		subs	r0, r0, r3
 613              	.L39:
  59:mri/core/buffer.c **** 
 614              		.loc 1 59 1 view .LVU150
 615 0010 10BD     		pop	{r4, pc}
 616              	.LVL46:
 617              	.L41:
  56:mri/core/buffer.c **** 
 618              		.loc 1 56 16 view .LVU151
 619 0012 0020     		movs	r0, #0
 620 0014 FCE7     		b	.L39
 621              		.cfi_endproc
 622              	.LFE8:
 624              		.section	.text.mriBuffer_Advance,"ax",%progbits
 625              		.align	1
 626              		.global	mriBuffer_Advance
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
 631              	mriBuffer_Advance:
 632              	.LVL47:
 633              	.LFB7:
  45:mri/core/buffer.c ****     size_t bytesLeft = Buffer_BytesLeft(pBuffer);
 634              		.loc 1 45 1 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
  45:mri/core/buffer.c ****     size_t bytesLeft = Buffer_BytesLeft(pBuffer);
 638              		.loc 1 45 1 is_stmt 0 view .LVU153
 639 0000 38B5     		push	{r3, r4, r5, lr}
 640              	.LCFI2:
 641              		.cfi_def_cfa_offset 16
 642              		.cfi_offset 3, -16
 643              		.cfi_offset 4, -12
 644              		.cfi_offset 5, -8
 645              		.cfi_offset 14, -4
ARM GAS  /tmp/ccERbtyv.s 			page 22


 646 0002 0446     		mov	r4, r0
 647 0004 0D46     		mov	r5, r1
  46:mri/core/buffer.c ****     if (amount > bytesLeft)
 648              		.loc 1 46 5 is_stmt 1 view .LVU154
  46:mri/core/buffer.c ****     if (amount > bytesLeft)
 649              		.loc 1 46 24 is_stmt 0 view .LVU155
 650 0006 FFF7FEFF 		bl	mriBuffer_BytesLeft
 651              	.LVL48:
  47:mri/core/buffer.c ****         amount = bytesLeft;
 652              		.loc 1 47 5 is_stmt 1 view .LVU156
  47:mri/core/buffer.c ****         amount = bytesLeft;
 653              		.loc 1 47 8 is_stmt 0 view .LVU157
 654 000a A842     		cmp	r0, r5
 655 000c 00D3     		bcc	.L44
 656 000e 2846     		mov	r0, r5
 657              	.LVL49:
 658              	.L44:
  49:mri/core/buffer.c **** }
 659              		.loc 1 49 5 is_stmt 1 view .LVU158
  49:mri/core/buffer.c **** }
 660              		.loc 1 49 12 is_stmt 0 view .LVU159
 661 0010 A368     		ldr	r3, [r4, #8]
  49:mri/core/buffer.c **** }
 662              		.loc 1 49 23 view .LVU160
 663 0012 0344     		add	r3, r3, r0
 664 0014 A360     		str	r3, [r4, #8]
  50:mri/core/buffer.c **** 
 665              		.loc 1 50 1 view .LVU161
 666 0016 38BD     		pop	{r3, r4, r5, pc}
  50:mri/core/buffer.c **** 
 667              		.loc 1 50 1 view .LVU162
 668              		.cfi_endproc
 669              	.LFE7:
 671              		.section	.text.throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan,"ax",%progbits
 672              		.align	1
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 677              	throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan:
 678              	.LVL50:
 679              	.LFB13:
  96:mri/core/buffer.c ****     if (Buffer_BytesLeft(pBuffer) < size)
 680              		.loc 1 96 1 is_stmt 1 view -0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
  96:mri/core/buffer.c ****     if (Buffer_BytesLeft(pBuffer) < size)
 684              		.loc 1 96 1 is_stmt 0 view .LVU164
 685 0000 38B5     		push	{r3, r4, r5, lr}
 686              	.LCFI3:
 687              		.cfi_def_cfa_offset 16
 688              		.cfi_offset 3, -16
 689              		.cfi_offset 4, -12
 690              		.cfi_offset 5, -8
 691              		.cfi_offset 14, -4
 692 0002 0546     		mov	r5, r0
 693 0004 0C46     		mov	r4, r1
ARM GAS  /tmp/ccERbtyv.s 			page 23


  97:mri/core/buffer.c ****     {
 694              		.loc 1 97 5 is_stmt 1 view .LVU165
  97:mri/core/buffer.c ****     {
 695              		.loc 1 97 9 is_stmt 0 view .LVU166
 696 0006 FFF7FEFF 		bl	mriBuffer_BytesLeft
 697              	.LVL51:
  97:mri/core/buffer.c ****     {
 698              		.loc 1 97 8 view .LVU167
 699 000a A042     		cmp	r0, r4
 700 000c 00D3     		bcc	.L49
 701              	.L46:
 102:mri/core/buffer.c **** 
 702              		.loc 1 102 1 view .LVU168
 703 000e 38BD     		pop	{r3, r4, r5, pc}
 704              	.LVL52:
 705              	.L49:
  99:mri/core/buffer.c ****         __throw(bufferOverrunException);
 706              		.loc 1 99 9 is_stmt 1 view .LVU169
 707 0010 2846     		mov	r0, r5
 708 0012 FFF7FEFF 		bl	recordThatBufferOverrunHasOccurred
 709              	.LVL53:
 100:mri/core/buffer.c ****     }
 710              		.loc 1 100 9 view .LVU170
 711              	.LBB50:
 712              	.LBI50:
  71:mri/core/try_catch.h **** {
 713              		.loc 3 71 20 view .LVU171
 714              	.LBB51:
 715              		.loc 3 73 5 view .LVU172
 716              		.loc 3 73 73 is_stmt 0 view .LVU173
 717 0016 034A     		ldr	r2, .L50
 718 0018 1368     		ldr	r3, [r2]
 719 001a 012B     		cmp	r3, #1
 720 001c B8BF     		it	lt
 721 001e 0123     		movlt	r3, #1
 722              		.loc 3 73 22 view .LVU174
 723 0020 1360     		str	r3, [r2]
 724              	.LVL54:
 725              		.loc 3 73 22 view .LVU175
 726              	.LBE51:
 727              	.LBE50:
 100:mri/core/buffer.c ****     }
 728              		.loc 1 100 9 view .LVU176
 729 0022 F4E7     		b	.L46
 730              	.L51:
 731              		.align	2
 732              	.L50:
 733 0024 00000000 		.word	mriExceptionCode
 734              		.cfi_endproc
 735              	.LFE13:
 737              		.section	.text.throwExceptionIfBufferLeftIsSmallerThan,"ax",%progbits
 738              		.align	1
 739              		.syntax unified
 740              		.thumb
 741              		.thumb_func
 743              	throwExceptionIfBufferLeftIsSmallerThan:
 744              	.LVL55:
ARM GAS  /tmp/ccERbtyv.s 			page 24


 745              	.LFB34:
 377:mri/core/buffer.c ****     if (Buffer_BytesLeft(pBuffer) < size)
 746              		.loc 1 377 1 is_stmt 1 view -0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 377:mri/core/buffer.c ****     if (Buffer_BytesLeft(pBuffer) < size)
 750              		.loc 1 377 1 is_stmt 0 view .LVU178
 751 0000 10B5     		push	{r4, lr}
 752              	.LCFI4:
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 4, -8
 755              		.cfi_offset 14, -4
 756 0002 0C46     		mov	r4, r1
 378:mri/core/buffer.c ****         __throw(bufferOverrunException);
 757              		.loc 1 378 5 is_stmt 1 view .LVU179
 378:mri/core/buffer.c ****         __throw(bufferOverrunException);
 758              		.loc 1 378 9 is_stmt 0 view .LVU180
 759 0004 FFF7FEFF 		bl	mriBuffer_BytesLeft
 760              	.LVL56:
 378:mri/core/buffer.c ****         __throw(bufferOverrunException);
 761              		.loc 1 378 8 view .LVU181
 762 0008 A042     		cmp	r0, r4
 763 000a 00D3     		bcc	.L55
 764              	.L52:
 380:mri/core/buffer.c **** 
 765              		.loc 1 380 1 view .LVU182
 766 000c 10BD     		pop	{r4, pc}
 767              	.LVL57:
 768              	.L55:
 379:mri/core/buffer.c **** }
 769              		.loc 1 379 9 is_stmt 1 view .LVU183
 770              	.LBB52:
 771              	.LBI52:
  71:mri/core/try_catch.h **** {
 772              		.loc 3 71 20 view .LVU184
 773              	.LBB53:
 774              		.loc 3 73 5 view .LVU185
 775              		.loc 3 73 73 is_stmt 0 view .LVU186
 776 000e 034A     		ldr	r2, .L56
 777 0010 1368     		ldr	r3, [r2]
 778 0012 012B     		cmp	r3, #1
 779 0014 B8BF     		it	lt
 780 0016 0123     		movlt	r3, #1
 781              		.loc 3 73 22 view .LVU187
 782 0018 1360     		str	r3, [r2]
 783              	.LVL58:
 784              		.loc 3 73 22 view .LVU188
 785              	.LBE53:
 786              	.LBE52:
 379:mri/core/buffer.c **** }
 787              		.loc 1 379 9 view .LVU189
 788 001a F7E7     		b	.L52
 789              	.L57:
 790              		.align	2
 791              	.L56:
 792 001c 00000000 		.word	mriExceptionCode
ARM GAS  /tmp/ccERbtyv.s 			page 25


 793              		.cfi_endproc
 794              	.LFE34:
 796              		.section	.text.matchesString,"ax",%progbits
 797              		.align	1
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 802              	matchesString:
 803              	.LVL59:
 804              	.LFB38:
 391:mri/core/buffer.c **** 
 392:mri/core/buffer.c **** 
 393:mri/core/buffer.c **** typedef struct CompareParams
 394:mri/core/buffer.c **** {
 395:mri/core/buffer.c ****     int     (*compareFuncPtr)(Buffer* pBuffer, const char* pDesiredString, size_t stringLength);
 396:mri/core/buffer.c ****     size_t  charLength;
 397:mri/core/buffer.c **** } CompareParams;
 398:mri/core/buffer.c **** 
 399:mri/core/buffer.c **** static int matchesString(CompareParams* pParams, Buffer* pBuffer, const char* pString, size_t strin
 400:mri/core/buffer.c **** static int doesBufferContainThisString(Buffer* pBuffer, const char* pDesiredString, size_t stringLe
 401:mri/core/buffer.c **** static int doesBufferContainThisHexString(Buffer* pBuffer, const char* pDesiredString, size_t strin
 402:mri/core/buffer.c **** static int hexStringCompare(Buffer* pBuffer, const char* pDesiredString, size_t stringLength);
 403:mri/core/buffer.c **** int Buffer_MatchesString(Buffer* pBuffer, const char* pString, size_t stringLength)
 404:mri/core/buffer.c **** {
 405:mri/core/buffer.c ****     CompareParams params = { doesBufferContainThisString, 1 };
 406:mri/core/buffer.c ****     return matchesString(&params, pBuffer, pString, stringLength);
 407:mri/core/buffer.c **** }
 408:mri/core/buffer.c **** 
 409:mri/core/buffer.c **** static int matchesString(CompareParams* pParams, Buffer* pBuffer, const char* pString, size_t strin
 410:mri/core/buffer.c **** {
 805              		.loc 1 410 1 is_stmt 1 view -0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              		.loc 1 410 1 is_stmt 0 view .LVU191
 810 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 811              	.LCFI5:
 812              		.cfi_def_cfa_offset 24
 813              		.cfi_offset 4, -24
 814              		.cfi_offset 5, -20
 815              		.cfi_offset 6, -16
 816              		.cfi_offset 7, -12
 817              		.cfi_offset 8, -8
 818              		.cfi_offset 14, -4
 819 0004 0646     		mov	r6, r0
 820 0006 0C46     		mov	r4, r1
 821 0008 1746     		mov	r7, r2
 822 000a 1D46     		mov	r5, r3
 411:mri/core/buffer.c ****     __try
 823              		.loc 1 411 5 is_stmt 1 view .LVU192
 824              		.loc 1 411 5 view .LVU193
 825              	.LBB54:
 826              	.LBI54:
  74:mri/core/try_catch.h **** }
  75:mri/core/try_catch.h **** 
  76:mri/core/try_catch.h **** static inline void clearExceptionCode(void)
 827              		.loc 3 76 20 view .LVU194
ARM GAS  /tmp/ccERbtyv.s 			page 26


 828              	.LBB55:
  77:mri/core/try_catch.h **** {
  78:mri/core/try_catch.h ****     mriExceptionCode = noException;
 829              		.loc 3 78 5 view .LVU195
 830              		.loc 3 78 22 is_stmt 0 view .LVU196
 831 000c DFF83C80 		ldr	r8, .L63
 832 0010 0023     		movs	r3, #0
 833              	.LVL60:
 834              		.loc 3 78 22 view .LVU197
 835 0012 C8F80030 		str	r3, [r8]
 836              	.LBE55:
 837              	.LBE54:
 412:mri/core/buffer.c ****         throwExceptionIfBufferLeftIsSmallerThan(pBuffer, stringLength * pParams->charLength);
 838              		.loc 1 412 9 is_stmt 1 view .LVU198
 839              		.loc 1 412 80 is_stmt 0 view .LVU199
 840 0016 4168     		ldr	r1, [r0, #4]
 841              	.LVL61:
 842              		.loc 1 412 9 view .LVU200
 843 0018 05FB01F1 		mul	r1, r5, r1
 844 001c 2046     		mov	r0, r4
 845              	.LVL62:
 846              		.loc 1 412 9 view .LVU201
 847 001e FFF7FEFF 		bl	throwExceptionIfBufferLeftIsSmallerThan
 848              	.LVL63:
 411:mri/core/buffer.c ****         throwExceptionIfBufferLeftIsSmallerThan(pBuffer, stringLength * pParams->charLength);
 849              		.loc 1 411 5 is_stmt 1 view .LVU202
 413:mri/core/buffer.c ****     __catch
 850              		.loc 1 413 5 view .LVU203
 851 0022 D8F80030 		ldr	r3, [r8]
 852 0026 73B9     		cbnz	r3, .L60
 414:mri/core/buffer.c ****         __rethrow_and_return(0);
 415:mri/core/buffer.c **** 
 416:mri/core/buffer.c ****     if(pParams->compareFuncPtr(pBuffer, pString, stringLength))
 853              		.loc 1 416 5 view .LVU204
 854              		.loc 1 416 15 is_stmt 0 view .LVU205
 855 0028 3368     		ldr	r3, [r6]
 856              		.loc 1 416 8 view .LVU206
 857 002a 2A46     		mov	r2, r5
 858 002c 3946     		mov	r1, r7
 859 002e 2046     		mov	r0, r4
 860 0030 9847     		blx	r3
 861              	.LVL64:
 862              		.loc 1 416 7 view .LVU207
 863 0032 08B9     		cbnz	r0, .L62
 864              	.L58:
 417:mri/core/buffer.c ****     {
 418:mri/core/buffer.c ****         pBuffer->pCurrent += stringLength * pParams->charLength;
 419:mri/core/buffer.c ****         return 1;
 420:mri/core/buffer.c ****     }
 421:mri/core/buffer.c **** 
 422:mri/core/buffer.c ****     return 0;
 423:mri/core/buffer.c **** }
 865              		.loc 1 423 1 view .LVU208
 866 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 867              	.LVL65:
 868              	.L62:
 418:mri/core/buffer.c ****         return 1;
ARM GAS  /tmp/ccERbtyv.s 			page 27


 869              		.loc 1 418 9 is_stmt 1 view .LVU209
 418:mri/core/buffer.c ****         return 1;
 870              		.loc 1 418 16 is_stmt 0 view .LVU210
 871 0038 A368     		ldr	r3, [r4, #8]
 418:mri/core/buffer.c ****         return 1;
 872              		.loc 1 418 52 view .LVU211
 873 003a 7268     		ldr	r2, [r6, #4]
 418:mri/core/buffer.c ****         return 1;
 874              		.loc 1 418 27 view .LVU212
 875 003c 05FB0233 		mla	r3, r5, r2, r3
 876 0040 A360     		str	r3, [r4, #8]
 419:mri/core/buffer.c ****     }
 877              		.loc 1 419 9 is_stmt 1 view .LVU213
 419:mri/core/buffer.c ****     }
 878              		.loc 1 419 16 is_stmt 0 view .LVU214
 879 0042 0120     		movs	r0, #1
 880 0044 F6E7     		b	.L58
 881              	.L60:
 414:mri/core/buffer.c **** 
 882              		.loc 1 414 9 view .LVU215
 883 0046 0020     		movs	r0, #0
 884 0048 F4E7     		b	.L58
 885              	.L64:
 886 004a 00BF     		.align	2
 887              	.L63:
 888 004c 00000000 		.word	mriExceptionCode
 889              		.cfi_endproc
 890              	.LFE38:
 892              		.section	.text.doesBufferContainThisString,"ax",%progbits
 893              		.align	1
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 898              	doesBufferContainThisString:
 899              	.LVL66:
 900              	.LFB39:
 424:mri/core/buffer.c **** 
 425:mri/core/buffer.c **** static int doesBufferContainThisString(Buffer* pBuffer, const char* pDesiredString, size_t stringLe
 426:mri/core/buffer.c **** {
 901              		.loc 1 426 1 is_stmt 1 view -0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		.loc 1 426 1 is_stmt 0 view .LVU217
 906 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 907              	.LCFI6:
 908              		.cfi_def_cfa_offset 24
 909              		.cfi_offset 3, -24
 910              		.cfi_offset 4, -20
 911              		.cfi_offset 5, -16
 912              		.cfi_offset 6, -12
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
 915 0002 0446     		mov	r4, r0
 916 0004 1546     		mov	r5, r2
 427:mri/core/buffer.c ****     const char* pBufferString = pBuffer->pCurrent;
 917              		.loc 1 427 5 is_stmt 1 view .LVU218
ARM GAS  /tmp/ccERbtyv.s 			page 28


 918              		.loc 1 427 17 is_stmt 0 view .LVU219
 919 0006 8768     		ldr	r7, [r0, #8]
 920              	.LVL67:
 428:mri/core/buffer.c **** 
 429:mri/core/buffer.c ****     return (mri_strncmp(pBufferString, pDesiredString, stringLength) == 0) &&
 921              		.loc 1 429 5 is_stmt 1 view .LVU220
 922              		.loc 1 429 13 is_stmt 0 view .LVU221
 923 0008 3846     		mov	r0, r7
 924              	.LVL68:
 925              		.loc 1 429 13 view .LVU222
 926 000a FFF7FEFF 		bl	mri_strncmp
 927              	.LVL69:
 928              		.loc 1 429 76 view .LVU223
 929 000e 70B9     		cbnz	r0, .L67
 930 0010 0646     		mov	r6, r0
 430:mri/core/buffer.c ****            (Buffer_BytesLeft(pBuffer) == stringLength ||
 931              		.loc 1 430 13 discriminator 1 view .LVU224
 932 0012 2046     		mov	r0, r4
 933 0014 FFF7FEFF 		bl	mriBuffer_BytesLeft
 934              	.LVL70:
 429:mri/core/buffer.c ****            (Buffer_BytesLeft(pBuffer) == stringLength ||
 935              		.loc 1 429 76 discriminator 1 view .LVU225
 936 0018 A842     		cmp	r0, r5
 937 001a 0BD0     		beq	.L68
 431:mri/core/buffer.c ****             pBufferString[stringLength] == ':' ||
 938              		.loc 1 431 26 view .LVU226
 939 001c 7B5D     		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 430:mri/core/buffer.c ****            (Buffer_BytesLeft(pBuffer) == stringLength ||
 940              		.loc 1 430 55 view .LVU227
 941 001e 3A2B     		cmp	r3, #58
 942 0020 0AD0     		beq	.L69
 943              		.loc 1 431 48 view .LVU228
 944 0022 3B2B     		cmp	r3, #59
 945 0024 0AD0     		beq	.L70
 432:mri/core/buffer.c ****             pBufferString[stringLength] == ';' ||
 946              		.loc 1 432 48 view .LVU229
 947 0026 2C2B     		cmp	r3, #44
 948 0028 02D1     		bne	.L65
 429:mri/core/buffer.c ****            (Buffer_BytesLeft(pBuffer) == stringLength ||
 949              		.loc 1 429 76 view .LVU230
 950 002a 0126     		movs	r6, #1
 951 002c 00E0     		b	.L65
 952              	.L67:
 953 002e 0026     		movs	r6, #0
 954              	.L65:
 433:mri/core/buffer.c ****             pBufferString[stringLength] == ',');
 434:mri/core/buffer.c **** }
 955              		.loc 1 434 1 view .LVU231
 956 0030 3046     		mov	r0, r6
 957 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 958              	.LVL71:
 959              	.L68:
 429:mri/core/buffer.c ****            (Buffer_BytesLeft(pBuffer) == stringLength ||
 960              		.loc 1 429 76 view .LVU232
 961 0034 0126     		movs	r6, #1
 962 0036 FBE7     		b	.L65
 963              	.L69:
ARM GAS  /tmp/ccERbtyv.s 			page 29


 964 0038 0126     		movs	r6, #1
 965 003a F9E7     		b	.L65
 966              	.L70:
 967 003c 0126     		movs	r6, #1
 968 003e F7E7     		b	.L65
 969              		.cfi_endproc
 970              	.LFE39:
 972              		.section	.text.clearOverrun,"ax",%progbits
 973              		.align	1
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 978              	clearOverrun:
 979              	.LVL72:
 980              	.LFB25:
 245:mri/core/buffer.c ****     if (Buffer_OverrunDetected(pBuffer))
 981              		.loc 1 245 1 is_stmt 1 view -0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 245:mri/core/buffer.c ****     if (Buffer_OverrunDetected(pBuffer))
 985              		.loc 1 245 1 is_stmt 0 view .LVU234
 986 0000 10B5     		push	{r4, lr}
 987              	.LCFI7:
 988              		.cfi_def_cfa_offset 8
 989              		.cfi_offset 4, -8
 990              		.cfi_offset 14, -4
 991 0002 0446     		mov	r4, r0
 246:mri/core/buffer.c ****         pBuffer->pCurrent = pBuffer->pEnd;
 992              		.loc 1 246 5 is_stmt 1 view .LVU235
 246:mri/core/buffer.c ****         pBuffer->pCurrent = pBuffer->pEnd;
 993              		.loc 1 246 9 is_stmt 0 view .LVU236
 994 0004 FFF7FEFF 		bl	mriBuffer_OverrunDetected
 995              	.LVL73:
 246:mri/core/buffer.c ****         pBuffer->pCurrent = pBuffer->pEnd;
 996              		.loc 1 246 8 view .LVU237
 997 0008 08B1     		cbz	r0, .L72
 247:mri/core/buffer.c **** }
 998              		.loc 1 247 9 is_stmt 1 view .LVU238
 247:mri/core/buffer.c **** }
 999              		.loc 1 247 36 is_stmt 0 view .LVU239
 1000 000a 6368     		ldr	r3, [r4, #4]
 247:mri/core/buffer.c **** }
 1001              		.loc 1 247 27 view .LVU240
 1002 000c A360     		str	r3, [r4, #8]
 1003              	.L72:
 248:mri/core/buffer.c **** 
 1004              		.loc 1 248 1 view .LVU241
 1005 000e 10BD     		pop	{r4, pc}
 248:mri/core/buffer.c **** 
 1006              		.loc 1 248 1 view .LVU242
 1007              		.cfi_endproc
 1008              	.LFE25:
 1010              		.section	.text.mriBuffer_WriteChar,"ax",%progbits
 1011              		.align	1
 1012              		.global	mriBuffer_WriteChar
 1013              		.syntax unified
ARM GAS  /tmp/ccERbtyv.s 			page 30


 1014              		.thumb
 1015              		.thumb_func
 1017              	mriBuffer_WriteChar:
 1018              	.LVL74:
 1019              	.LFB12:
  86:mri/core/buffer.c ****     __try
 1020              		.loc 1 86 1 is_stmt 1 view -0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
  86:mri/core/buffer.c ****     __try
 1024              		.loc 1 86 1 is_stmt 0 view .LVU244
 1025 0000 70B5     		push	{r4, r5, r6, lr}
 1026              	.LCFI8:
 1027              		.cfi_def_cfa_offset 16
 1028              		.cfi_offset 4, -16
 1029              		.cfi_offset 5, -12
 1030              		.cfi_offset 6, -8
 1031              		.cfi_offset 14, -4
 1032 0002 0446     		mov	r4, r0
 1033 0004 0D46     		mov	r5, r1
  87:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 1);
 1034              		.loc 1 87 5 is_stmt 1 view .LVU245
  87:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 1);
 1035              		.loc 1 87 5 view .LVU246
 1036              	.LBB56:
 1037              	.LBI56:
  76:mri/core/try_catch.h **** {
 1038              		.loc 3 76 20 view .LVU247
 1039              	.LBB57:
 1040              		.loc 3 78 5 view .LVU248
 1041              		.loc 3 78 22 is_stmt 0 view .LVU249
 1042 0006 064E     		ldr	r6, .L78
 1043 0008 0023     		movs	r3, #0
 1044 000a 3360     		str	r3, [r6]
 1045              	.LBE57:
 1046              	.LBE56:
  88:mri/core/buffer.c ****     __catch
 1047              		.loc 1 88 9 is_stmt 1 view .LVU250
 1048 000c 0121     		movs	r1, #1
 1049              	.LVL75:
  88:mri/core/buffer.c ****     __catch
 1050              		.loc 1 88 9 is_stmt 0 view .LVU251
 1051 000e FFF7FEFF 		bl	throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan
 1052              	.LVL76:
  87:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 1);
 1053              		.loc 1 87 5 is_stmt 1 view .LVU252
  89:mri/core/buffer.c ****         __rethrow;
 1054              		.loc 1 89 5 view .LVU253
 1055 0012 3368     		ldr	r3, [r6]
 1056 0014 1BB9     		cbnz	r3, .L75
  92:mri/core/buffer.c **** }
 1057              		.loc 1 92 5 view .LVU254
  92:mri/core/buffer.c **** }
 1058              		.loc 1 92 14 is_stmt 0 view .LVU255
 1059 0016 A368     		ldr	r3, [r4, #8]
  92:mri/core/buffer.c **** }
ARM GAS  /tmp/ccERbtyv.s 			page 31


 1060              		.loc 1 92 24 view .LVU256
 1061 0018 5A1C     		adds	r2, r3, #1
 1062 001a A260     		str	r2, [r4, #8]
  92:mri/core/buffer.c **** }
 1063              		.loc 1 92 28 view .LVU257
 1064 001c 1D70     		strb	r5, [r3]
 1065              	.L75:
  93:mri/core/buffer.c **** 
 1066              		.loc 1 93 1 view .LVU258
 1067 001e 70BD     		pop	{r4, r5, r6, pc}
 1068              	.LVL77:
 1069              	.L79:
  93:mri/core/buffer.c **** 
 1070              		.loc 1 93 1 view .LVU259
 1071              		.align	2
 1072              	.L78:
 1073 0020 00000000 		.word	mriExceptionCode
 1074              		.cfi_endproc
 1075              	.LFE12:
 1077              		.section	.text.calculateAbsoluteValueAndWriteMinusSignForNegativeValue,"ax",%progbits
 1078              		.align	1
 1079              		.syntax unified
 1080              		.thumb
 1081              		.thumb_func
 1083              	calculateAbsoluteValueAndWriteMinusSignForNegativeValue:
 1084              	.LVL78:
 1085              	.LFB32:
 346:mri/core/buffer.c ****     if (value < 0)
 1086              		.loc 1 346 1 is_stmt 1 view -0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 0
 1089              		@ frame_needed = 0, uses_anonymous_args = 0
 346:mri/core/buffer.c ****     if (value < 0)
 1090              		.loc 1 346 1 is_stmt 0 view .LVU261
 1091 0000 10B5     		push	{r4, lr}
 1092              	.LCFI9:
 1093              		.cfi_def_cfa_offset 8
 1094              		.cfi_offset 4, -8
 1095              		.cfi_offset 14, -4
 347:mri/core/buffer.c ****     {
 1096              		.loc 1 347 5 is_stmt 1 view .LVU262
 347:mri/core/buffer.c ****     {
 1097              		.loc 1 347 8 is_stmt 0 view .LVU263
 1098 0002 0C1E     		subs	r4, r1, #0
 1099 0004 01DB     		blt	.L83
 1100              	.LVL79:
 1101              	.L81:
 353:mri/core/buffer.c **** }
 1102              		.loc 1 353 5 is_stmt 1 view .LVU264
 354:mri/core/buffer.c **** 
 1103              		.loc 1 354 1 is_stmt 0 view .LVU265
 1104 0006 2046     		mov	r0, r4
 1105 0008 10BD     		pop	{r4, pc}
 1106              	.LVL80:
 1107              	.L83:
 349:mri/core/buffer.c ****         Buffer_WriteChar(pBuffer, '-');
 1108              		.loc 1 349 9 is_stmt 1 view .LVU266
ARM GAS  /tmp/ccERbtyv.s 			page 32


 349:mri/core/buffer.c ****         Buffer_WriteChar(pBuffer, '-');
 1109              		.loc 1 349 15 is_stmt 0 view .LVU267
 1110 000a 6442     		rsbs	r4, r4, #0
 1111              	.LVL81:
 350:mri/core/buffer.c ****     }
 1112              		.loc 1 350 9 is_stmt 1 view .LVU268
 1113 000c 2D21     		movs	r1, #45
 1114 000e FFF7FEFF 		bl	mriBuffer_WriteChar
 1115              	.LVL82:
 350:mri/core/buffer.c ****     }
 1116              		.loc 1 350 9 is_stmt 0 view .LVU269
 1117 0012 F8E7     		b	.L81
 1118              		.cfi_endproc
 1119              	.LFE32:
 1121              		.section	.text.mriBuffer_ReadChar,"ax",%progbits
 1122              		.align	1
 1123              		.global	mriBuffer_ReadChar
 1124              		.syntax unified
 1125              		.thumb
 1126              		.thumb_func
 1128              	mriBuffer_ReadChar:
 1129              	.LVL83:
 1130              	.LFB15:
 111:mri/core/buffer.c ****     __try
 1131              		.loc 1 111 1 is_stmt 1 view -0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 0
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 111:mri/core/buffer.c ****     __try
 1135              		.loc 1 111 1 is_stmt 0 view .LVU271
 1136 0000 38B5     		push	{r3, r4, r5, lr}
 1137              	.LCFI10:
 1138              		.cfi_def_cfa_offset 16
 1139              		.cfi_offset 3, -16
 1140              		.cfi_offset 4, -12
 1141              		.cfi_offset 5, -8
 1142              		.cfi_offset 14, -4
 1143 0002 0446     		mov	r4, r0
 112:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 1);
 1144              		.loc 1 112 5 is_stmt 1 view .LVU272
 112:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 1);
 1145              		.loc 1 112 5 view .LVU273
 1146              	.LBB58:
 1147              	.LBI58:
  76:mri/core/try_catch.h **** {
 1148              		.loc 3 76 20 view .LVU274
 1149              	.LBB59:
 1150              		.loc 3 78 5 view .LVU275
 1151              		.loc 3 78 22 is_stmt 0 view .LVU276
 1152 0004 074D     		ldr	r5, .L88
 1153 0006 0023     		movs	r3, #0
 1154 0008 2B60     		str	r3, [r5]
 1155              	.LBE59:
 1156              	.LBE58:
 113:mri/core/buffer.c ****     __catch
 1157              		.loc 1 113 9 is_stmt 1 view .LVU277
 1158 000a 0121     		movs	r1, #1
ARM GAS  /tmp/ccERbtyv.s 			page 33


 1159 000c FFF7FEFF 		bl	throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan
 1160              	.LVL84:
 112:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 1);
 1161              		.loc 1 112 5 view .LVU278
 114:mri/core/buffer.c ****         __rethrow_and_return('\0');
 1162              		.loc 1 114 5 view .LVU279
 1163 0010 2B68     		ldr	r3, [r5]
 1164 0012 23B9     		cbnz	r3, .L86
 117:mri/core/buffer.c **** }
 1165              		.loc 1 117 5 view .LVU280
 117:mri/core/buffer.c **** }
 1166              		.loc 1 117 21 is_stmt 0 view .LVU281
 1167 0014 A368     		ldr	r3, [r4, #8]
 117:mri/core/buffer.c **** }
 1168              		.loc 1 117 31 view .LVU282
 1169 0016 5A1C     		adds	r2, r3, #1
 1170 0018 A260     		str	r2, [r4, #8]
 117:mri/core/buffer.c **** }
 1171              		.loc 1 117 12 view .LVU283
 1172 001a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1173              	.L85:
 118:mri/core/buffer.c **** 
 1174              		.loc 1 118 1 view .LVU284
 1175 001c 38BD     		pop	{r3, r4, r5, pc}
 1176              	.LVL85:
 1177              	.L86:
 115:mri/core/buffer.c **** 
 1178              		.loc 1 115 9 view .LVU285
 1179 001e 0020     		movs	r0, #0
 1180 0020 FCE7     		b	.L85
 1181              	.L89:
 1182 0022 00BF     		.align	2
 1183              	.L88:
 1184 0024 00000000 		.word	mriExceptionCode
 1185              		.cfi_endproc
 1186              	.LFE15:
 1188              		.section	.text.parseNextHexDigitAndAddNibbleToValue,"ax",%progbits
 1189              		.align	1
 1190              		.syntax unified
 1191              		.thumb
 1192              		.thumb_func
 1194              	parseNextHexDigitAndAddNibbleToValue:
 1195              	.LVL86:
 1196              	.LFB23:
 216:mri/core/buffer.c ****     char     nextChar;
 1197              		.loc 1 216 1 is_stmt 1 view -0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 216:mri/core/buffer.c ****     char     nextChar;
 1201              		.loc 1 216 1 is_stmt 0 view .LVU287
 1202 0000 70B5     		push	{r4, r5, r6, lr}
 1203              	.LCFI11:
 1204              		.cfi_def_cfa_offset 16
 1205              		.cfi_offset 4, -16
 1206              		.cfi_offset 5, -12
 1207              		.cfi_offset 6, -8
ARM GAS  /tmp/ccERbtyv.s 			page 34


 1208              		.cfi_offset 14, -4
 1209 0002 0646     		mov	r6, r0
 1210 0004 0C46     		mov	r4, r1
 217:mri/core/buffer.c ****     uint32_t nibbleValue;
 1211              		.loc 1 217 5 is_stmt 1 view .LVU288
 218:mri/core/buffer.c **** 
 1212              		.loc 1 218 5 view .LVU289
 220:mri/core/buffer.c ****         nextChar = Buffer_ReadChar(pBuffer);
 1213              		.loc 1 220 5 view .LVU290
 220:mri/core/buffer.c ****         nextChar = Buffer_ReadChar(pBuffer);
 1214              		.loc 1 220 5 view .LVU291
 1215              	.LBB60:
 1216              	.LBI60:
  76:mri/core/try_catch.h **** {
 1217              		.loc 3 76 20 view .LVU292
 1218              	.LBB61:
 1219              		.loc 3 78 5 view .LVU293
 1220              		.loc 3 78 22 is_stmt 0 view .LVU294
 1221 0006 0A4D     		ldr	r5, .L96
 1222 0008 0023     		movs	r3, #0
 1223 000a 2B60     		str	r3, [r5]
 1224              	.LBE61:
 1225              	.LBE60:
 221:mri/core/buffer.c ****     __catch
 1226              		.loc 1 221 9 is_stmt 1 view .LVU295
 221:mri/core/buffer.c ****     __catch
 1227              		.loc 1 221 20 is_stmt 0 view .LVU296
 1228 000c FFF7FEFF 		bl	mriBuffer_ReadChar
 1229              	.LVL87:
 220:mri/core/buffer.c ****         nextChar = Buffer_ReadChar(pBuffer);
 1230              		.loc 1 220 5 is_stmt 1 view .LVU297
 222:mri/core/buffer.c ****         __rethrow_and_return(currentValue);
 1231              		.loc 1 222 5 view .LVU298
 1232 0010 2B68     		ldr	r3, [r5]
 1233 0012 0BB1     		cbz	r3, .L94
 1234              	.LVL88:
 1235              	.L91:
 236:mri/core/buffer.c **** 
 1236              		.loc 1 236 1 is_stmt 0 view .LVU299
 1237 0014 2046     		mov	r0, r4
 1238 0016 70BD     		pop	{r4, r5, r6, pc}
 1239              	.LVL89:
 1240              	.L94:
 225:mri/core/buffer.c ****     {
 1241              		.loc 1 225 5 is_stmt 1 view .LVU300
 225:mri/core/buffer.c ****     {
 1242              		.loc 1 225 5 view .LVU301
 1243              	.LBB62:
 1244              	.LBI62:
  76:mri/core/try_catch.h **** {
 1245              		.loc 3 76 20 view .LVU302
 1246              	.LBB63:
 1247              		.loc 3 78 5 view .LVU303
 1248              		.loc 3 78 22 is_stmt 0 view .LVU304
 1249 0018 2B60     		str	r3, [r5]
 1250              	.LBE63:
 1251              	.LBE62:
ARM GAS  /tmp/ccERbtyv.s 			page 35


 227:mri/core/buffer.c ****     }
 1252              		.loc 1 227 9 is_stmt 1 view .LVU305
 227:mri/core/buffer.c ****     }
 1253              		.loc 1 227 23 is_stmt 0 view .LVU306
 1254 001a FFF7FEFF 		bl	HexCharToNibble
 1255              	.LVL90:
 225:mri/core/buffer.c ****     {
 1256              		.loc 1 225 5 is_stmt 1 view .LVU307
 229:mri/core/buffer.c ****     {
 1257              		.loc 1 229 5 view .LVU308
 1258 001e 2B68     		ldr	r3, [r5]
 1259 0020 13B9     		cbnz	r3, .L95
 235:mri/core/buffer.c **** }
 1260              		.loc 1 235 5 view .LVU309
 235:mri/core/buffer.c **** }
 1261              		.loc 1 235 32 is_stmt 0 view .LVU310
 1262 0022 00EB0414 		add	r4, r0, r4, lsl #4
 1263              	.LVL91:
 235:mri/core/buffer.c **** }
 1264              		.loc 1 235 32 view .LVU311
 1265 0026 F5E7     		b	.L91
 1266              	.LVL92:
 1267              	.L95:
 231:mri/core/buffer.c ****         __rethrow_and_return(currentValue);
 1268              		.loc 1 231 9 is_stmt 1 view .LVU312
 1269 0028 3046     		mov	r0, r6
 1270              	.LVL93:
 231:mri/core/buffer.c ****         __rethrow_and_return(currentValue);
 1271              		.loc 1 231 9 is_stmt 0 view .LVU313
 1272 002a FFF7FEFF 		bl	pushBackLastChar
 1273              	.LVL94:
 232:mri/core/buffer.c ****     }
 1274              		.loc 1 232 9 is_stmt 1 view .LVU314
 1275 002e F1E7     		b	.L91
 1276              	.L97:
 1277              		.align	2
 1278              	.L96:
 1279 0030 00000000 		.word	mriExceptionCode
 1280              		.cfi_endproc
 1281              	.LFE23:
 1283              		.section	.text.mriBuffer_WriteByteAsHex,"ax",%progbits
 1284              		.align	1
 1285              		.global	mriBuffer_WriteByteAsHex
 1286              		.syntax unified
 1287              		.thumb
 1288              		.thumb_func
 1290              	mriBuffer_WriteByteAsHex:
 1291              	.LVL95:
 1292              	.LFB16:
 122:mri/core/buffer.c ****     __try
 1293              		.loc 1 122 1 view -0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 0, uses_anonymous_args = 0
 122:mri/core/buffer.c ****     __try
 1297              		.loc 1 122 1 is_stmt 0 view .LVU316
 1298 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/ccERbtyv.s 			page 36


 1299              	.LCFI12:
 1300              		.cfi_def_cfa_offset 16
 1301              		.cfi_offset 4, -16
 1302              		.cfi_offset 5, -12
 1303              		.cfi_offset 6, -8
 1304              		.cfi_offset 14, -4
 1305 0002 0646     		mov	r6, r0
 1306 0004 0C46     		mov	r4, r1
 123:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 2);
 1307              		.loc 1 123 5 is_stmt 1 view .LVU317
 123:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 2);
 1308              		.loc 1 123 5 view .LVU318
 1309              	.LBB64:
 1310              	.LBI64:
  76:mri/core/try_catch.h **** {
 1311              		.loc 3 76 20 view .LVU319
 1312              	.LBB65:
 1313              		.loc 3 78 5 view .LVU320
 1314              		.loc 3 78 22 is_stmt 0 view .LVU321
 1315 0006 0B4D     		ldr	r5, .L101
 1316 0008 0023     		movs	r3, #0
 1317 000a 2B60     		str	r3, [r5]
 1318              	.LBE65:
 1319              	.LBE64:
 124:mri/core/buffer.c ****     __catch
 1320              		.loc 1 124 9 is_stmt 1 view .LVU322
 1321 000c 0221     		movs	r1, #2
 1322              	.LVL96:
 124:mri/core/buffer.c ****     __catch
 1323              		.loc 1 124 9 is_stmt 0 view .LVU323
 1324 000e FFF7FEFF 		bl	throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan
 1325              	.LVL97:
 123:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 2);
 1326              		.loc 1 123 5 is_stmt 1 view .LVU324
 125:mri/core/buffer.c ****         __rethrow;
 1327              		.loc 1 125 5 view .LVU325
 1328 0012 2B68     		ldr	r3, [r5]
 1329 0014 6BB9     		cbnz	r3, .L98
 128:mri/core/buffer.c ****     *(pBuffer->pCurrent++) = NibbleToHexChar[EXTRACT_LO_NIBBLE(byte)];
 1330              		.loc 1 128 5 view .LVU326
 128:mri/core/buffer.c ****     *(pBuffer->pCurrent++) = NibbleToHexChar[EXTRACT_LO_NIBBLE(byte)];
 1331              		.loc 1 128 46 is_stmt 0 view .LVU327
 1332 0016 2109     		lsrs	r1, r4, #4
 128:mri/core/buffer.c ****     *(pBuffer->pCurrent++) = NibbleToHexChar[EXTRACT_LO_NIBBLE(byte)];
 1333              		.loc 1 128 14 view .LVU328
 1334 0018 B368     		ldr	r3, [r6, #8]
 128:mri/core/buffer.c ****     *(pBuffer->pCurrent++) = NibbleToHexChar[EXTRACT_LO_NIBBLE(byte)];
 1335              		.loc 1 128 24 view .LVU329
 1336 001a 5A1C     		adds	r2, r3, #1
 1337 001c B260     		str	r2, [r6, #8]
 128:mri/core/buffer.c ****     *(pBuffer->pCurrent++) = NibbleToHexChar[EXTRACT_LO_NIBBLE(byte)];
 1338              		.loc 1 128 45 view .LVU330
 1339 001e 064A     		ldr	r2, .L101+4
 1340 0020 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 128:mri/core/buffer.c ****     *(pBuffer->pCurrent++) = NibbleToHexChar[EXTRACT_LO_NIBBLE(byte)];
 1341              		.loc 1 128 28 view .LVU331
 1342 0022 1970     		strb	r1, [r3]
ARM GAS  /tmp/ccERbtyv.s 			page 37


 129:mri/core/buffer.c **** }
 1343              		.loc 1 129 5 is_stmt 1 view .LVU332
 129:mri/core/buffer.c **** }
 1344              		.loc 1 129 46 is_stmt 0 view .LVU333
 1345 0024 04F00F04 		and	r4, r4, #15
 129:mri/core/buffer.c **** }
 1346              		.loc 1 129 14 view .LVU334
 1347 0028 B368     		ldr	r3, [r6, #8]
 129:mri/core/buffer.c **** }
 1348              		.loc 1 129 24 view .LVU335
 1349 002a 591C     		adds	r1, r3, #1
 1350 002c B160     		str	r1, [r6, #8]
 129:mri/core/buffer.c **** }
 1351              		.loc 1 129 45 view .LVU336
 1352 002e 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 129:mri/core/buffer.c **** }
 1353              		.loc 1 129 28 view .LVU337
 1354 0030 1A70     		strb	r2, [r3]
 1355              	.L98:
 130:mri/core/buffer.c **** 
 1356              		.loc 1 130 1 view .LVU338
 1357 0032 70BD     		pop	{r4, r5, r6, pc}
 1358              	.LVL98:
 1359              	.L102:
 130:mri/core/buffer.c **** 
 1360              		.loc 1 130 1 view .LVU339
 1361              		.align	2
 1362              	.L101:
 1363 0034 00000000 		.word	mriExceptionCode
 1364 0038 00000000 		.word	NibbleToHexChar
 1365              		.cfi_endproc
 1366              	.LFE16:
 1368              		.section	.text.mriBuffer_ReadByteAsHex,"ax",%progbits
 1369              		.align	1
 1370              		.global	mriBuffer_ReadByteAsHex
 1371              		.syntax unified
 1372              		.thumb
 1373              		.thumb_func
 1375              	mriBuffer_ReadByteAsHex:
 1376              	.LVL99:
 1377              	.LFB17:
 134:mri/core/buffer.c ****     unsigned char byte;
 1378              		.loc 1 134 1 is_stmt 1 view -0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 0, uses_anonymous_args = 0
 134:mri/core/buffer.c ****     unsigned char byte;
 1382              		.loc 1 134 1 is_stmt 0 view .LVU341
 1383 0000 70B5     		push	{r4, r5, r6, lr}
 1384              	.LCFI13:
 1385              		.cfi_def_cfa_offset 16
 1386              		.cfi_offset 4, -16
 1387              		.cfi_offset 5, -12
 1388              		.cfi_offset 6, -8
 1389              		.cfi_offset 14, -4
 1390 0002 0546     		mov	r5, r0
 135:mri/core/buffer.c **** 
ARM GAS  /tmp/ccERbtyv.s 			page 38


 1391              		.loc 1 135 5 is_stmt 1 view .LVU342
 137:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 2);
 1392              		.loc 1 137 5 view .LVU343
 137:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 2);
 1393              		.loc 1 137 5 view .LVU344
 1394              	.LBB66:
 1395              	.LBI66:
  76:mri/core/try_catch.h **** {
 1396              		.loc 3 76 20 view .LVU345
 1397              	.LBB67:
 1398              		.loc 3 78 5 view .LVU346
 1399              		.loc 3 78 22 is_stmt 0 view .LVU347
 1400 0004 124C     		ldr	r4, .L111
 1401 0006 0023     		movs	r3, #0
 1402 0008 2360     		str	r3, [r4]
 1403              	.LBE67:
 1404              	.LBE66:
 138:mri/core/buffer.c ****     __catch
 1405              		.loc 1 138 9 is_stmt 1 view .LVU348
 1406 000a 0221     		movs	r1, #2
 1407 000c FFF7FEFF 		bl	throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan
 1408              	.LVL100:
 137:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, 2);
 1409              		.loc 1 137 5 view .LVU349
 139:mri/core/buffer.c ****         __rethrow_and_return(0);
 1410              		.loc 1 139 5 view .LVU350
 1411 0010 2368     		ldr	r3, [r4]
 1412 0012 13B1     		cbz	r3, .L109
 140:mri/core/buffer.c **** 
 1413              		.loc 1 140 9 is_stmt 0 view .LVU351
 1414 0014 0024     		movs	r4, #0
 1415              	.L104:
 154:mri/core/buffer.c **** 
 1416              		.loc 1 154 1 view .LVU352
 1417 0016 2046     		mov	r0, r4
 1418 0018 70BD     		pop	{r4, r5, r6, pc}
 1419              	.LVL101:
 1420              	.L109:
 142:mri/core/buffer.c ****     {
 1421              		.loc 1 142 5 is_stmt 1 view .LVU353
 142:mri/core/buffer.c ****     {
 1422              		.loc 1 142 5 view .LVU354
 1423              	.LBB68:
 1424              	.LBI68:
  76:mri/core/try_catch.h **** {
 1425              		.loc 3 76 20 view .LVU355
 1426              	.LBB69:
 1427              		.loc 3 78 5 view .LVU356
 1428              		.loc 3 78 22 is_stmt 0 view .LVU357
 1429 001a 2646     		mov	r6, r4
 1430 001c 2360     		str	r3, [r4]
 1431              	.LBE69:
 1432              	.LBE68:
 144:mri/core/buffer.c ****         __throwing_func( byte |= HexCharToNibble(pBuffer->pCurrent[1]) );
 1433              		.loc 1 144 9 is_stmt 1 view .LVU358
 1434 001e AB68     		ldr	r3, [r5, #8]
 1435 0020 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccERbtyv.s 			page 39


 1436 0022 FFF7FEFF 		bl	HexCharToNibble
 1437              	.LVL102:
 1438 0026 C4B2     		uxtb	r4, r0
 1439 0028 2401     		lsls	r4, r4, #4
 1440 002a E4B2     		uxtb	r4, r4
 1441              	.LVL103:
 144:mri/core/buffer.c ****         __throwing_func( byte |= HexCharToNibble(pBuffer->pCurrent[1]) );
 1442              		.loc 1 144 9 view .LVU359
 1443 002c 3368     		ldr	r3, [r6]
 1444 002e 33B1     		cbz	r3, .L110
 1445              	.L105:
 145:mri/core/buffer.c ****     }
 1446              		.loc 1 145 73 discriminator 1 view .LVU360
 142:mri/core/buffer.c ****     {
 1447              		.loc 1 142 5 discriminator 1 view .LVU361
 147:mri/core/buffer.c ****     {
 1448              		.loc 1 147 5 discriminator 1 view .LVU362
 1449 0030 074B     		ldr	r3, .L111
 1450 0032 1B68     		ldr	r3, [r3]
 1451 0034 53B9     		cbnz	r3, .L107
 151:mri/core/buffer.c **** 
 1452              		.loc 1 151 5 view .LVU363
 151:mri/core/buffer.c **** 
 1453              		.loc 1 151 12 is_stmt 0 view .LVU364
 1454 0036 AB68     		ldr	r3, [r5, #8]
 151:mri/core/buffer.c **** 
 1455              		.loc 1 151 23 view .LVU365
 1456 0038 0233     		adds	r3, r3, #2
 1457 003a AB60     		str	r3, [r5, #8]
 153:mri/core/buffer.c **** }
 1458              		.loc 1 153 5 is_stmt 1 view .LVU366
 153:mri/core/buffer.c **** }
 1459              		.loc 1 153 12 is_stmt 0 view .LVU367
 1460 003c EBE7     		b	.L104
 1461              	.L110:
 144:mri/core/buffer.c ****         __throwing_func( byte |= HexCharToNibble(pBuffer->pCurrent[1]) );
 1462              		.loc 1 144 77 is_stmt 1 discriminator 1 view .LVU368
 145:mri/core/buffer.c ****     }
 1463              		.loc 1 145 9 discriminator 1 view .LVU369
 1464 003e AB68     		ldr	r3, [r5, #8]
 1465 0040 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1466 0042 FFF7FEFF 		bl	HexCharToNibble
 1467              	.LVL104:
 1468 0046 2043     		orrs	r0, r0, r4
 1469 0048 C4B2     		uxtb	r4, r0
 1470              	.LVL105:
 145:mri/core/buffer.c ****     }
 1471              		.loc 1 145 9 discriminator 1 view .LVU370
 1472 004a F1E7     		b	.L105
 1473              	.L107:
 149:mri/core/buffer.c ****     }
 1474              		.loc 1 149 9 is_stmt 0 view .LVU371
 1475 004c 0024     		movs	r4, #0
 1476              	.LVL106:
 149:mri/core/buffer.c ****     }
 1477              		.loc 1 149 9 view .LVU372
 1478 004e E2E7     		b	.L104
ARM GAS  /tmp/ccERbtyv.s 			page 40


 1479              	.L112:
 1480              		.align	2
 1481              	.L111:
 1482 0050 00000000 		.word	mriExceptionCode
 1483              		.cfi_endproc
 1484              	.LFE17:
 1486              		.section	.text.hexStringCompare,"ax",%progbits
 1487              		.align	1
 1488              		.syntax unified
 1489              		.thumb
 1490              		.thumb_func
 1492              	hexStringCompare:
 1493              	.LVL107:
 1494              	.LFB42:
 435:mri/core/buffer.c **** 
 436:mri/core/buffer.c **** 
 437:mri/core/buffer.c **** int Buffer_MatchesHexString(Buffer* pBuffer, const char* pString, size_t stringLength)
 438:mri/core/buffer.c **** {
 439:mri/core/buffer.c ****     CompareParams params = { doesBufferContainThisHexString, 2 };
 440:mri/core/buffer.c ****     return matchesString(&params, pBuffer, pString, stringLength);
 441:mri/core/buffer.c **** }
 442:mri/core/buffer.c **** 
 443:mri/core/buffer.c **** static int doesBufferContainThisHexString(Buffer* pBuffer, const char* pDesiredString, size_t strin
 444:mri/core/buffer.c **** {
 445:mri/core/buffer.c ****     return (hexStringCompare(pBuffer, pDesiredString, stringLength) == 0) &&
 446:mri/core/buffer.c ****            (Buffer_BytesLeft(pBuffer) == stringLength*2 ||
 447:mri/core/buffer.c ****             (Buffer_BytesLeft(pBuffer) >= (stringLength+1)*2 &&
 448:mri/core/buffer.c ****              pBuffer->pCurrent[stringLength*2] == '2' &&
 449:mri/core/buffer.c ****              pBuffer->pCurrent[stringLength*2+1] == '0'));
 450:mri/core/buffer.c **** }
 451:mri/core/buffer.c **** 
 452:mri/core/buffer.c **** static int hexStringCompare(Buffer* pBuffer, const char* pDesiredString, size_t stringLength)
 453:mri/core/buffer.c **** {
 1495              		.loc 1 453 1 is_stmt 1 view -0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              		.loc 1 453 1 is_stmt 0 view .LVU374
 1500 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1501              	.LCFI14:
 1502              		.cfi_def_cfa_offset 24
 1503              		.cfi_offset 4, -24
 1504              		.cfi_offset 5, -20
 1505              		.cfi_offset 6, -16
 1506              		.cfi_offset 7, -12
 1507              		.cfi_offset 8, -8
 1508              		.cfi_offset 14, -4
 1509 0004 0546     		mov	r5, r0
 1510 0006 0F46     		mov	r7, r1
 1511 0008 1646     		mov	r6, r2
 454:mri/core/buffer.c ****     char* pOrig = pBuffer->pCurrent;
 1512              		.loc 1 454 5 is_stmt 1 view .LVU375
 1513              		.loc 1 454 11 is_stmt 0 view .LVU376
 1514 000a D0F80880 		ldr	r8, [r0, #8]
 1515              	.LVL108:
 455:mri/core/buffer.c ****     int   result = 0;
 1516              		.loc 1 455 5 is_stmt 1 view .LVU377
ARM GAS  /tmp/ccERbtyv.s 			page 41


 456:mri/core/buffer.c ****     size_t i;
 1517              		.loc 1 456 5 view .LVU378
 457:mri/core/buffer.c ****     for (i = 0 ; i < stringLength ; i++)
 1518              		.loc 1 457 5 view .LVU379
 1519              		.loc 1 457 12 is_stmt 0 view .LVU380
 1520 000e 0024     		movs	r4, #0
 1521              		.loc 1 457 5 view .LVU381
 1522 0010 00E0     		b	.L114
 1523              	.LVL109:
 1524              	.L121:
 1525              		.loc 1 457 38 is_stmt 1 discriminator 2 view .LVU382
 1526 0012 0134     		adds	r4, r4, #1
 1527              	.LVL110:
 1528              	.L114:
 1529              		.loc 1 457 20 discriminator 1 view .LVU383
 1530 0014 B442     		cmp	r4, r6
 1531 0016 08D2     		bcs	.L120
 1532              	.LBB70:
 458:mri/core/buffer.c ****     {
 459:mri/core/buffer.c ****         uint8_t byte = Buffer_ReadByteAsHex(pBuffer);
 1533              		.loc 1 459 9 view .LVU384
 1534              		.loc 1 459 24 is_stmt 0 view .LVU385
 1535 0018 2846     		mov	r0, r5
 1536 001a FFF7FEFF 		bl	mriBuffer_ReadByteAsHex
 1537              	.LVL111:
 460:mri/core/buffer.c ****         if (byte < (uint8_t)pDesiredString[i])
 1538              		.loc 1 460 9 is_stmt 1 view .LVU386
 1539              		.loc 1 460 43 is_stmt 0 view .LVU387
 1540 001e 3B5D     		ldrb	r3, [r7, r4]	@ zero_extendqisi2
 1541              		.loc 1 460 12 view .LVU388
 1542 0020 8342     		cmp	r3, r0
 1543 0022 07D8     		bhi	.L117
 461:mri/core/buffer.c ****         {
 462:mri/core/buffer.c ****             result = -1;
 463:mri/core/buffer.c ****             break;
 464:mri/core/buffer.c ****         }
 465:mri/core/buffer.c ****         if (byte > (uint8_t)pDesiredString[i])
 1544              		.loc 1 465 9 is_stmt 1 view .LVU389
 1545              		.loc 1 465 12 is_stmt 0 view .LVU390
 1546 0024 F5D2     		bcs	.L121
 466:mri/core/buffer.c ****         {
 467:mri/core/buffer.c ****             result = 1;
 1547              		.loc 1 467 20 view .LVU391
 1548 0026 0120     		movs	r0, #1
 1549              	.LVL112:
 1550              		.loc 1 467 20 view .LVU392
 1551 0028 00E0     		b	.L115
 1552              	.LVL113:
 1553              	.L120:
 1554              		.loc 1 467 20 view .LVU393
 1555              	.LBE70:
 455:mri/core/buffer.c ****     size_t i;
 1556              		.loc 1 455 11 view .LVU394
 1557 002a 0020     		movs	r0, #0
 1558              	.L115:
 1559              	.LVL114:
 468:mri/core/buffer.c ****             break;
ARM GAS  /tmp/ccERbtyv.s 			page 42


 469:mri/core/buffer.c ****         }
 470:mri/core/buffer.c ****     }
 471:mri/core/buffer.c ****     pBuffer->pCurrent = pOrig;
 1560              		.loc 1 471 5 is_stmt 1 view .LVU395
 1561              		.loc 1 471 23 is_stmt 0 view .LVU396
 1562 002c C5F80880 		str	r8, [r5, #8]
 472:mri/core/buffer.c ****     return result;
 1563              		.loc 1 472 5 is_stmt 1 view .LVU397
 473:mri/core/buffer.c **** }
 1564              		.loc 1 473 1 is_stmt 0 view .LVU398
 1565 0030 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1566              	.LVL115:
 1567              	.L117:
 1568              	.LBB71:
 462:mri/core/buffer.c ****             break;
 1569              		.loc 1 462 20 view .LVU399
 1570 0034 4FF0FF30 		mov	r0, #-1
 1571              	.LVL116:
 462:mri/core/buffer.c ****             break;
 1572              		.loc 1 462 20 view .LVU400
 1573 0038 F8E7     		b	.L115
 1574              	.LBE71:
 1575              		.cfi_endproc
 1576              	.LFE42:
 1578              		.section	.text.doesBufferContainThisHexString,"ax",%progbits
 1579              		.align	1
 1580              		.syntax unified
 1581              		.thumb
 1582              		.thumb_func
 1584              	doesBufferContainThisHexString:
 1585              	.LVL117:
 1586              	.LFB41:
 444:mri/core/buffer.c ****     return (hexStringCompare(pBuffer, pDesiredString, stringLength) == 0) &&
 1587              		.loc 1 444 1 is_stmt 1 view -0
 1588              		.cfi_startproc
 1589              		@ args = 0, pretend = 0, frame = 0
 1590              		@ frame_needed = 0, uses_anonymous_args = 0
 444:mri/core/buffer.c ****     return (hexStringCompare(pBuffer, pDesiredString, stringLength) == 0) &&
 1591              		.loc 1 444 1 is_stmt 0 view .LVU402
 1592 0000 70B5     		push	{r4, r5, r6, lr}
 1593              	.LCFI15:
 1594              		.cfi_def_cfa_offset 16
 1595              		.cfi_offset 4, -16
 1596              		.cfi_offset 5, -12
 1597              		.cfi_offset 6, -8
 1598              		.cfi_offset 14, -4
 1599 0002 0646     		mov	r6, r0
 1600 0004 1446     		mov	r4, r2
 445:mri/core/buffer.c ****            (Buffer_BytesLeft(pBuffer) == stringLength*2 ||
 1601              		.loc 1 445 5 is_stmt 1 view .LVU403
 445:mri/core/buffer.c ****            (Buffer_BytesLeft(pBuffer) == stringLength*2 ||
 1602              		.loc 1 445 13 is_stmt 0 view .LVU404
 1603 0006 FFF7FEFF 		bl	hexStringCompare
 1604              	.LVL118:
 445:mri/core/buffer.c ****            (Buffer_BytesLeft(pBuffer) == stringLength*2 ||
 1605              		.loc 1 445 75 view .LVU405
 1606 000a B0B9     		cbnz	r0, .L124
ARM GAS  /tmp/ccERbtyv.s 			page 43


 1607 000c 0546     		mov	r5, r0
 446:mri/core/buffer.c ****             (Buffer_BytesLeft(pBuffer) >= (stringLength+1)*2 &&
 1608              		.loc 1 446 13 discriminator 1 view .LVU406
 1609 000e 3046     		mov	r0, r6
 1610 0010 FFF7FEFF 		bl	mriBuffer_BytesLeft
 1611              	.LVL119:
 446:mri/core/buffer.c ****             (Buffer_BytesLeft(pBuffer) >= (stringLength+1)*2 &&
 1612              		.loc 1 446 54 discriminator 1 view .LVU407
 1613 0014 6200     		lsls	r2, r4, #1
 445:mri/core/buffer.c ****            (Buffer_BytesLeft(pBuffer) == stringLength*2 ||
 1614              		.loc 1 445 75 discriminator 1 view .LVU408
 1615 0016 B0EB440F 		cmp	r0, r4, lsl #1
 1616 001a 11D0     		beq	.L125
 447:mri/core/buffer.c ****              pBuffer->pCurrent[stringLength*2] == '2' &&
 1617              		.loc 1 447 56 view .LVU409
 1618 001c 631C     		adds	r3, r4, #1
 446:mri/core/buffer.c ****             (Buffer_BytesLeft(pBuffer) >= (stringLength+1)*2 &&
 1619              		.loc 1 446 57 view .LVU410
 1620 001e B0EB430F 		cmp	r0, r3, lsl #1
 1621 0022 0BD3     		bcc	.L122
 448:mri/core/buffer.c ****              pBuffer->pCurrent[stringLength*2+1] == '0'));
 1622              		.loc 1 448 21 view .LVU411
 1623 0024 B368     		ldr	r3, [r6, #8]
 448:mri/core/buffer.c ****              pBuffer->pCurrent[stringLength*2+1] == '0'));
 1624              		.loc 1 448 31 view .LVU412
 1625 0026 13F81410 		ldrb	r1, [r3, r4, lsl #1]	@ zero_extendqisi2
 447:mri/core/buffer.c ****              pBuffer->pCurrent[stringLength*2] == '2' &&
 1626              		.loc 1 447 62 view .LVU413
 1627 002a 3229     		cmp	r1, #50
 1628 002c 06D1     		bne	.L122
 449:mri/core/buffer.c **** }
 1629              		.loc 1 449 31 view .LVU414
 1630 002e 1344     		add	r3, r3, r2
 1631 0030 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 448:mri/core/buffer.c ****              pBuffer->pCurrent[stringLength*2+1] == '0'));
 1632              		.loc 1 448 55 view .LVU415
 1633 0032 302B     		cmp	r3, #48
 1634 0034 02D1     		bne	.L122
 445:mri/core/buffer.c ****            (Buffer_BytesLeft(pBuffer) == stringLength*2 ||
 1635              		.loc 1 445 75 view .LVU416
 1636 0036 0125     		movs	r5, #1
 1637 0038 00E0     		b	.L122
 1638              	.L124:
 1639 003a 0025     		movs	r5, #0
 1640              	.L122:
 450:mri/core/buffer.c **** 
 1641              		.loc 1 450 1 view .LVU417
 1642 003c 2846     		mov	r0, r5
 1643 003e 70BD     		pop	{r4, r5, r6, pc}
 1644              	.LVL120:
 1645              	.L125:
 445:mri/core/buffer.c ****            (Buffer_BytesLeft(pBuffer) == stringLength*2 ||
 1646              		.loc 1 445 75 view .LVU418
 1647 0040 0125     		movs	r5, #1
 1648 0042 FBE7     		b	.L122
 1649              		.cfi_endproc
 1650              	.LFE41:
ARM GAS  /tmp/ccERbtyv.s 			page 44


 1652              		.section	.text.mriBuffer_WriteSizedString,"ax",%progbits
 1653              		.align	1
 1654              		.global	mriBuffer_WriteSizedString
 1655              		.syntax unified
 1656              		.thumb
 1657              		.thumb_func
 1659              	mriBuffer_WriteSizedString:
 1660              	.LVL121:
 1661              	.LFB19:
 164:mri/core/buffer.c ****     __try
 1662              		.loc 1 164 1 is_stmt 1 view -0
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 0
 1665              		@ frame_needed = 0, uses_anonymous_args = 0
 164:mri/core/buffer.c ****     __try
 1666              		.loc 1 164 1 is_stmt 0 view .LVU420
 1667 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1668              	.LCFI16:
 1669              		.cfi_def_cfa_offset 24
 1670              		.cfi_offset 3, -24
 1671              		.cfi_offset 4, -20
 1672              		.cfi_offset 5, -16
 1673              		.cfi_offset 6, -12
 1674              		.cfi_offset 7, -8
 1675              		.cfi_offset 14, -4
 1676 0002 0646     		mov	r6, r0
 1677 0004 0C46     		mov	r4, r1
 1678 0006 1546     		mov	r5, r2
 165:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, length);
 1679              		.loc 1 165 5 is_stmt 1 view .LVU421
 165:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, length);
 1680              		.loc 1 165 5 view .LVU422
 1681              	.LBB72:
 1682              	.LBI72:
  76:mri/core/try_catch.h **** {
 1683              		.loc 3 76 20 view .LVU423
 1684              	.LBB73:
 1685              		.loc 3 78 5 view .LVU424
 1686              		.loc 3 78 22 is_stmt 0 view .LVU425
 1687 0008 0A4F     		ldr	r7, .L133
 1688 000a 0023     		movs	r3, #0
 1689 000c 3B60     		str	r3, [r7]
 1690              	.LBE73:
 1691              	.LBE72:
 166:mri/core/buffer.c ****     __catch
 1692              		.loc 1 166 9 is_stmt 1 view .LVU426
 1693 000e 1146     		mov	r1, r2
 1694              	.LVL122:
 166:mri/core/buffer.c ****     __catch
 1695              		.loc 1 166 9 is_stmt 0 view .LVU427
 1696 0010 FFF7FEFF 		bl	throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan
 1697              	.LVL123:
 165:mri/core/buffer.c ****         throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan(pBuffer, length);
 1698              		.loc 1 165 5 is_stmt 1 view .LVU428
 167:mri/core/buffer.c ****         __rethrow;
 1699              		.loc 1 167 5 view .LVU429
 1700 0014 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccERbtyv.s 			page 45


 1701 0016 4BB1     		cbz	r3, .L130
 1702 0018 0BE0     		b	.L128
 1703              	.LVL124:
 1704              	.L131:
 171:mri/core/buffer.c **** }
 1705              		.loc 1 171 9 view .LVU430
 171:mri/core/buffer.c **** }
 1706              		.loc 1 171 42 is_stmt 0 view .LVU431
 1707 001a 2146     		mov	r1, r4
 1708              	.LVL125:
 171:mri/core/buffer.c **** }
 1709              		.loc 1 171 18 view .LVU432
 1710 001c B368     		ldr	r3, [r6, #8]
 171:mri/core/buffer.c **** }
 1711              		.loc 1 171 28 view .LVU433
 1712 001e 581C     		adds	r0, r3, #1
 1713 0020 B060     		str	r0, [r6, #8]
 171:mri/core/buffer.c **** }
 1714              		.loc 1 171 34 view .LVU434
 1715 0022 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 1716              	.LVL126:
 171:mri/core/buffer.c **** }
 1717              		.loc 1 171 32 view .LVU435
 1718 0026 1870     		strb	r0, [r3]
 170:mri/core/buffer.c ****         *(pBuffer->pCurrent++) = *pString++;
 1719              		.loc 1 170 18 view .LVU436
 1720 0028 1546     		mov	r5, r2
 171:mri/core/buffer.c **** }
 1721              		.loc 1 171 42 view .LVU437
 1722 002a 0C46     		mov	r4, r1
 1723              	.LVL127:
 1724              	.L130:
 170:mri/core/buffer.c ****         *(pBuffer->pCurrent++) = *pString++;
 1725              		.loc 1 170 12 is_stmt 1 view .LVU438
 170:mri/core/buffer.c ****         *(pBuffer->pCurrent++) = *pString++;
 1726              		.loc 1 170 18 is_stmt 0 view .LVU439
 1727 002c 6A1E     		subs	r2, r5, #1
 1728              	.LVL128:
 170:mri/core/buffer.c ****         *(pBuffer->pCurrent++) = *pString++;
 1729              		.loc 1 170 12 view .LVU440
 1730 002e 002D     		cmp	r5, #0
 1731 0030 F3D1     		bne	.L131
 1732              	.LVL129:
 1733              	.L128:
 172:mri/core/buffer.c **** 
 1734              		.loc 1 172 1 view .LVU441
 1735 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1736              	.LVL130:
 1737              	.L134:
 172:mri/core/buffer.c **** 
 1738              		.loc 1 172 1 view .LVU442
 1739              		.align	2
 1740              	.L133:
 1741 0034 00000000 		.word	mriExceptionCode
 1742              		.cfi_endproc
 1743              	.LFE19:
 1745              		.section	.text.mriBuffer_WriteString,"ax",%progbits
ARM GAS  /tmp/ccERbtyv.s 			page 46


 1746              		.align	1
 1747              		.global	mriBuffer_WriteString
 1748              		.syntax unified
 1749              		.thumb
 1750              		.thumb_func
 1752              	mriBuffer_WriteString:
 1753              	.LVL131:
 1754              	.LFB18:
 158:mri/core/buffer.c ****     Buffer_WriteSizedString(pBuffer, pString, mri_strlen(pString));
 1755              		.loc 1 158 1 is_stmt 1 view -0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 0
 1758              		@ frame_needed = 0, uses_anonymous_args = 0
 158:mri/core/buffer.c ****     Buffer_WriteSizedString(pBuffer, pString, mri_strlen(pString));
 1759              		.loc 1 158 1 is_stmt 0 view .LVU444
 1760 0000 38B5     		push	{r3, r4, r5, lr}
 1761              	.LCFI17:
 1762              		.cfi_def_cfa_offset 16
 1763              		.cfi_offset 3, -16
 1764              		.cfi_offset 4, -12
 1765              		.cfi_offset 5, -8
 1766              		.cfi_offset 14, -4
 1767 0002 0546     		mov	r5, r0
 1768 0004 0C46     		mov	r4, r1
 159:mri/core/buffer.c **** }
 1769              		.loc 1 159 5 is_stmt 1 view .LVU445
 1770 0006 0846     		mov	r0, r1
 1771              	.LVL132:
 159:mri/core/buffer.c **** }
 1772              		.loc 1 159 5 is_stmt 0 view .LVU446
 1773 0008 FFF7FEFF 		bl	mri_strlen
 1774              	.LVL133:
 159:mri/core/buffer.c **** }
 1775              		.loc 1 159 5 view .LVU447
 1776 000c 0246     		mov	r2, r0
 1777 000e 2146     		mov	r1, r4
 1778 0010 2846     		mov	r0, r5
 1779 0012 FFF7FEFF 		bl	mriBuffer_WriteSizedString
 1780              	.LVL134:
 160:mri/core/buffer.c **** 
 1781              		.loc 1 160 1 view .LVU448
 1782 0016 38BD     		pop	{r3, r4, r5, pc}
 160:mri/core/buffer.c **** 
 1783              		.loc 1 160 1 view .LVU449
 1784              		.cfi_endproc
 1785              	.LFE18:
 1787              		.section	.text.mriBuffer_WriteSizedStringAsHex,"ax",%progbits
 1788              		.align	1
 1789              		.global	mriBuffer_WriteSizedStringAsHex
 1790              		.syntax unified
 1791              		.thumb
 1792              		.thumb_func
 1794              	mriBuffer_WriteSizedStringAsHex:
 1795              	.LVL135:
 1796              	.LFB21:
 182:mri/core/buffer.c ****     while (length--)
 1797              		.loc 1 182 1 is_stmt 1 view -0
ARM GAS  /tmp/ccERbtyv.s 			page 47


 1798              		.cfi_startproc
 1799              		@ args = 0, pretend = 0, frame = 0
 1800              		@ frame_needed = 0, uses_anonymous_args = 0
 182:mri/core/buffer.c ****     while (length--)
 1801              		.loc 1 182 1 is_stmt 0 view .LVU451
 1802 0000 70B5     		push	{r4, r5, r6, lr}
 1803              	.LCFI18:
 1804              		.cfi_def_cfa_offset 16
 1805              		.cfi_offset 4, -16
 1806              		.cfi_offset 5, -12
 1807              		.cfi_offset 6, -8
 1808              		.cfi_offset 14, -4
 1809 0002 0646     		mov	r6, r0
 1810 0004 0C46     		mov	r4, r1
 183:mri/core/buffer.c ****         Buffer_WriteByteAsHex(pBuffer, *pString++);
 1811              		.loc 1 183 5 is_stmt 1 view .LVU452
 183:mri/core/buffer.c ****         Buffer_WriteByteAsHex(pBuffer, *pString++);
 1812              		.loc 1 183 11 is_stmt 0 view .LVU453
 1813 0006 05E0     		b	.L138
 1814              	.LVL136:
 1815              	.L139:
 184:mri/core/buffer.c **** }
 1816              		.loc 1 184 9 is_stmt 1 view .LVU454
 184:mri/core/buffer.c **** }
 1817              		.loc 1 184 9 is_stmt 0 view .LVU455
 1818 0008 14F8011B 		ldrb	r1, [r4], #1	@ zero_extendqisi2
 1819              	.LVL137:
 184:mri/core/buffer.c **** }
 1820              		.loc 1 184 9 view .LVU456
 1821 000c 3046     		mov	r0, r6
 1822 000e FFF7FEFF 		bl	mriBuffer_WriteByteAsHex
 1823              	.LVL138:
 183:mri/core/buffer.c ****         Buffer_WriteByteAsHex(pBuffer, *pString++);
 1824              		.loc 1 183 18 view .LVU457
 1825 0012 2A46     		mov	r2, r5
 1826              	.LVL139:
 1827              	.L138:
 183:mri/core/buffer.c ****         Buffer_WriteByteAsHex(pBuffer, *pString++);
 1828              		.loc 1 183 12 is_stmt 1 view .LVU458
 183:mri/core/buffer.c ****         Buffer_WriteByteAsHex(pBuffer, *pString++);
 1829              		.loc 1 183 18 is_stmt 0 view .LVU459
 1830 0014 551E     		subs	r5, r2, #1
 1831              	.LVL140:
 183:mri/core/buffer.c ****         Buffer_WriteByteAsHex(pBuffer, *pString++);
 1832              		.loc 1 183 12 view .LVU460
 1833 0016 002A     		cmp	r2, #0
 1834 0018 F6D1     		bne	.L139
 185:mri/core/buffer.c **** 
 1835              		.loc 1 185 1 view .LVU461
 1836 001a 70BD     		pop	{r4, r5, r6, pc}
 185:mri/core/buffer.c **** 
 1837              		.loc 1 185 1 view .LVU462
 1838              		.cfi_endproc
 1839              	.LFE21:
 1841              		.section	.text.mriBuffer_WriteStringAsHex,"ax",%progbits
 1842              		.align	1
 1843              		.global	mriBuffer_WriteStringAsHex
ARM GAS  /tmp/ccERbtyv.s 			page 48


 1844              		.syntax unified
 1845              		.thumb
 1846              		.thumb_func
 1848              	mriBuffer_WriteStringAsHex:
 1849              	.LVL141:
 1850              	.LFB20:
 176:mri/core/buffer.c ****     Buffer_WriteSizedStringAsHex(pBuffer, pString, mri_strlen(pString));
 1851              		.loc 1 176 1 is_stmt 1 view -0
 1852              		.cfi_startproc
 1853              		@ args = 0, pretend = 0, frame = 0
 1854              		@ frame_needed = 0, uses_anonymous_args = 0
 176:mri/core/buffer.c ****     Buffer_WriteSizedStringAsHex(pBuffer, pString, mri_strlen(pString));
 1855              		.loc 1 176 1 is_stmt 0 view .LVU464
 1856 0000 38B5     		push	{r3, r4, r5, lr}
 1857              	.LCFI19:
 1858              		.cfi_def_cfa_offset 16
 1859              		.cfi_offset 3, -16
 1860              		.cfi_offset 4, -12
 1861              		.cfi_offset 5, -8
 1862              		.cfi_offset 14, -4
 1863 0002 0546     		mov	r5, r0
 1864 0004 0C46     		mov	r4, r1
 177:mri/core/buffer.c **** }
 1865              		.loc 1 177 5 is_stmt 1 view .LVU465
 1866 0006 0846     		mov	r0, r1
 1867              	.LVL142:
 177:mri/core/buffer.c **** }
 1868              		.loc 1 177 5 is_stmt 0 view .LVU466
 1869 0008 FFF7FEFF 		bl	mri_strlen
 1870              	.LVL143:
 177:mri/core/buffer.c **** }
 1871              		.loc 1 177 5 view .LVU467
 1872 000c 0246     		mov	r2, r0
 1873 000e 2146     		mov	r1, r4
 1874 0010 2846     		mov	r0, r5
 1875 0012 FFF7FEFF 		bl	mriBuffer_WriteSizedStringAsHex
 1876              	.LVL144:
 178:mri/core/buffer.c **** 
 1877              		.loc 1 178 1 view .LVU468
 1878 0016 38BD     		pop	{r3, r4, r5, pc}
 178:mri/core/buffer.c **** 
 1879              		.loc 1 178 1 view .LVU469
 1880              		.cfi_endproc
 1881              	.LFE20:
 1883              		.section	.text.mriBuffer_ReadUIntegerAsHex,"ax",%progbits
 1884              		.align	1
 1885              		.global	mriBuffer_ReadUIntegerAsHex
 1886              		.syntax unified
 1887              		.thumb
 1888              		.thumb_func
 1890              	mriBuffer_ReadUIntegerAsHex:
 1891              	.LVL145:
 1892              	.LFB22:
 192:mri/core/buffer.c ****     int      hexDigitsParsed;
 1893              		.loc 1 192 1 is_stmt 1 view -0
 1894              		.cfi_startproc
 1895              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccERbtyv.s 			page 49


 1896              		@ frame_needed = 0, uses_anonymous_args = 0
 192:mri/core/buffer.c ****     int      hexDigitsParsed;
 1897              		.loc 1 192 1 is_stmt 0 view .LVU471
 1898 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1899              	.LCFI20:
 1900              		.cfi_def_cfa_offset 24
 1901              		.cfi_offset 3, -24
 1902              		.cfi_offset 4, -20
 1903              		.cfi_offset 5, -16
 1904              		.cfi_offset 6, -12
 1905              		.cfi_offset 7, -8
 1906              		.cfi_offset 14, -4
 1907 0002 0746     		mov	r7, r0
 193:mri/core/buffer.c ****     uint32_t value = 0;
 1908              		.loc 1 193 5 is_stmt 1 view .LVU472
 194:mri/core/buffer.c **** 
 1909              		.loc 1 194 5 view .LVU473
 1910              	.LVL146:
 196:mri/core/buffer.c ****     {
 1911              		.loc 1 196 5 view .LVU474
 194:mri/core/buffer.c **** 
 1912              		.loc 1 194 14 is_stmt 0 view .LVU475
 1913 0004 0024     		movs	r4, #0
 196:mri/core/buffer.c ****     {
 1914              		.loc 1 196 26 view .LVU476
 1915 0006 2646     		mov	r6, r4
 1916 0008 00E0     		b	.L145
 1917              	.LVL147:
 1918              	.L148:
 196:mri/core/buffer.c ****     {
 1919              		.loc 1 196 49 is_stmt 1 view .LVU477
 1920 000a 0136     		adds	r6, r6, #1
 1921              	.LVL148:
 196:mri/core/buffer.c ****     {
 1922              		.loc 1 196 5 view .LVU478
 1923              	.L145:
 198:mri/core/buffer.c ****             value = parseNextHexDigitAndAddNibbleToValue(pBuffer, value);
 1924              		.loc 1 198 9 view .LVU479
 198:mri/core/buffer.c ****             value = parseNextHexDigitAndAddNibbleToValue(pBuffer, value);
 1925              		.loc 1 198 9 view .LVU480
 1926              	.LBB74:
 1927              	.LBI74:
  76:mri/core/try_catch.h **** {
 1928              		.loc 3 76 20 view .LVU481
 1929              	.LBB75:
 1930              		.loc 3 78 5 view .LVU482
 1931              		.loc 3 78 22 is_stmt 0 view .LVU483
 1932 000c 0D4D     		ldr	r5, .L150
 1933 000e 0023     		movs	r3, #0
 1934 0010 2B60     		str	r3, [r5]
 1935              	.LBE75:
 1936              	.LBE74:
 199:mri/core/buffer.c ****         __catch
 1937              		.loc 1 199 13 is_stmt 1 view .LVU484
 199:mri/core/buffer.c ****         __catch
 1938              		.loc 1 199 21 is_stmt 0 view .LVU485
 1939 0012 2146     		mov	r1, r4
ARM GAS  /tmp/ccERbtyv.s 			page 50


 1940 0014 3846     		mov	r0, r7
 1941 0016 FFF7FEFF 		bl	parseNextHexDigitAndAddNibbleToValue
 1942              	.LVL149:
 1943 001a 0446     		mov	r4, r0
 1944              	.LVL150:
 198:mri/core/buffer.c ****             value = parseNextHexDigitAndAddNibbleToValue(pBuffer, value);
 1945              		.loc 1 198 9 is_stmt 1 view .LVU486
 200:mri/core/buffer.c ****             break;
 1946              		.loc 1 200 9 view .LVU487
 1947 001c 2B68     		ldr	r3, [r5]
 1948 001e 002B     		cmp	r3, #0
 1949 0020 F3D0     		beq	.L148
 206:mri/core/buffer.c ****     clearOverrun(pBuffer);
 1950              		.loc 1 206 5 view .LVU488
 1951              	.LBB76:
 1952              	.LBI76:
  76:mri/core/try_catch.h **** {
 1953              		.loc 3 76 20 view .LVU489
 1954              	.LBB77:
 1955              		.loc 3 78 5 view .LVU490
 1956              		.loc 3 78 22 is_stmt 0 view .LVU491
 1957 0022 084B     		ldr	r3, .L150
 1958 0024 0022     		movs	r2, #0
 1959 0026 1A60     		str	r2, [r3]
 1960              	.LBE77:
 1961              	.LBE76:
 207:mri/core/buffer.c **** 
 1962              		.loc 1 207 5 is_stmt 1 view .LVU492
 1963 0028 3846     		mov	r0, r7
 1964              	.LVL151:
 207:mri/core/buffer.c **** 
 1965              		.loc 1 207 5 is_stmt 0 view .LVU493
 1966 002a FFF7FEFF 		bl	clearOverrun
 1967              	.LVL152:
 209:mri/core/buffer.c ****         __throw_and_return(invalidValueException, 0U);
 1968              		.loc 1 209 5 is_stmt 1 view .LVU494
 209:mri/core/buffer.c ****         __throw_and_return(invalidValueException, 0U);
 1969              		.loc 1 209 8 is_stmt 0 view .LVU495
 1970 002e 0EB1     		cbz	r6, .L149
 1971              	.LVL153:
 1972              	.L143:
 213:mri/core/buffer.c **** 
 1973              		.loc 1 213 1 view .LVU496
 1974 0030 2046     		mov	r0, r4
 1975 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1976              	.LVL154:
 1977              	.L149:
 210:mri/core/buffer.c **** 
 1978              		.loc 1 210 9 is_stmt 1 view .LVU497
 1979              	.LBB78:
 1980              	.LBI78:
  71:mri/core/try_catch.h **** {
 1981              		.loc 3 71 20 view .LVU498
 1982              	.LBB79:
  73:mri/core/try_catch.h **** }
 1983              		.loc 3 73 5 view .LVU499
  73:mri/core/try_catch.h **** }
ARM GAS  /tmp/ccERbtyv.s 			page 51


 1984              		.loc 3 73 73 is_stmt 0 view .LVU500
 1985 0034 034A     		ldr	r2, .L150
 1986 0036 1368     		ldr	r3, [r2]
 1987 0038 032B     		cmp	r3, #3
 1988 003a B8BF     		it	lt
 1989 003c 0323     		movlt	r3, #3
  73:mri/core/try_catch.h **** }
 1990              		.loc 3 73 22 view .LVU501
 1991 003e 1360     		str	r3, [r2]
 1992              	.LVL155:
  73:mri/core/try_catch.h **** }
 1993              		.loc 3 73 22 view .LVU502
 1994              	.LBE79:
 1995              	.LBE78:
 210:mri/core/buffer.c **** 
 1996              		.loc 1 210 9 view .LVU503
 1997 0040 0024     		movs	r4, #0
 1998              	.LVL156:
 210:mri/core/buffer.c **** 
 1999              		.loc 1 210 9 view .LVU504
 2000 0042 F5E7     		b	.L143
 2001              	.L151:
 2002              		.align	2
 2003              	.L150:
 2004 0044 00000000 		.word	mriExceptionCode
 2005              		.cfi_endproc
 2006              	.LFE22:
 2008              		.section	.text.mriBuffer_WriteUIntegerAsHex,"ax",%progbits
 2009              		.align	1
 2010              		.global	mriBuffer_WriteUIntegerAsHex
 2011              		.syntax unified
 2012              		.thumb
 2013              		.thumb_func
 2015              	mriBuffer_WriteUIntegerAsHex:
 2016              	.LVL157:
 2017              	.LFB26:
 254:mri/core/buffer.c ****     int              leadingZeroBytes;
 2018              		.loc 1 254 1 is_stmt 1 view -0
 2019              		.cfi_startproc
 2020              		@ args = 0, pretend = 0, frame = 0
 2021              		@ frame_needed = 0, uses_anonymous_args = 0
 254:mri/core/buffer.c ****     int              leadingZeroBytes;
 2022              		.loc 1 254 1 is_stmt 0 view .LVU506
 2023 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2024              	.LCFI21:
 2025              		.cfi_def_cfa_offset 24
 2026              		.cfi_offset 3, -24
 2027              		.cfi_offset 4, -20
 2028              		.cfi_offset 5, -16
 2029              		.cfi_offset 6, -12
 2030              		.cfi_offset 7, -8
 2031              		.cfi_offset 14, -4
 2032 0002 0546     		mov	r5, r0
 255:mri/core/buffer.c ****     int              currentByteIndex;
 2033              		.loc 1 255 5 is_stmt 1 view .LVU507
 256:mri/core/buffer.c **** 
 2034              		.loc 1 256 5 view .LVU508
ARM GAS  /tmp/ccERbtyv.s 			page 52


 258:mri/core/buffer.c ****     {
 2035              		.loc 1 258 5 view .LVU509
 258:mri/core/buffer.c ****     {
 2036              		.loc 1 258 8 is_stmt 0 view .LVU510
 2037 0004 B1B1     		cbz	r1, .L158
 2038 0006 0E46     		mov	r6, r1
 264:mri/core/buffer.c ****     currentByteIndex = ((int)sizeof(value) - leadingZeroBytes) - 1;
 2039              		.loc 1 264 5 is_stmt 1 view .LVU511
 264:mri/core/buffer.c ****     currentByteIndex = ((int)sizeof(value) - leadingZeroBytes) - 1;
 2040              		.loc 1 264 24 is_stmt 0 view .LVU512
 2041 0008 0846     		mov	r0, r1
 2042              	.LVL158:
 264:mri/core/buffer.c ****     currentByteIndex = ((int)sizeof(value) - leadingZeroBytes) - 1;
 2043              		.loc 1 264 24 view .LVU513
 2044 000a FFF7FEFF 		bl	countLeadingZeroBytes
 2045              	.LVL159:
 265:mri/core/buffer.c ****     while (currentByteIndex >= 0)
 2046              		.loc 1 265 5 is_stmt 1 view .LVU514
 265:mri/core/buffer.c ****     while (currentByteIndex >= 0)
 2047              		.loc 1 265 22 is_stmt 0 view .LVU515
 2048 000e C0F10301 		rsb	r1, r0, #3
 2049              	.LVL160:
 266:mri/core/buffer.c ****     {
 2050              		.loc 1 266 5 is_stmt 1 view .LVU516
 2051              	.L155:
 266:mri/core/buffer.c ****     {
 2052              		.loc 1 266 29 view .LVU517
 2053 0012 0029     		cmp	r1, #0
 2054 0014 10DB     		blt	.L152
 268:mri/core/buffer.c ****             Buffer_WriteByteAsHex(pBuffer, extractByteAtIndex(value, currentByteIndex--));
 2055              		.loc 1 268 9 view .LVU518
 268:mri/core/buffer.c ****             Buffer_WriteByteAsHex(pBuffer, extractByteAtIndex(value, currentByteIndex--));
 2056              		.loc 1 268 9 view .LVU519
 2057              	.LBB80:
 2058              	.LBI80:
  76:mri/core/try_catch.h **** {
 2059              		.loc 3 76 20 view .LVU520
 2060              	.LBB81:
 2061              		.loc 3 78 5 view .LVU521
 2062              		.loc 3 78 22 is_stmt 0 view .LVU522
 2063 0016 094C     		ldr	r4, .L159
 2064 0018 0023     		movs	r3, #0
 2065 001a 2360     		str	r3, [r4]
 2066              	.LBE81:
 2067              	.LBE80:
 269:mri/core/buffer.c ****         __catch
 2068              		.loc 1 269 13 is_stmt 1 view .LVU523
 2069 001c 4F1E     		subs	r7, r1, #1
 2070              	.LVL161:
 269:mri/core/buffer.c ****         __catch
 2071              		.loc 1 269 13 is_stmt 0 view .LVU524
 2072 001e 3046     		mov	r0, r6
 2073 0020 FFF7FEFF 		bl	extractByteAtIndex
 2074              	.LVL162:
 2075 0024 0146     		mov	r1, r0
 2076 0026 2846     		mov	r0, r5
 2077 0028 FFF7FEFF 		bl	mriBuffer_WriteByteAsHex
ARM GAS  /tmp/ccERbtyv.s 			page 53


 2078              	.LVL163:
 268:mri/core/buffer.c ****             Buffer_WriteByteAsHex(pBuffer, extractByteAtIndex(value, currentByteIndex--));
 2079              		.loc 1 268 9 is_stmt 1 view .LVU525
 270:mri/core/buffer.c ****             __rethrow;
 2080              		.loc 1 270 9 view .LVU526
 2081 002c 2368     		ldr	r3, [r4]
 2082 002e 1BB9     		cbnz	r3, .L152
 269:mri/core/buffer.c ****         __catch
 2083              		.loc 1 269 13 is_stmt 0 view .LVU527
 2084 0030 3946     		mov	r1, r7
 2085 0032 EEE7     		b	.L155
 2086              	.LVL164:
 2087              	.L158:
 260:mri/core/buffer.c ****         return;
 2088              		.loc 1 260 9 is_stmt 1 view .LVU528
 2089 0034 FFF7FEFF 		bl	mriBuffer_WriteByteAsHex
 2090              	.LVL165:
 261:mri/core/buffer.c ****     }
 2091              		.loc 1 261 9 view .LVU529
 2092              	.L152:
 273:mri/core/buffer.c **** 
 2093              		.loc 1 273 1 is_stmt 0 view .LVU530
 2094 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2095              	.LVL166:
 2096              	.L160:
 273:mri/core/buffer.c **** 
 2097              		.loc 1 273 1 view .LVU531
 2098 003a 00BF     		.align	2
 2099              	.L159:
 2100 003c 00000000 		.word	mriExceptionCode
 2101              		.cfi_endproc
 2102              	.LFE26:
 2104              		.section	.text.mriBuffer_WriteIntegerAsHex,"ax",%progbits
 2105              		.align	1
 2106              		.global	mriBuffer_WriteIntegerAsHex
 2107              		.syntax unified
 2108              		.thumb
 2109              		.thumb_func
 2111              	mriBuffer_WriteIntegerAsHex:
 2112              	.LVL167:
 2113              	.LFB31:
 333:mri/core/buffer.c ****     __try
 2114              		.loc 1 333 1 is_stmt 1 view -0
 2115              		.cfi_startproc
 2116              		@ args = 0, pretend = 0, frame = 0
 2117              		@ frame_needed = 0, uses_anonymous_args = 0
 333:mri/core/buffer.c ****     __try
 2118              		.loc 1 333 1 is_stmt 0 view .LVU533
 2119 0000 38B5     		push	{r3, r4, r5, lr}
 2120              	.LCFI22:
 2121              		.cfi_def_cfa_offset 16
 2122              		.cfi_offset 3, -16
 2123              		.cfi_offset 4, -12
 2124              		.cfi_offset 5, -8
 2125              		.cfi_offset 14, -4
 2126 0002 0446     		mov	r4, r0
 334:mri/core/buffer.c ****     {
ARM GAS  /tmp/ccERbtyv.s 			page 54


 2127              		.loc 1 334 5 is_stmt 1 view .LVU534
 334:mri/core/buffer.c ****     {
 2128              		.loc 1 334 5 view .LVU535
 2129              	.LBB82:
 2130              	.LBI82:
  76:mri/core/try_catch.h **** {
 2131              		.loc 3 76 20 view .LVU536
 2132              	.LBB83:
 2133              		.loc 3 78 5 view .LVU537
 2134              		.loc 3 78 22 is_stmt 0 view .LVU538
 2135 0004 064D     		ldr	r5, .L165
 2136 0006 0023     		movs	r3, #0
 2137 0008 2B60     		str	r3, [r5]
 2138              	.LBE83:
 2139              	.LBE82:
 336:mri/core/buffer.c ****         __throwing_func(Buffer_WriteUIntegerAsHex(pBuffer, (uint32_t)value));
 2140              		.loc 1 336 9 is_stmt 1 view .LVU539
 2141 000a FFF7FEFF 		bl	calculateAbsoluteValueAndWriteMinusSignForNegativeValue
 2142              	.LVL168:
 336:mri/core/buffer.c ****         __throwing_func(Buffer_WriteUIntegerAsHex(pBuffer, (uint32_t)value));
 2143              		.loc 1 336 9 view .LVU540
 2144 000e 2B68     		ldr	r3, [r5]
 2145 0010 03B1     		cbz	r3, .L164
 2146              	.LVL169:
 2147              	.L161:
 343:mri/core/buffer.c **** 
 2148              		.loc 1 343 1 is_stmt 0 view .LVU541
 2149 0012 38BD     		pop	{r3, r4, r5, pc}
 2150              	.LVL170:
 2151              	.L164:
 336:mri/core/buffer.c ****         __throwing_func(Buffer_WriteUIntegerAsHex(pBuffer, (uint32_t)value));
 2152              		.loc 1 336 105 is_stmt 1 discriminator 1 view .LVU542
 337:mri/core/buffer.c ****     }
 2153              		.loc 1 337 9 discriminator 1 view .LVU543
 2154 0014 0146     		mov	r1, r0
 2155 0016 2046     		mov	r0, r4
 2156              	.LVL171:
 337:mri/core/buffer.c ****     }
 2157              		.loc 1 337 9 is_stmt 0 discriminator 1 view .LVU544
 2158 0018 FFF7FEFF 		bl	mriBuffer_WriteUIntegerAsHex
 2159              	.LVL172:
 337:mri/core/buffer.c ****     }
 2160              		.loc 1 337 9 is_stmt 1 discriminator 1 view .LVU545
 337:mri/core/buffer.c ****     }
 2161              		.loc 1 337 77 discriminator 1 view .LVU546
 334:mri/core/buffer.c ****     {
 2162              		.loc 1 334 5 discriminator 1 view .LVU547
 339:mri/core/buffer.c ****     {
 2163              		.loc 1 339 5 discriminator 1 view .LVU548
 2164 001c F9E7     		b	.L161
 2165              	.L166:
 2166 001e 00BF     		.align	2
 2167              	.L165:
 2168 0020 00000000 		.word	mriExceptionCode
 2169              		.cfi_endproc
 2170              	.LFE31:
 2172              		.section	.text.mriBuffer_IsNextCharEqualTo,"ax",%progbits
ARM GAS  /tmp/ccERbtyv.s 			page 55


 2173              		.align	1
 2174              		.global	mriBuffer_IsNextCharEqualTo
 2175              		.syntax unified
 2176              		.thumb
 2177              		.thumb_func
 2179              	mriBuffer_IsNextCharEqualTo:
 2180              	.LVL173:
 2181              	.LFB33:
 361:mri/core/buffer.c ****     __try
 2182              		.loc 1 361 1 view -0
 2183              		.cfi_startproc
 2184              		@ args = 0, pretend = 0, frame = 0
 2185              		@ frame_needed = 0, uses_anonymous_args = 0
 361:mri/core/buffer.c ****     __try
 2186              		.loc 1 361 1 is_stmt 0 view .LVU550
 2187 0000 70B5     		push	{r4, r5, r6, lr}
 2188              	.LCFI23:
 2189              		.cfi_def_cfa_offset 16
 2190              		.cfi_offset 4, -16
 2191              		.cfi_offset 5, -12
 2192              		.cfi_offset 6, -8
 2193              		.cfi_offset 14, -4
 2194 0002 0446     		mov	r4, r0
 2195 0004 0D46     		mov	r5, r1
 362:mri/core/buffer.c ****         throwExceptionIfBufferLeftIsSmallerThan(pBuffer, 1);
 2196              		.loc 1 362 5 is_stmt 1 view .LVU551
 362:mri/core/buffer.c ****         throwExceptionIfBufferLeftIsSmallerThan(pBuffer, 1);
 2197              		.loc 1 362 5 view .LVU552
 2198              	.LBB84:
 2199              	.LBI84:
  76:mri/core/try_catch.h **** {
 2200              		.loc 3 76 20 view .LVU553
 2201              	.LBB85:
 2202              		.loc 3 78 5 view .LVU554
 2203              		.loc 3 78 22 is_stmt 0 view .LVU555
 2204 0006 0B4E     		ldr	r6, .L172
 2205 0008 0023     		movs	r3, #0
 2206 000a 3360     		str	r3, [r6]
 2207              	.LBE85:
 2208              	.LBE84:
 363:mri/core/buffer.c ****     __catch
 2209              		.loc 1 363 9 is_stmt 1 view .LVU556
 2210 000c 0121     		movs	r1, #1
 2211              	.LVL174:
 363:mri/core/buffer.c ****     __catch
 2212              		.loc 1 363 9 is_stmt 0 view .LVU557
 2213 000e FFF7FEFF 		bl	throwExceptionIfBufferLeftIsSmallerThan
 2214              	.LVL175:
 362:mri/core/buffer.c ****         throwExceptionIfBufferLeftIsSmallerThan(pBuffer, 1);
 2215              		.loc 1 362 5 is_stmt 1 view .LVU558
 364:mri/core/buffer.c ****         __rethrow_and_return(0);
 2216              		.loc 1 364 5 view .LVU559
 2217 0012 3668     		ldr	r6, [r6]
 2218 0014 5EB9     		cbnz	r6, .L169
 367:mri/core/buffer.c ****     {
 2219              		.loc 1 367 5 view .LVU560
 367:mri/core/buffer.c ****     {
ARM GAS  /tmp/ccERbtyv.s 			page 56


 2220              		.loc 1 367 9 is_stmt 0 view .LVU561
 2221 0016 2046     		mov	r0, r4
 2222 0018 FFF7FEFF 		bl	peekAtNextChar
 2223              	.LVL176:
 367:mri/core/buffer.c ****     {
 2224              		.loc 1 367 8 view .LVU562
 2225 001c A842     		cmp	r0, r5
 2226 001e 01D0     		beq	.L171
 2227              	.L167:
 374:mri/core/buffer.c **** 
 2228              		.loc 1 374 1 view .LVU563
 2229 0020 3046     		mov	r0, r6
 2230 0022 70BD     		pop	{r4, r5, r6, pc}
 2231              	.LVL177:
 2232              	.L171:
 369:mri/core/buffer.c ****         return 1;
 2233              		.loc 1 369 9 is_stmt 1 view .LVU564
 2234 0024 2046     		mov	r0, r4
 2235 0026 FFF7FEFF 		bl	advanceToNextChar
 2236              	.LVL178:
 370:mri/core/buffer.c ****     }
 2237              		.loc 1 370 9 view .LVU565
 370:mri/core/buffer.c ****     }
 2238              		.loc 1 370 16 is_stmt 0 view .LVU566
 2239 002a 0126     		movs	r6, #1
 2240 002c F8E7     		b	.L167
 2241              	.L169:
 365:mri/core/buffer.c **** 
 2242              		.loc 1 365 9 view .LVU567
 2243 002e 0026     		movs	r6, #0
 2244 0030 F6E7     		b	.L167
 2245              	.L173:
 2246 0032 00BF     		.align	2
 2247              	.L172:
 2248 0034 00000000 		.word	mriExceptionCode
 2249              		.cfi_endproc
 2250              	.LFE33:
 2252              		.section	.text.mriBuffer_ReadIntegerAsHex,"ax",%progbits
 2253              		.align	1
 2254              		.global	mriBuffer_ReadIntegerAsHex
 2255              		.syntax unified
 2256              		.thumb
 2257              		.thumb_func
 2259              	mriBuffer_ReadIntegerAsHex:
 2260              	.LVL179:
 2261              	.LFB29:
 300:mri/core/buffer.c ****     uint32_t value = 0;
 2262              		.loc 1 300 1 is_stmt 1 view -0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 0
 2265              		@ frame_needed = 0, uses_anonymous_args = 0
 300:mri/core/buffer.c ****     uint32_t value = 0;
 2266              		.loc 1 300 1 is_stmt 0 view .LVU569
 2267 0000 70B5     		push	{r4, r5, r6, lr}
 2268              	.LCFI24:
 2269              		.cfi_def_cfa_offset 16
 2270              		.cfi_offset 4, -16
ARM GAS  /tmp/ccERbtyv.s 			page 57


 2271              		.cfi_offset 5, -12
 2272              		.cfi_offset 6, -8
 2273              		.cfi_offset 14, -4
 2274 0002 0546     		mov	r5, r0
 301:mri/core/buffer.c ****     int      isNegative = 0;
 2275              		.loc 1 301 5 is_stmt 1 view .LVU570
 2276              	.LVL180:
 302:mri/core/buffer.c **** 
 2277              		.loc 1 302 5 view .LVU571
 304:mri/core/buffer.c ****     {
 2278              		.loc 1 304 5 view .LVU572
 304:mri/core/buffer.c ****     {
 2279              		.loc 1 304 5 view .LVU573
 2280              	.LBB86:
 2281              	.LBI86:
  76:mri/core/try_catch.h **** {
 2282              		.loc 3 76 20 view .LVU574
 2283              	.LBB87:
 2284              		.loc 3 78 5 view .LVU575
 2285              		.loc 3 78 22 is_stmt 0 view .LVU576
 2286 0004 0B4E     		ldr	r6, .L182
 2287 0006 0023     		movs	r3, #0
 2288 0008 3360     		str	r3, [r6]
 2289              	.LBE87:
 2290              	.LBE86:
 306:mri/core/buffer.c ****         __throwing_func( value = Buffer_ReadUIntegerAsHex(pBuffer) );
 2291              		.loc 1 306 9 is_stmt 1 view .LVU577
 2292 000a 2D21     		movs	r1, #45
 2293 000c FFF7FEFF 		bl	mriBuffer_IsNextCharEqualTo
 2294              	.LVL181:
 306:mri/core/buffer.c ****         __throwing_func( value = Buffer_ReadUIntegerAsHex(pBuffer) );
 2295              		.loc 1 306 9 is_stmt 0 view .LVU578
 2296 0010 0446     		mov	r4, r0
 2297              	.LVL182:
 306:mri/core/buffer.c ****         __throwing_func( value = Buffer_ReadUIntegerAsHex(pBuffer) );
 2298              		.loc 1 306 9 is_stmt 1 view .LVU579
 2299 0012 3368     		ldr	r3, [r6]
 2300 0014 2BB1     		cbz	r3, .L180
 301:mri/core/buffer.c ****     int      isNegative = 0;
 2301              		.loc 1 301 14 is_stmt 0 view .LVU580
 2302 0016 0021     		movs	r1, #0
 2303              	.LVL183:
 2304              	.L175:
 307:mri/core/buffer.c ****     }
 2305              		.loc 1 307 69 is_stmt 1 discriminator 1 view .LVU581
 304:mri/core/buffer.c ****     {
 2306              		.loc 1 304 5 discriminator 1 view .LVU582
 309:mri/core/buffer.c ****     {
 2307              		.loc 1 309 5 discriminator 1 view .LVU583
 2308 0018 064B     		ldr	r3, .L182
 2309 001a 1B68     		ldr	r3, [r3]
 2310 001c 33B1     		cbz	r3, .L181
 311:mri/core/buffer.c ****     }
 2311              		.loc 1 311 9 is_stmt 0 view .LVU584
 2312 001e 0020     		movs	r0, #0
 2313              	.LVL184:
 2314              	.L174:
ARM GAS  /tmp/ccERbtyv.s 			page 58


 315:mri/core/buffer.c **** 
 2315              		.loc 1 315 1 view .LVU585
 2316 0020 70BD     		pop	{r4, r5, r6, pc}
 2317              	.LVL185:
 2318              	.L180:
 306:mri/core/buffer.c ****         __throwing_func( value = Buffer_ReadUIntegerAsHex(pBuffer) );
 2319              		.loc 1 306 79 is_stmt 1 discriminator 1 view .LVU586
 307:mri/core/buffer.c ****     }
 2320              		.loc 1 307 9 discriminator 1 view .LVU587
 2321 0022 2846     		mov	r0, r5
 2322              	.LVL186:
 307:mri/core/buffer.c ****     }
 2323              		.loc 1 307 9 is_stmt 0 discriminator 1 view .LVU588
 2324 0024 FFF7FEFF 		bl	mriBuffer_ReadUIntegerAsHex
 2325              	.LVL187:
 2326 0028 0146     		mov	r1, r0
 2327              	.LVL188:
 307:mri/core/buffer.c ****     }
 2328              		.loc 1 307 9 is_stmt 1 discriminator 1 view .LVU589
 2329 002a F5E7     		b	.L175
 2330              	.LVL189:
 2331              	.L181:
 314:mri/core/buffer.c **** }
 2332              		.loc 1 314 5 view .LVU590
 314:mri/core/buffer.c **** }
 2333              		.loc 1 314 12 is_stmt 0 view .LVU591
 2334 002c 2046     		mov	r0, r4
 2335 002e FFF7FEFF 		bl	convertToIntegerAndThrowIfOutOfRange
 2336              	.LVL190:
 314:mri/core/buffer.c **** }
 2337              		.loc 1 314 12 view .LVU592
 2338 0032 F5E7     		b	.L174
 2339              	.L183:
 2340              		.align	2
 2341              	.L182:
 2342 0034 00000000 		.word	mriExceptionCode
 2343              		.cfi_endproc
 2344              	.LFE29:
 2346              		.section	.text.mriBuffer_MatchesString,"ax",%progbits
 2347              		.align	1
 2348              		.global	mriBuffer_MatchesString
 2349              		.syntax unified
 2350              		.thumb
 2351              		.thumb_func
 2353              	mriBuffer_MatchesString:
 2354              	.LVL191:
 2355              	.LFB37:
 404:mri/core/buffer.c ****     CompareParams params = { doesBufferContainThisString, 1 };
 2356              		.loc 1 404 1 is_stmt 1 view -0
 2357              		.cfi_startproc
 2358              		@ args = 0, pretend = 0, frame = 8
 2359              		@ frame_needed = 0, uses_anonymous_args = 0
 404:mri/core/buffer.c ****     CompareParams params = { doesBufferContainThisString, 1 };
 2360              		.loc 1 404 1 is_stmt 0 view .LVU594
 2361 0000 10B5     		push	{r4, lr}
 2362              	.LCFI25:
 2363              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccERbtyv.s 			page 59


 2364              		.cfi_offset 4, -8
 2365              		.cfi_offset 14, -4
 2366 0002 82B0     		sub	sp, sp, #8
 2367              	.LCFI26:
 2368              		.cfi_def_cfa_offset 16
 2369 0004 8646     		mov	lr, r0
 2370 0006 0C46     		mov	r4, r1
 2371 0008 1346     		mov	r3, r2
 405:mri/core/buffer.c ****     return matchesString(&params, pBuffer, pString, stringLength);
 2372              		.loc 1 405 5 is_stmt 1 view .LVU595
 405:mri/core/buffer.c ****     return matchesString(&params, pBuffer, pString, stringLength);
 2373              		.loc 1 405 19 is_stmt 0 view .LVU596
 2374 000a 0649     		ldr	r1, .L186
 2375              	.LVL192:
 405:mri/core/buffer.c ****     return matchesString(&params, pBuffer, pString, stringLength);
 2376              		.loc 1 405 19 view .LVU597
 2377 000c EC46     		mov	ip, sp
 2378 000e 03C9     		ldm	r1, {r0, r1}
 2379              	.LVL193:
 405:mri/core/buffer.c ****     return matchesString(&params, pBuffer, pString, stringLength);
 2380              		.loc 1 405 19 view .LVU598
 2381 0010 8CE80300 		stm	ip, {r0, r1}
 406:mri/core/buffer.c **** }
 2382              		.loc 1 406 5 is_stmt 1 view .LVU599
 406:mri/core/buffer.c **** }
 2383              		.loc 1 406 12 is_stmt 0 view .LVU600
 2384 0014 2246     		mov	r2, r4
 2385              	.LVL194:
 406:mri/core/buffer.c **** }
 2386              		.loc 1 406 12 view .LVU601
 2387 0016 7146     		mov	r1, lr
 2388 0018 6046     		mov	r0, ip
 2389 001a FFF7FEFF 		bl	matchesString
 2390              	.LVL195:
 407:mri/core/buffer.c **** 
 2391              		.loc 1 407 1 view .LVU602
 2392 001e 02B0     		add	sp, sp, #8
 2393              	.LCFI27:
 2394              		.cfi_def_cfa_offset 8
 2395              		@ sp needed
 2396 0020 10BD     		pop	{r4, pc}
 2397              	.LVL196:
 2398              	.L187:
 407:mri/core/buffer.c **** 
 2399              		.loc 1 407 1 view .LVU603
 2400 0022 00BF     		.align	2
 2401              	.L186:
 2402 0024 00000000 		.word	.LANCHOR0
 2403              		.cfi_endproc
 2404              	.LFE37:
 2406              		.section	.text.mriBuffer_MatchesHexString,"ax",%progbits
 2407              		.align	1
 2408              		.global	mriBuffer_MatchesHexString
 2409              		.syntax unified
 2410              		.thumb
 2411              		.thumb_func
 2413              	mriBuffer_MatchesHexString:
ARM GAS  /tmp/ccERbtyv.s 			page 60


 2414              	.LVL197:
 2415              	.LFB40:
 438:mri/core/buffer.c ****     CompareParams params = { doesBufferContainThisHexString, 2 };
 2416              		.loc 1 438 1 is_stmt 1 view -0
 2417              		.cfi_startproc
 2418              		@ args = 0, pretend = 0, frame = 8
 2419              		@ frame_needed = 0, uses_anonymous_args = 0
 438:mri/core/buffer.c ****     CompareParams params = { doesBufferContainThisHexString, 2 };
 2420              		.loc 1 438 1 is_stmt 0 view .LVU605
 2421 0000 10B5     		push	{r4, lr}
 2422              	.LCFI28:
 2423              		.cfi_def_cfa_offset 8
 2424              		.cfi_offset 4, -8
 2425              		.cfi_offset 14, -4
 2426 0002 82B0     		sub	sp, sp, #8
 2427              	.LCFI29:
 2428              		.cfi_def_cfa_offset 16
 2429 0004 8646     		mov	lr, r0
 2430 0006 0C46     		mov	r4, r1
 2431 0008 1346     		mov	r3, r2
 439:mri/core/buffer.c ****     return matchesString(&params, pBuffer, pString, stringLength);
 2432              		.loc 1 439 5 is_stmt 1 view .LVU606
 439:mri/core/buffer.c ****     return matchesString(&params, pBuffer, pString, stringLength);
 2433              		.loc 1 439 19 is_stmt 0 view .LVU607
 2434 000a EC46     		mov	ip, sp
 2435 000c 0549     		ldr	r1, .L190
 2436              	.LVL198:
 439:mri/core/buffer.c ****     return matchesString(&params, pBuffer, pString, stringLength);
 2437              		.loc 1 439 19 view .LVU608
 2438 000e 03C9     		ldm	r1, {r0, r1}
 2439              	.LVL199:
 439:mri/core/buffer.c ****     return matchesString(&params, pBuffer, pString, stringLength);
 2440              		.loc 1 439 19 view .LVU609
 2441 0010 8CE80300 		stm	ip, {r0, r1}
 440:mri/core/buffer.c **** }
 2442              		.loc 1 440 5 is_stmt 1 view .LVU610
 440:mri/core/buffer.c **** }
 2443              		.loc 1 440 12 is_stmt 0 view .LVU611
 2444 0014 2246     		mov	r2, r4
 2445              	.LVL200:
 440:mri/core/buffer.c **** }
 2446              		.loc 1 440 12 view .LVU612
 2447 0016 7146     		mov	r1, lr
 2448 0018 6046     		mov	r0, ip
 2449 001a FFF7FEFF 		bl	matchesString
 2450              	.LVL201:
 441:mri/core/buffer.c **** 
 2451              		.loc 1 441 1 view .LVU613
 2452 001e 02B0     		add	sp, sp, #8
 2453              	.LCFI30:
 2454              		.cfi_def_cfa_offset 8
 2455              		@ sp needed
 2456 0020 10BD     		pop	{r4, pc}
 2457              	.LVL202:
 2458              	.L191:
 441:mri/core/buffer.c **** 
 2459              		.loc 1 441 1 view .LVU614
ARM GAS  /tmp/ccERbtyv.s 			page 61


 2460 0022 00BF     		.align	2
 2461              	.L190:
 2462 0024 08000000 		.word	.LANCHOR0+8
 2463              		.cfi_endproc
 2464              	.LFE40:
 2466              		.section	.rodata.NibbleToHexChar,"a"
 2467              		.align	2
 2470              	NibbleToHexChar:
 2471 0000 30313233 		.ascii	"0123456789abcdef"
 2471      34353637 
 2471      38396162 
 2471      63646566 
 2472              		.section	.rodata
 2473              		.align	2
 2474              		.set	.LANCHOR0,. + 0
 2475              	.LC0:
 2476 0000 00000000 		.word	doesBufferContainThisString
 2477 0004 01000000 		.word	1
 2478              	.LC1:
 2479 0008 00000000 		.word	doesBufferContainThisHexString
 2480 000c 02000000 		.word	2
 2481              		.text
 2482              	.Letext0:
 2483              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2484              		.file 5 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 2485              		.file 6 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2486              		.file 7 "mri/core/buffer.h"
 2487              		.file 8 "mri/core/libc.h"
ARM GAS  /tmp/ccERbtyv.s 			page 62


DEFINED SYMBOLS
                            *ABS*:0000000000000000 buffer.c
     /tmp/ccERbtyv.s:21     .text.HexCharToNibble:0000000000000000 $t
     /tmp/ccERbtyv.s:26     .text.HexCharToNibble:0000000000000000 HexCharToNibble
     /tmp/ccERbtyv.s:107    .text.HexCharToNibble:000000000000003c $d
     /tmp/ccERbtyv.s:112    .text.recordThatBufferOverrunHasOccurred:0000000000000000 $t
     /tmp/ccERbtyv.s:117    .text.recordThatBufferOverrunHasOccurred:0000000000000000 recordThatBufferOverrunHasOccurred
     /tmp/ccERbtyv.s:138    .text.pushBackLastChar:0000000000000000 $t
     /tmp/ccERbtyv.s:143    .text.pushBackLastChar:0000000000000000 pushBackLastChar
     /tmp/ccERbtyv.s:170    .text.countLeadingZeroBytes:0000000000000000 $t
     /tmp/ccERbtyv.s:175    .text.countLeadingZeroBytes:0000000000000000 countLeadingZeroBytes
     /tmp/ccERbtyv.s:219    .text.extractByteAtIndex:0000000000000000 $t
     /tmp/ccERbtyv.s:224    .text.extractByteAtIndex:0000000000000000 extractByteAtIndex
     /tmp/ccERbtyv.s:248    .text.convertToIntegerAndThrowIfOutOfRange:0000000000000000 $t
     /tmp/ccERbtyv.s:253    .text.convertToIntegerAndThrowIfOutOfRange:0000000000000000 convertToIntegerAndThrowIfOutOfRange
     /tmp/ccERbtyv.s:340    .text.convertToIntegerAndThrowIfOutOfRange:000000000000003c $d
     /tmp/ccERbtyv.s:345    .text.peekAtNextChar:0000000000000000 $t
     /tmp/ccERbtyv.s:350    .text.peekAtNextChar:0000000000000000 peekAtNextChar
     /tmp/ccERbtyv.s:370    .text.advanceToNextChar:0000000000000000 $t
     /tmp/ccERbtyv.s:375    .text.advanceToNextChar:0000000000000000 advanceToNextChar
     /tmp/ccERbtyv.s:395    .text.mriBuffer_Reset:0000000000000000 $t
     /tmp/ccERbtyv.s:401    .text.mriBuffer_Reset:0000000000000000 mriBuffer_Reset
     /tmp/ccERbtyv.s:420    .text.mriBuffer_Init:0000000000000000 $t
     /tmp/ccERbtyv.s:426    .text.mriBuffer_Init:0000000000000000 mriBuffer_Init
     /tmp/ccERbtyv.s:457    .text.mriBuffer_SetEndOfBuffer:0000000000000000 $t
     /tmp/ccERbtyv.s:463    .text.mriBuffer_SetEndOfBuffer:0000000000000000 mriBuffer_SetEndOfBuffer
     /tmp/ccERbtyv.s:489    .text.mriBuffer_GetLength:0000000000000000 $t
     /tmp/ccERbtyv.s:495    .text.mriBuffer_GetLength:0000000000000000 mriBuffer_GetLength
     /tmp/ccERbtyv.s:526    .text.mriBuffer_GetArray:0000000000000000 $t
     /tmp/ccERbtyv.s:532    .text.mriBuffer_GetArray:0000000000000000 mriBuffer_GetArray
     /tmp/ccERbtyv.s:550    .text.mriBuffer_OverrunDetected:0000000000000000 $t
     /tmp/ccERbtyv.s:556    .text.mriBuffer_OverrunDetected:0000000000000000 mriBuffer_OverrunDetected
     /tmp/ccERbtyv.s:580    .text.mriBuffer_BytesLeft:0000000000000000 $t
     /tmp/ccERbtyv.s:586    .text.mriBuffer_BytesLeft:0000000000000000 mriBuffer_BytesLeft
     /tmp/ccERbtyv.s:625    .text.mriBuffer_Advance:0000000000000000 $t
     /tmp/ccERbtyv.s:631    .text.mriBuffer_Advance:0000000000000000 mriBuffer_Advance
     /tmp/ccERbtyv.s:672    .text.throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan:0000000000000000 $t
     /tmp/ccERbtyv.s:677    .text.throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan:0000000000000000 throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan
     /tmp/ccERbtyv.s:733    .text.throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan:0000000000000024 $d
     /tmp/ccERbtyv.s:738    .text.throwExceptionIfBufferLeftIsSmallerThan:0000000000000000 $t
     /tmp/ccERbtyv.s:743    .text.throwExceptionIfBufferLeftIsSmallerThan:0000000000000000 throwExceptionIfBufferLeftIsSmallerThan
     /tmp/ccERbtyv.s:792    .text.throwExceptionIfBufferLeftIsSmallerThan:000000000000001c $d
     /tmp/ccERbtyv.s:797    .text.matchesString:0000000000000000 $t
     /tmp/ccERbtyv.s:802    .text.matchesString:0000000000000000 matchesString
     /tmp/ccERbtyv.s:888    .text.matchesString:000000000000004c $d
     /tmp/ccERbtyv.s:893    .text.doesBufferContainThisString:0000000000000000 $t
     /tmp/ccERbtyv.s:898    .text.doesBufferContainThisString:0000000000000000 doesBufferContainThisString
     /tmp/ccERbtyv.s:973    .text.clearOverrun:0000000000000000 $t
     /tmp/ccERbtyv.s:978    .text.clearOverrun:0000000000000000 clearOverrun
     /tmp/ccERbtyv.s:1011   .text.mriBuffer_WriteChar:0000000000000000 $t
     /tmp/ccERbtyv.s:1017   .text.mriBuffer_WriteChar:0000000000000000 mriBuffer_WriteChar
     /tmp/ccERbtyv.s:1073   .text.mriBuffer_WriteChar:0000000000000020 $d
     /tmp/ccERbtyv.s:1078   .text.calculateAbsoluteValueAndWriteMinusSignForNegativeValue:0000000000000000 $t
     /tmp/ccERbtyv.s:1083   .text.calculateAbsoluteValueAndWriteMinusSignForNegativeValue:0000000000000000 calculateAbsoluteValueAndWriteMinusSignForNegativeValue
     /tmp/ccERbtyv.s:1122   .text.mriBuffer_ReadChar:0000000000000000 $t
     /tmp/ccERbtyv.s:1128   .text.mriBuffer_ReadChar:0000000000000000 mriBuffer_ReadChar
     /tmp/ccERbtyv.s:1184   .text.mriBuffer_ReadChar:0000000000000024 $d
ARM GAS  /tmp/ccERbtyv.s 			page 63


     /tmp/ccERbtyv.s:1189   .text.parseNextHexDigitAndAddNibbleToValue:0000000000000000 $t
     /tmp/ccERbtyv.s:1194   .text.parseNextHexDigitAndAddNibbleToValue:0000000000000000 parseNextHexDigitAndAddNibbleToValue
     /tmp/ccERbtyv.s:1279   .text.parseNextHexDigitAndAddNibbleToValue:0000000000000030 $d
     /tmp/ccERbtyv.s:1284   .text.mriBuffer_WriteByteAsHex:0000000000000000 $t
     /tmp/ccERbtyv.s:1290   .text.mriBuffer_WriteByteAsHex:0000000000000000 mriBuffer_WriteByteAsHex
     /tmp/ccERbtyv.s:1363   .text.mriBuffer_WriteByteAsHex:0000000000000034 $d
     /tmp/ccERbtyv.s:2470   .rodata.NibbleToHexChar:0000000000000000 NibbleToHexChar
     /tmp/ccERbtyv.s:1369   .text.mriBuffer_ReadByteAsHex:0000000000000000 $t
     /tmp/ccERbtyv.s:1375   .text.mriBuffer_ReadByteAsHex:0000000000000000 mriBuffer_ReadByteAsHex
     /tmp/ccERbtyv.s:1482   .text.mriBuffer_ReadByteAsHex:0000000000000050 $d
     /tmp/ccERbtyv.s:1487   .text.hexStringCompare:0000000000000000 $t
     /tmp/ccERbtyv.s:1492   .text.hexStringCompare:0000000000000000 hexStringCompare
     /tmp/ccERbtyv.s:1579   .text.doesBufferContainThisHexString:0000000000000000 $t
     /tmp/ccERbtyv.s:1584   .text.doesBufferContainThisHexString:0000000000000000 doesBufferContainThisHexString
     /tmp/ccERbtyv.s:1653   .text.mriBuffer_WriteSizedString:0000000000000000 $t
     /tmp/ccERbtyv.s:1659   .text.mriBuffer_WriteSizedString:0000000000000000 mriBuffer_WriteSizedString
     /tmp/ccERbtyv.s:1741   .text.mriBuffer_WriteSizedString:0000000000000034 $d
     /tmp/ccERbtyv.s:1746   .text.mriBuffer_WriteString:0000000000000000 $t
     /tmp/ccERbtyv.s:1752   .text.mriBuffer_WriteString:0000000000000000 mriBuffer_WriteString
     /tmp/ccERbtyv.s:1788   .text.mriBuffer_WriteSizedStringAsHex:0000000000000000 $t
     /tmp/ccERbtyv.s:1794   .text.mriBuffer_WriteSizedStringAsHex:0000000000000000 mriBuffer_WriteSizedStringAsHex
     /tmp/ccERbtyv.s:1842   .text.mriBuffer_WriteStringAsHex:0000000000000000 $t
     /tmp/ccERbtyv.s:1848   .text.mriBuffer_WriteStringAsHex:0000000000000000 mriBuffer_WriteStringAsHex
     /tmp/ccERbtyv.s:1884   .text.mriBuffer_ReadUIntegerAsHex:0000000000000000 $t
     /tmp/ccERbtyv.s:1890   .text.mriBuffer_ReadUIntegerAsHex:0000000000000000 mriBuffer_ReadUIntegerAsHex
     /tmp/ccERbtyv.s:2004   .text.mriBuffer_ReadUIntegerAsHex:0000000000000044 $d
     /tmp/ccERbtyv.s:2009   .text.mriBuffer_WriteUIntegerAsHex:0000000000000000 $t
     /tmp/ccERbtyv.s:2015   .text.mriBuffer_WriteUIntegerAsHex:0000000000000000 mriBuffer_WriteUIntegerAsHex
     /tmp/ccERbtyv.s:2100   .text.mriBuffer_WriteUIntegerAsHex:000000000000003c $d
     /tmp/ccERbtyv.s:2105   .text.mriBuffer_WriteIntegerAsHex:0000000000000000 $t
     /tmp/ccERbtyv.s:2111   .text.mriBuffer_WriteIntegerAsHex:0000000000000000 mriBuffer_WriteIntegerAsHex
     /tmp/ccERbtyv.s:2168   .text.mriBuffer_WriteIntegerAsHex:0000000000000020 $d
     /tmp/ccERbtyv.s:2173   .text.mriBuffer_IsNextCharEqualTo:0000000000000000 $t
     /tmp/ccERbtyv.s:2179   .text.mriBuffer_IsNextCharEqualTo:0000000000000000 mriBuffer_IsNextCharEqualTo
     /tmp/ccERbtyv.s:2248   .text.mriBuffer_IsNextCharEqualTo:0000000000000034 $d
     /tmp/ccERbtyv.s:2253   .text.mriBuffer_ReadIntegerAsHex:0000000000000000 $t
     /tmp/ccERbtyv.s:2259   .text.mriBuffer_ReadIntegerAsHex:0000000000000000 mriBuffer_ReadIntegerAsHex
     /tmp/ccERbtyv.s:2342   .text.mriBuffer_ReadIntegerAsHex:0000000000000034 $d
     /tmp/ccERbtyv.s:2347   .text.mriBuffer_MatchesString:0000000000000000 $t
     /tmp/ccERbtyv.s:2353   .text.mriBuffer_MatchesString:0000000000000000 mriBuffer_MatchesString
     /tmp/ccERbtyv.s:2402   .text.mriBuffer_MatchesString:0000000000000024 $d
     /tmp/ccERbtyv.s:2407   .text.mriBuffer_MatchesHexString:0000000000000000 $t
     /tmp/ccERbtyv.s:2413   .text.mriBuffer_MatchesHexString:0000000000000000 mriBuffer_MatchesHexString
     /tmp/ccERbtyv.s:2462   .text.mriBuffer_MatchesHexString:0000000000000024 $d
     /tmp/ccERbtyv.s:2467   .rodata.NibbleToHexChar:0000000000000000 $d
     /tmp/ccERbtyv.s:2473   .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
mriExceptionCode
mri_strncmp
mri_strlen
