ARM GAS  /tmp/cccb2wKl.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB136:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stm32f429xx_init.h>
  25:Core/Src/main.c **** #include <core/platforms.h>
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/cccb2wKl.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** UART_HandleTypeDef huart1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** Token g_token;
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/cccb2wKl.s 			page 3


  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   Token_Init(&g_token);
  91:Core/Src/main.c ****   mriStm32f429xx_Init(&g_token);
  92:Core/Src/main.c ****   Platform_CommSendChar('a');
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   //MX_USART1_UART_Init();
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Infinite loop */
 100:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 101:Core/Src/main.c ****   while (1)
 102:Core/Src/main.c ****   {
 103:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 104:Core/Src/main.c ****   HAL_Delay(1000);
 105:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 106:Core/Src/main.c ****   HAL_Delay(1000);
 107:Core/Src/main.c ****     /* USER CODE END WHILE */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 110:Core/Src/main.c ****   }
 111:Core/Src/main.c ****   /* USER CODE END 3 */
 112:Core/Src/main.c **** }
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /**
 115:Core/Src/main.c ****   * @brief System Clock Configuration
 116:Core/Src/main.c ****   * @retval None
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c **** void SystemClock_Config(void)
 119:Core/Src/main.c **** {
 120:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 129:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 145:Core/Src/main.c ****   */
ARM GAS  /tmp/cccb2wKl.s 			page 4


 146:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief USART1 Initialization Function
 161:Core/Src/main.c ****   * @param None
 162:Core/Src/main.c ****   * @retval None
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 165:Core/Src/main.c **** {
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 174:Core/Src/main.c ****   huart1.Instance = USART1;
 175:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 176:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 177:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 178:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 179:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 180:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 181:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 182:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** }
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** /**
 193:Core/Src/main.c ****   * @brief GPIO Initialization Function
 194:Core/Src/main.c ****   * @param None
 195:Core/Src/main.c ****   * @retval None
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c **** static void MX_GPIO_Init(void)
 198:Core/Src/main.c **** {
  28              		.loc 1 198 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cccb2wKl.s 			page 5


  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 199:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 199 3 view .LVU1
  42              		.loc 1 199 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 202:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 202 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 202 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 202 3 view .LVU5
  54 0012 194B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 202 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 202 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 202 3 view .LVU8
 203:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 203 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 203 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 203 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 203 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 203 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 203 3 view .LVU14
 204:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 204 3 view .LVU15
ARM GAS  /tmp/cccb2wKl.s 			page 6


  83              	.LBB6:
  84              		.loc 1 204 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 204 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 204 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00103 		and	r3, r3, #1
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 204 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 204 3 view .LVU20
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 207:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  98              		.loc 1 207 3 view .LVU21
  99 004e 0B4D     		ldr	r5, .L3+4
 100 0050 2246     		mov	r2, r4
 101 0052 4FF40051 		mov	r1, #8192
 102 0056 2846     		mov	r0, r5
 103 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 210:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 105              		.loc 1 210 3 view .LVU22
 106              		.loc 1 210 23 is_stmt 0 view .LVU23
 107 005c 4FF40053 		mov	r3, #8192
 108 0060 0393     		str	r3, [sp, #12]
 211:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 211 3 is_stmt 1 view .LVU24
 110              		.loc 1 211 24 is_stmt 0 view .LVU25
 111 0062 0123     		movs	r3, #1
 112 0064 0493     		str	r3, [sp, #16]
 212:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 212 3 is_stmt 1 view .LVU26
 114              		.loc 1 212 24 is_stmt 0 view .LVU27
 115 0066 0594     		str	r4, [sp, #20]
 213:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 213 3 is_stmt 1 view .LVU28
 117              		.loc 1 213 25 is_stmt 0 view .LVU29
 118 0068 0694     		str	r4, [sp, #24]
 214:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 119              		.loc 1 214 3 is_stmt 1 view .LVU30
 120 006a 03A9     		add	r1, sp, #12
 121 006c 2846     		mov	r0, r5
 122 006e FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL1:
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** }
 124              		.loc 1 216 1 is_stmt 0 view .LVU31
 125 0072 09B0     		add	sp, sp, #36
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cccb2wKl.s 			page 7


 128              		@ sp needed
 129 0074 30BD     		pop	{r4, r5, pc}
 130              	.L4:
 131 0076 00BF     		.align	2
 132              	.L3:
 133 0078 00380240 		.word	1073887232
 134 007c 00080240 		.word	1073874944
 135              		.cfi_endproc
 136              	.LFE136:
 138              		.section	.text.Error_Handler,"ax",%progbits
 139              		.align	1
 140              		.global	Error_Handler
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	Error_Handler:
 146              	.LFB137:
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /* USER CODE END 4 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 224:Core/Src/main.c ****   * @retval None
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c **** void Error_Handler(void)
 227:Core/Src/main.c **** {
 147              		.loc 1 227 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ Volatile: function does not return.
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 228:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 229:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 230:Core/Src/main.c ****   __disable_irq();
 153              		.loc 1 230 3 view .LVU33
 154              	.LBB7:
 155              	.LBI7:
 156              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
ARM GAS  /tmp/cccb2wKl.s 			page 8


  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/cccb2wKl.s 			page 9


  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cccb2wKl.s 			page 10


 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 157              		.loc 2 140 27 view .LVU34
 158              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 159              		.loc 2 142 3 view .LVU35
 160              		.syntax unified
 161              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 162 0000 72B6     		cpsid i
 163              	@ 0 "" 2
 164              		.thumb
 165              		.syntax unified
 166              	.L6:
 167              	.LBE8:
 168              	.LBE7:
 231:Core/Src/main.c ****   while (1)
 169              		.loc 1 231 3 discriminator 1 view .LVU36
 232:Core/Src/main.c ****   {
 233:Core/Src/main.c ****   }
 170              		.loc 1 233 3 discriminator 1 view .LVU37
 231:Core/Src/main.c ****   while (1)
 171              		.loc 1 231 9 discriminator 1 view .LVU38
 172 0002 FEE7     		b	.L6
 173              		.cfi_endproc
 174              	.LFE137:
 176              		.section	.text.SystemClock_Config,"ax",%progbits
 177              		.align	1
 178              		.global	SystemClock_Config
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 183              	SystemClock_Config:
 184              	.LFB134:
 119:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 185              		.loc 1 119 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 80
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 00B5     		push	{lr}
 190              	.LCFI3:
 191              		.cfi_def_cfa_offset 4
 192              		.cfi_offset 14, -4
 193 0002 95B0     		sub	sp, sp, #84
 194              	.LCFI4:
 195              		.cfi_def_cfa_offset 88
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 196              		.loc 1 120 3 view .LVU40
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/cccb2wKl.s 			page 11


 197              		.loc 1 120 22 is_stmt 0 view .LVU41
 198 0004 3022     		movs	r2, #48
 199 0006 0021     		movs	r1, #0
 200 0008 08A8     		add	r0, sp, #32
 201 000a FFF7FEFF 		bl	memset
 202              	.LVL2:
 121:Core/Src/main.c **** 
 203              		.loc 1 121 3 is_stmt 1 view .LVU42
 121:Core/Src/main.c **** 
 204              		.loc 1 121 22 is_stmt 0 view .LVU43
 205 000e 0023     		movs	r3, #0
 206 0010 0393     		str	r3, [sp, #12]
 207 0012 0493     		str	r3, [sp, #16]
 208 0014 0593     		str	r3, [sp, #20]
 209 0016 0693     		str	r3, [sp, #24]
 210 0018 0793     		str	r3, [sp, #28]
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 211              		.loc 1 125 3 is_stmt 1 view .LVU44
 212              	.LBB9:
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 213              		.loc 1 125 3 view .LVU45
 214 001a 0193     		str	r3, [sp, #4]
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 215              		.loc 1 125 3 view .LVU46
 216 001c 204A     		ldr	r2, .L13
 217 001e 116C     		ldr	r1, [r2, #64]
 218 0020 41F08051 		orr	r1, r1, #268435456
 219 0024 1164     		str	r1, [r2, #64]
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 220              		.loc 1 125 3 view .LVU47
 221 0026 126C     		ldr	r2, [r2, #64]
 222 0028 02F08052 		and	r2, r2, #268435456
 223 002c 0192     		str	r2, [sp, #4]
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 224              		.loc 1 125 3 view .LVU48
 225 002e 019A     		ldr	r2, [sp, #4]
 226              	.LBE9:
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 227              		.loc 1 125 3 view .LVU49
 126:Core/Src/main.c **** 
 228              		.loc 1 126 3 view .LVU50
 229              	.LBB10:
 126:Core/Src/main.c **** 
 230              		.loc 1 126 3 view .LVU51
 231 0030 0293     		str	r3, [sp, #8]
 126:Core/Src/main.c **** 
 232              		.loc 1 126 3 view .LVU52
 233 0032 1C4A     		ldr	r2, .L13+4
 234 0034 1368     		ldr	r3, [r2]
 235 0036 23F44043 		bic	r3, r3, #49152
 236 003a 43F40043 		orr	r3, r3, #32768
 237 003e 1360     		str	r3, [r2]
 126:Core/Src/main.c **** 
 238              		.loc 1 126 3 view .LVU53
 239 0040 1368     		ldr	r3, [r2]
 240 0042 03F44043 		and	r3, r3, #49152
 241 0046 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/cccb2wKl.s 			page 12


 126:Core/Src/main.c **** 
 242              		.loc 1 126 3 view .LVU54
 243 0048 029B     		ldr	r3, [sp, #8]
 244              	.LBE10:
 126:Core/Src/main.c **** 
 245              		.loc 1 126 3 view .LVU55
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 246              		.loc 1 131 3 view .LVU56
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 247              		.loc 1 131 36 is_stmt 0 view .LVU57
 248 004a 0123     		movs	r3, #1
 249 004c 0893     		str	r3, [sp, #32]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 250              		.loc 1 132 3 is_stmt 1 view .LVU58
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 251              		.loc 1 132 30 is_stmt 0 view .LVU59
 252 004e 4FF48033 		mov	r3, #65536
 253 0052 0993     		str	r3, [sp, #36]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 254              		.loc 1 133 3 is_stmt 1 view .LVU60
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 255              		.loc 1 133 34 is_stmt 0 view .LVU61
 256 0054 0223     		movs	r3, #2
 257 0056 0E93     		str	r3, [sp, #56]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 258              		.loc 1 134 3 is_stmt 1 view .LVU62
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 259              		.loc 1 134 35 is_stmt 0 view .LVU63
 260 0058 4FF48002 		mov	r2, #4194304
 261 005c 0F92     		str	r2, [sp, #60]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 262              		.loc 1 135 3 is_stmt 1 view .LVU64
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 263              		.loc 1 135 30 is_stmt 0 view .LVU65
 264 005e 1922     		movs	r2, #25
 265 0060 1092     		str	r2, [sp, #64]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 266              		.loc 1 136 3 is_stmt 1 view .LVU66
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 267              		.loc 1 136 30 is_stmt 0 view .LVU67
 268 0062 A822     		movs	r2, #168
 269 0064 1192     		str	r2, [sp, #68]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 270              		.loc 1 137 3 is_stmt 1 view .LVU68
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 271              		.loc 1 137 30 is_stmt 0 view .LVU69
 272 0066 1293     		str	r3, [sp, #72]
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 273              		.loc 1 138 3 is_stmt 1 view .LVU70
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 274              		.loc 1 138 30 is_stmt 0 view .LVU71
 275 0068 0423     		movs	r3, #4
 276 006a 1393     		str	r3, [sp, #76]
 139:Core/Src/main.c ****   {
 277              		.loc 1 139 3 is_stmt 1 view .LVU72
 139:Core/Src/main.c ****   {
 278              		.loc 1 139 7 is_stmt 0 view .LVU73
ARM GAS  /tmp/cccb2wKl.s 			page 13


 279 006c 08A8     		add	r0, sp, #32
 280 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 281              	.LVL3:
 139:Core/Src/main.c ****   {
 282              		.loc 1 139 6 view .LVU74
 283 0072 80B9     		cbnz	r0, .L11
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 284              		.loc 1 146 3 is_stmt 1 view .LVU75
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 285              		.loc 1 146 31 is_stmt 0 view .LVU76
 286 0074 0F23     		movs	r3, #15
 287 0076 0393     		str	r3, [sp, #12]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 288              		.loc 1 148 3 is_stmt 1 view .LVU77
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 289              		.loc 1 148 34 is_stmt 0 view .LVU78
 290 0078 0221     		movs	r1, #2
 291 007a 0491     		str	r1, [sp, #16]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 292              		.loc 1 149 3 is_stmt 1 view .LVU79
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 293              		.loc 1 149 35 is_stmt 0 view .LVU80
 294 007c 0023     		movs	r3, #0
 295 007e 0593     		str	r3, [sp, #20]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 296              		.loc 1 150 3 is_stmt 1 view .LVU81
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 297              		.loc 1 150 36 is_stmt 0 view .LVU82
 298 0080 4FF48052 		mov	r2, #4096
 299 0084 0692     		str	r2, [sp, #24]
 151:Core/Src/main.c **** 
 300              		.loc 1 151 3 is_stmt 1 view .LVU83
 151:Core/Src/main.c **** 
 301              		.loc 1 151 36 is_stmt 0 view .LVU84
 302 0086 0793     		str	r3, [sp, #28]
 153:Core/Src/main.c ****   {
 303              		.loc 1 153 3 is_stmt 1 view .LVU85
 153:Core/Src/main.c ****   {
 304              		.loc 1 153 7 is_stmt 0 view .LVU86
 305 0088 03A8     		add	r0, sp, #12
 306 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 307              	.LVL4:
 153:Core/Src/main.c ****   {
 308              		.loc 1 153 6 view .LVU87
 309 008e 20B9     		cbnz	r0, .L12
 157:Core/Src/main.c **** 
 310              		.loc 1 157 1 view .LVU88
 311 0090 15B0     		add	sp, sp, #84
 312              	.LCFI5:
 313              		.cfi_remember_state
 314              		.cfi_def_cfa_offset 4
 315              		@ sp needed
 316 0092 5DF804FB 		ldr	pc, [sp], #4
 317              	.L11:
 318              	.LCFI6:
 319              		.cfi_restore_state
 141:Core/Src/main.c ****   }
ARM GAS  /tmp/cccb2wKl.s 			page 14


 320              		.loc 1 141 5 is_stmt 1 view .LVU89
 321 0096 FFF7FEFF 		bl	Error_Handler
 322              	.LVL5:
 323              	.L12:
 155:Core/Src/main.c ****   }
 324              		.loc 1 155 5 view .LVU90
 325 009a FFF7FEFF 		bl	Error_Handler
 326              	.LVL6:
 327              	.L14:
 328 009e 00BF     		.align	2
 329              	.L13:
 330 00a0 00380240 		.word	1073887232
 331 00a4 00700040 		.word	1073770496
 332              		.cfi_endproc
 333              	.LFE134:
 335              		.section	.text.main,"ax",%progbits
 336              		.align	1
 337              		.global	main
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	main:
 343              	.LFB133:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 344              		.loc 1 67 1 view -0
 345              		.cfi_startproc
 346              		@ Volatile: function does not return.
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 0000 08B5     		push	{r3, lr}
 350              	.LCFI7:
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 3, -8
 353              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 354              		.loc 1 75 3 view .LVU92
 355 0002 FFF7FEFF 		bl	HAL_Init
 356              	.LVL7:
  82:Core/Src/main.c **** 
 357              		.loc 1 82 3 view .LVU93
 358 0006 FFF7FEFF 		bl	SystemClock_Config
 359              	.LVL8:
  89:Core/Src/main.c ****   Token_Init(&g_token);
 360              		.loc 1 89 3 view .LVU94
 361 000a FFF7FEFF 		bl	MX_GPIO_Init
 362              	.LVL9:
  90:Core/Src/main.c ****   mriStm32f429xx_Init(&g_token);
 363              		.loc 1 90 3 view .LVU95
 364 000e 104C     		ldr	r4, .L18
 365 0010 2046     		mov	r0, r4
 366 0012 FFF7FEFF 		bl	mriToken_Init
 367              	.LVL10:
  91:Core/Src/main.c ****   Platform_CommSendChar('a');
 368              		.loc 1 91 3 view .LVU96
 369 0016 2046     		mov	r0, r4
 370 0018 FFF7FEFF 		bl	mriStm32f429xx_Init
 371              	.LVL11:
ARM GAS  /tmp/cccb2wKl.s 			page 15


  92:Core/Src/main.c **** 
 372              		.loc 1 92 3 view .LVU97
 373 001c 6120     		movs	r0, #97
 374 001e FFF7FEFF 		bl	mriPlatform_CommSendChar
 375              	.LVL12:
 376              	.L16:
 101:Core/Src/main.c ****   {
 377              		.loc 1 101 3 discriminator 1 view .LVU98
 103:Core/Src/main.c ****   HAL_Delay(1000);
 378              		.loc 1 103 3 discriminator 1 view .LVU99
 379 0022 0C4C     		ldr	r4, .L18+4
 380 0024 0022     		movs	r2, #0
 381 0026 4FF40051 		mov	r1, #8192
 382 002a 2046     		mov	r0, r4
 383 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 384              	.LVL13:
 104:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 385              		.loc 1 104 3 discriminator 1 view .LVU100
 386 0030 4FF47A70 		mov	r0, #1000
 387 0034 FFF7FEFF 		bl	HAL_Delay
 388              	.LVL14:
 105:Core/Src/main.c ****   HAL_Delay(1000);
 389              		.loc 1 105 3 discriminator 1 view .LVU101
 390 0038 0122     		movs	r2, #1
 391 003a 4FF40051 		mov	r1, #8192
 392 003e 2046     		mov	r0, r4
 393 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 394              	.LVL15:
 106:Core/Src/main.c ****     /* USER CODE END WHILE */
 395              		.loc 1 106 3 discriminator 1 view .LVU102
 396 0044 4FF47A70 		mov	r0, #1000
 397 0048 FFF7FEFF 		bl	HAL_Delay
 398              	.LVL16:
 101:Core/Src/main.c ****   {
 399              		.loc 1 101 9 discriminator 1 view .LVU103
 400 004c E9E7     		b	.L16
 401              	.L19:
 402 004e 00BF     		.align	2
 403              	.L18:
 404 0050 00000000 		.word	g_token
 405 0054 00080240 		.word	1073874944
 406              		.cfi_endproc
 407              	.LFE133:
 409              		.global	g_token
 410              		.section	.bss.g_token,"aw",%nobits
 411              		.align	2
 414              	g_token:
 415 0000 00000000 		.space	116
 415      00000000 
 415      00000000 
 415      00000000 
 415      00000000 
 416              		.global	huart1
 417              		.section	.bss.huart1,"aw",%nobits
 418              		.align	2
 421              	huart1:
 422 0000 00000000 		.space	68
ARM GAS  /tmp/cccb2wKl.s 			page 16


 422      00000000 
 422      00000000 
 422      00000000 
 422      00000000 
 423              		.text
 424              	.Letext0:
 425              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 426              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 427              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 428              		.file 6 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 429              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 430              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 431              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 432              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 433              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 434              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 435              		.file 13 "mri/core/token.h"
 436              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 437              		.file 15 "mri/core/platforms.h"
 438              		.file 16 "mri/devices/stm32f429xx/stm32f429xx_init.h"
 439              		.file 17 "<built-in>"
ARM GAS  /tmp/cccb2wKl.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cccb2wKl.s:21     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cccb2wKl.s:26     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cccb2wKl.s:133    .text.MX_GPIO_Init:0000000000000078 $d
     /tmp/cccb2wKl.s:139    .text.Error_Handler:0000000000000000 $t
     /tmp/cccb2wKl.s:145    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cccb2wKl.s:177    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cccb2wKl.s:183    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cccb2wKl.s:330    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/cccb2wKl.s:336    .text.main:0000000000000000 $t
     /tmp/cccb2wKl.s:342    .text.main:0000000000000000 main
     /tmp/cccb2wKl.s:404    .text.main:0000000000000050 $d
     /tmp/cccb2wKl.s:414    .bss.g_token:0000000000000000 g_token
     /tmp/cccb2wKl.s:411    .bss.g_token:0000000000000000 $d
     /tmp/cccb2wKl.s:421    .bss.huart1:0000000000000000 huart1
     /tmp/cccb2wKl.s:418    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
mriToken_Init
mriStm32f429xx_Init
mriPlatform_CommSendChar
HAL_Delay
